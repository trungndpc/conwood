{"version":3,"sources":["component/Layout.js","utils/ProvinceUtil.js","utils/CementUtil.js","utils/APIUtils.js","model/UserModel.js","constant/UserStatus.js","utils/AlertUtils.js","utils/DateTimeUtil.js","UserPage.tsx","component/chart/index.tsx","model/FormModel.js","model/GiftModel.js","Dashboard.tsx","StockForm.tsx","popup/index.js","DetailUserPage.tsx","constant/UserType.js","component/INSEEEditor.js","utils/UploadFileUtil.js","model/PostModel.js","model/PromotionModel.js","CreatePost.tsx","reportWebVitals.ts","constant/PostStatus.js","Posts.tsx","UpdatePost.tsx","CreateOrUpdatePromotion.tsx","constant/PromotionType.js","constant/PromotionStatus.js","Promotions.tsx","constant/StockFormStatus.js","promotion/DetailStockPromotion.tsx","model/LQPromotionModel.js","constant/TopicStatus.js","promotion/DetailLQuizTopic.tsx","promotion/DetailLQuizPromotion.tsx","model/MatchFootballModel.js","model/AccumulationModel.js","promotion/DetailPredictFootballPromotion.tsx","DetailPromotion.tsx","gift/popup.tsx","promotion/DetailStockForm.tsx","DetailForm.tsx","ListLightingQuizForm.tsx","Egagements.tsx","constant/BroadcastType.js","model/BroadcastModel.js","CreateOrUpdateBroadcast.tsx","constant/BroadcastStatus.js","BroadcastPage.tsx","DetailBroadcast.tsx","PromotionForms.tsx","DashboardUser.tsx","DashboardEgagements.tsx","DashboardPromotion.tsx","CreateOrUpdateEngagement.tsx","DashboardGift.tsx","constant/GiftStatus.js","Gifts.tsx","model/PredictMatchFootballFormModel.js","ListPredictFootballForm.tsx","index.tsx"],"names":["Layout","isActive","name","window","location","pathname","startsWith","className","id","style","height","src","alt","to","this","type","placeholder","href","props","children","React","PureComponent","compare","a","b","value","listCity","optionsCity","key","data","r","status","push","label","sort","listDistrict","forEach","district","o","cityId","City","District","districtId","city","districts","rs","listCityIds","options","lstDistrict","getList","ldistrict","option","CementEnum","group","POWERS","WALL_PRO","LAVILLA_EXTRA_CC40","EXTRA_DURABLE_HOUSING","POWER_FAST","QUICK_CAST","STABLE_SOIL","COMPACT_ROCK","EXTRA_DURABLE","MASS_POUR","EASY_FLOW","POWER_CAST","PITU_FILL","fetch","APIUtils","url","success","error","method","credentials","then","resp","json","returnedValue","catch","ex","formData","headers","body","UserModel","Promise","resolve","reject","APIUtil","getJSONWithCredentials","process","page","pageSize","form","postJSONWithCredentials","JSON","stringify","note","FormData","append","uploadFile","findName","findColor","AlertUtils","message","Alert","position","effect","timeout","offset","warning","month_to_vi","DateTimeUtil","timestamp","date","Date","day","getDate","month","getMonth","year","getFullYear","str","arr","split","mon","UserPage","useSearchParams","searchParams","setSearchParams","useState","userPage","setUserPage","isOpenImportCustomerPopup","setIsOpenImportCustomerPopup","filter","setFilter","fetchUsers","find","serialize2Url","f","set","useEffect","param","get","userFilter","parse","ImportCustomerPopup","open","onCloseModal","padding","onChange","e","Number","currentTarget","map","marginRight","onClick","backgroundColor","URL","toString","exportUser","list","user","avatar","phone","getName","inseeId","createdTime","UserStatus","utm","fontSize","owlClass","file","setFile","onClose","center","showCloseIcon","styles","modal","background","backdropFilter","borderRadius","width","margin","event","target","files","paddingRight","float","showSuccess","showError","msg","UserCityMetricChart","setOption","series","i","length","metric","y","total","chart","plotBackgroundColor","plotBorderWidth","plotShadow","title","text","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","colorByPoint","buildOption","constructorType","highcharts","Highcharts","UserDateMetricChart","dataSeries","categories","toStringNotYear","parseDate","xAxis","labels","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","column","pointPadding","borderWidth","FormModel","promotionId","topicId","promotionIds","formId","GiftModel","gift","Dashboard","countUser","setCountUser","lstUserCity","setLstUserCity","lstUserDate","setLstUserDate","listFormPromotion","setlistFormPromotion","countFormPromotion","setCountFormPromotion","countgift","setCountGift","count","statsUserCity","statsUserDate","statsFormBypromotion","countByTypePromotion","numApprovedUser","promotion","engagement","role","tabIndex","stat","timeStart","toLocaleDateString","display","StockForm","AreYouSurePopup","onAgree","maxWidth","minWidth","AreYouSureWithNotePopup","setNote","rows","DetailUserPage","useParams","isShowConfirmPopup","setIsShowConfirmPopup","isShowConfirmUpdatePopup","setIsShowConfirmUpdatePopup","isShowConfirmWithNotePopup","setIsShowConfirmWithNotePopup","setUser","fetchUser","updateStatus","update","htmlFor","roleId","address","marginLeft","INSEEEditor","myRef","ClassicEditor","create","document","querySelector","fontFamily","supportAllValues","fontColor","columns","documentColors","toolbar","items","language","image","table","contentToolbar","licenseKey","editor","console","current","getValue","getData","setValue","setData","defaultProps","UploadFileUtil","photo","ctrl","AbortController","setTimeout","abort","log","PostModel","post","PromotionModel","types","locationOptions","getOptions","CreatePost","navigate","useNavigate","inputImgRef","useRef","editorRef","previewImg","setPreviewImg","postForm","setPostForm","errorMsg","setErrorMsg","lstPromotion","setLstPromotion","submit","content","summary","uploadImg","cover","listPromotionForPost","ref","createObjectURL","maxHeight","click","selected","isClearable","isMulti","x","cityIds","districtIds","getOption","valueAsDate","getTime","timeEnd","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Posts","postPage","setPostPage","selectedId","setSelectedId","isShowApprovedPopup","setIsShowApprovedPopup","isShowRemovedPopup","setIsShowRemovedPopup","fetchPostPage","l","join","PostStatus","UpdatePost","setPost","urlCover","toISOString","slice","time","CreateOrUpdatePromotion","setForm","disabled","STOCK_PROMOTION_TYPE","LIGHTING_QUIZ_GAME_PROMOTION_TYPE","Promotions","promotionPage","setPromotionPage","fetchPromotionPage","PromotionType","PromotionStatus","DetailStockPromotion","formPage","setFormPage","findByPromotionId","item","toLocaleString","StockFormStatus","LQPromotionModel","topic","question","DetailLQuizTopic","setTopic","setQuestion","isShowImgModel","setIsShowImgModel","fetchTopic","getTopic","LQuizTopicModal","questions","rights","right","isValid","wrongOptions","textAlign","marginBottom","paddingBottom","paddingTop","checked","tmpQuestion","createOrUpdateQuestion","DetailLQuizPromotion","ListTopicLQuiz","isShowTopicModal","setIsShowTopicModal","promtoion","setPromotion","fetchLQPromotion","updateStatusTopic","TopicPopup","topics","TopicStatus","MatchFootballModel","matchId","scoreTeamOne","scoreTeamTwo","AccumulationModel","DetailPredictFootballPromotion","matchPage","setMatchPage","topPage","setTopPage","isShowUpdateResultPopop","setIsShowUpdateResultPopop","selectMatch","setSelectMatch","showPage","setShowPage","fetchListMatch","UpdateResultMatchPopup","updateResult","undefined","teamOne","teamTwo","match","index","moment","teamOneScore","teamTwoScore","totalPredict","totalWin","totalFailed","accumulation","setScoreTeamOne","setScoreTeamTwo","DetailPromotion","statsForm","setStatsForm","statsByPromotion","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","cx","cy","x1","y1","x2","y2","d","approved","SendGiftPopup","userId","phoneCardRef","cardPhones","c","cardPhone","countValue","CardPhoneComponent","state","cards","refs","Map","add","lst","childRef","setState","remove","delete","card","CardPhoneItemComponent","network","border","seri","code","DetailStockForm","isShowApporvedPopup","setIsShowApporvedPopup","isRejectPopup","setIsRejectPopup","selectedJSONImg","setSelectedJSONImg","isShowGiftPopup","setIsShowGiftPopup","fetchForm","sendGift","formGift","bags","cements","CementUtil","jsonImgs","jsonImg","updateStockForm","ImagePopup","marginTop","lineHeight","DetailForm","ListLightingQuizForm","setPage","isShowPopup","setIsShowPopup","fetchLQForm","findLQForm","endTopic","jsonDetail","Egagements","BroadcastModel","cityOptions","CreateOrUpdateBroadcast","lstPost","setLstPost","BroadcastType","postId","BroadcastPage","broadcastPage","setBroadcastPage","fetchBroadcastPage","broadcast","BroadcastStatus","DetailBroadcast","setBroadcast","totalUids","totalUidsSuccessSend","userIds","PromotionForms","listPromotion","setListPromotion","fetchFormPromotions","ids","findStockForm","DashboardUser","numUser","numWaitingReviewUser","numWaitingActiveUser","DashboardEgagements","countFormByPromotion","setCountFormByPromotion","selectedPromotion","setSelectedPromotion","countFormByTypePromotion","TypePromotion","init","receivedGift","alert","DashboardPromotion","CreateOrUpdateEngagement","DashboardGift","countGift","send","received","Gifts","gifts","setGifts","GiftStatus","PredictMatchFootballFormModel","ListPredictFootballForm","pageForm","setPageForm","teamWin","ReactDOM","render","StrictMode","path","element","stack","limit","getElementById"],"mappings":"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","file":"static/js/main.d9295935.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Layout extends React.PureComponent {\n\n\n    isActive = (name) => {\n        let path = window.location.pathname;\n        return path.startsWith(name);\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <nav id=\"sidebar\" className=\"sidebar\">\n                    <a className=\"sidebar-brand\">\n                        <img style={{ height: '30px' }} src=\"https://ximanginsee.gapit.com.vn/html/images/logo.png\" />\n                    </a>\n                    <div className=\"sidebar-content\">\n                        <div className=\"sidebar-user\">\n                            <img src=\"https://conwoodvietnam.com/wp-content/themes/conwoodid/dist/images/conwood_logo.png\" className=\"img-fluid  mb-2\" alt=\"Linda Miller\" />\n                            <div className=\"font-weight-bold\">CONWOOD ADMIN</div>\n                        </div>\n                        <ul className=\"sidebar-nav\">\n                            <li className=\"sidebar-header\">\n                                Main\n                            </li>\n                            <li className=\"sidebar-item\">\n                                <Link to=\"/\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle mr-2 fas fa-fw fa-home\" /> <span className=\"align-middle\">Dashboards</span>\n                                </Link>\n                            </li>\n                            <li className={`sidebar-item ${this.isActive('/user') && 'active'}`}>\n                                <Link to=\"/user\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle fas fa-fw fa-store\" /> <span className=\"align-middle\">Thành viên</span>\n                                </Link>\n                                <ul className={`sidebar-dropdown list-unstyled collapse ${this.isActive('/user') ? ' show' : ''}`} data-parent=\"#sidebar\">\n                                    <li className=\"sidebar-item active\"><Link className=\"sidebar-link\" to={\"/user/list\"}>Danh sách</Link></li>\n                                </ul>\n                            </li>\n                            <li className={`sidebar-item ${this.isActive('/post') && 'active'}`}>\n                                <Link to=\"/post\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle mr-2 fas fa-fw fa-sign-in-alt\" /> <span className=\"align-middle\">Bài viết</span>\n                                </Link>\n                            </li>\n                            <li className={`sidebar-item ${this.isActive('/promotion') && 'active'}`}>\n                                <Link to=\"/promotion\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle fas fa-fw fas fa-ad\" /> <span className=\"align-middle\">Khuyến mãi </span>\n                                </Link>\n                                <ul className={`sidebar-dropdown list-unstyled collapse ${this.isActive('/promotion') ? ' show' : ''}`} data-parent=\"#sidebar\">\n                                    <li className=\"sidebar-item active\"><Link className=\"sidebar-link\" to={\"/promotion/list\"}>DS Chiến dịch</Link></li>\n                                    <li className=\"sidebar-item active\"><Link className=\"sidebar-link\" to={\"/promotion/forms\"}>Danh sách đơn</Link></li>\n                                </ul>\n                            </li>\n                            {/* <li className={`sidebar-item ${this.isActive('/egagement') && 'active'}`}>\n                                <Link to=\"/egagement\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle far fa-fw fa-heart\" /> <span className=\"align-middle\">Engagements</span>\n                                </Link>\n                                <ul className={`sidebar-dropdown list-unstyled collapse ${this.isActive('/egagement') ? ' show' : ''}`} data-parent=\"#sidebar\">\n                                    <li className=\"sidebar-item active\"><Link className=\"sidebar-link\" to={\"/egagement/list\"}>DS Chiến dịch</Link></li>\n                                </ul>\n                            </li> */}\n                            <li className={`sidebar-item ${this.isActive('/broadcast') && 'active'}`}>\n                                <Link to=\"/broadcast\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle fas fa-fw fa-bullhorn\" /> <span className=\"align-middle\">Broadcast</span>\n                                </Link>\n                            </li>\n                            <li className={`sidebar-item ${this.isActive('/gift') && 'active'}`}>\n                                <Link to=\"/gift\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle fas fa-fw fa-gift\" /> <span className=\"align-middle\">Quà tặng</span>\n                                </Link>\n                                <ul className={`sidebar-dropdown list-unstyled collapse ${this.isActive('/gift') ? ' show' : ''}`} data-parent=\"#sidebar\">\n                                    <li className=\"sidebar-item active\"><Link className=\"sidebar-link\" to={\"/gift/list\"}>Danh sách</Link></li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <div className=\"main\">\n                    <nav className=\"navbar navbar-expand navbar-theme\">\n                        <a className=\"sidebar-toggle d-flex mr-2\">\n                            <i className=\"hamburger align-self-center\" />\n                        </a>\n                        <form className=\"form-inline d-none d-sm-inline-block\">\n                            <input className=\"form-control form-control-lite\" type=\"text\" placeholder=\"Search projects...\" />\n                        </form>\n                        <div className=\"navbar-collapse collapse\">\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item dropdown ml-lg-2\">\n                                    <a className=\"nav-link dropdown-toggle position-relative\" href=\"#\" id=\"userDropdown\" data-toggle=\"dropdown\">\n                                        <i className=\"align-middle fas fa-cog\" />\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n\n}","import data from './province.json'\n\nfunction compare(a, b) {\n    if (a.value < b.value) {\n        return -1;\n    }\n    if (a.value > b.value) {\n        return 1;\n    }\n    return 0;\n}\n\nvar listCity = [];\nvar optionsCity = [];\nfor (const key in data) {\n    let r = { key: key, value: data[key].name }\n    if (data[key].status != 0) {\n        listCity.push(r);\n        optionsCity.push({ value: key, label: data[key].name })\n    }\n}\nlistCity = listCity.sort(compare)\noptionsCity = optionsCity.sort(compare)\n\n\nvar listDistrict = [];\nfor (const key in data) {\n    let city = data[key];\n    let districts = city[\"districts\"];\n    districts.forEach(district => {\n        let o = { key: district.id, value: { name: district.name, cityId: key } }\n        listDistrict.push(o);\n    });\n}\n\n\nexport class City {\n\n    static getName(id) {\n        for (const key in data) {\n            if (id == key) {\n                return data[key].name;\n            }\n        }\n        return null;\n    }\n\n    static getList() {\n        return listCity\n    }\n\n    static getOptions() {\n        return optionsCity;\n    }\n}\n\nexport class District {\n    static getName(districtId) {\n        for (const district of listDistrict) {\n            if (district.key == districtId) {\n                return district.value.name;\n            }\n        }\n    }\n\n    static getList(cityId) {\n        if (cityId == 0) {\n            return []\n        }\n        let city = data[cityId];\n        let districts = city ? city.districts : [];\n        let rs = []\n        for (const district of districts) {\n            let o = { key: district.id, value: district.name }\n            rs.push(o);\n        }\n        rs = rs.sort(compare);\n        return rs;\n    }\n\n    static getOption(listCityIds) {\n        let options = []\n        for (const cityId of listCityIds) {\n            let lstDistrict = this.getList(cityId)\n            if (lstDistrict) {\n                for (const ldistrict of lstDistrict) {\n                    let option = { value: ldistrict.key, label: ldistrict.value }\n                    options.push(option);\n                }\n            }\n        }\n        return options;\n    }\n}","export class CementEnum {\n    constructor(id, name, group) {\n        this.id = id;\n        this.name = name;\n        this.group = group;\n    }\n}\n\nexport function findById(id) {\n    switch (id) {\n        case 1: return POWERS;\n        case 2: return WALL_PRO;\n        case 3: return LAVILLA_EXTRA_CC40;\n        case 4: return EXTRA_DURABLE_HOUSING;\n        case 5: return POWER_FAST;\n        case 6: return QUICK_CAST;\n        case 7: return STABLE_SOIL;\n        case 8: return COMPACT_ROCK;\n        case 9: return EXTRA_DURABLE;\n        case 10: return MASS_POUR;\n        case 11: return EASY_FLOW;\n        case 12: return POWER_CAST;\n        case 13: return PITU_FILL;\n    }\n}\n\nexport function getList() {\n    return [POWERS, WALL_PRO, LAVILLA_EXTRA_CC40, EXTRA_DURABLE_HOUSING, POWER_FAST, QUICK_CAST, STABLE_SOIL, COMPACT_ROCK, EXTRA_DURABLE, MASS_POUR, EASY_FLOW, POWER_CAST, PITU_FILL]\n}\n\n\nexport function getListForRetailer() {\n    return [POWERS, WALL_PRO, LAVILLA_EXTRA_CC40, EXTRA_DURABLE_HOUSING]\n}\n\nexport function getOption() {\n    const list = getList();\n    return list.map(item => {\n        return { value: item.id, label: item.name };\n    });\n}\n\nexport const POWERS = new CementEnum(1, \"INSEE Power-S\", 1);\nexport const WALL_PRO = new CementEnum(2, \"INSEE Wall Pro\", 1);\nexport const LAVILLA_EXTRA_CC40 = new CementEnum(3, \"Lavilla Xtra CC40\", 1);\nexport const EXTRA_DURABLE_HOUSING = new CementEnum(4, \"INSEE Extra Durable\", 1);\nexport const POWER_FAST = new CementEnum(5, \"INSEE Power Fast \", 1);\nexport const QUICK_CAST = new CementEnum(6, \"INSEE Quick Cast \", 2);\nexport const STABLE_SOIL = new CementEnum(7, \"INSEE Stable Soil \", 2);\nexport const COMPACT_ROCK = new CementEnum(8, \"INSEE Compact Rock \", 2);\nexport const EXTRA_DURABLE = new CementEnum(9, \"INSEE Extra Durable \", 2);\nexport const MASS_POUR = new CementEnum(10, \"INSEE Mass Pour\", 2);\nexport const EASY_FLOW = new CementEnum(11, \"INSEE Easy Flow\", 2);\nexport const POWER_CAST = new CementEnum(12, \"INSEE Power Cast\", 2);\nexport const PITU_FILL = new CementEnum(13, \"INSEE Pitu Fill \", 2);","import 'whatwg-fetch';\nlet fetch = window.fetch;\n\nexport default class APIUtils {\n  static getJSONWithCredentials(url, success, error) {\n    fetch(url, {\n      method: 'get',\n      credentials: 'include'\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static getJSONWithoutCredentials(url, success, error) {\n    fetch(url, {\n      method: 'get'\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postJSONWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postJSONWithoutCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postFormDataWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postFileWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postFormDataContainFileWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static uploadFile(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function (ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n}\n","import APIUtil from '../utils/APIUtils'\n\nexport default class UserModel {\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static count() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/count`, resolve, reject);\n        });\n    }\n\n    static statsUserCity() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/stats-user-city`, resolve, reject);\n        });\n    }\n\n    static statsUserDate() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/stats-user-date`, resolve, reject);\n        });\n    }\n\n    static find(city, status, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/find?page=${page}&pageSize=${pageSize}${(city && city != 0) ? ('&city=' + city) : ''}${(status && status != 0) ? ('&status=' + status) : ''}`, resolve, reject);\n        });\n    }\n\n    static create(form) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/upload-customer`, JSON.stringify(form), resolve, reject);\n        });\n    }\n\n    static update(id, form) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/update?id=${id}`, JSON.stringify(form), resolve, reject);\n        });\n    }\n\n    static updateStatus(id, status, note) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/update-status?&uid=${id}&status=${status}${note ? ('&note=' + note) : ''}`, resolve, reject);\n        });\n    }\n\n    static uploadFile(data) {\n        const formData = new FormData();\n        formData.append(\"file\", data);\n        return new Promise((resolve, reject) => {\n            APIUtil.uploadFile(process.env.REACT_APP_DOMAIN + `/api/user/upload-customer-excel`, formData, resolve, reject);\n        });\n    }\n\n}","export const  DISABLED = -1;\nexport const  WAIT_COMPLETE_PROFILE = 5;\nexport const  WAITING_ACTIVE = 7;\nexport const  WAIT_APPROVAL = 8;\nexport const  APPROVED = 10;\nexport const REJECTED = 11;\n\nexport function findName(value) {\n    switch(value) {\n        case DISABLED : return 'Khởi tạo'\n        case WAIT_COMPLETE_PROFILE : return 'Chưa hoàn thành hồ sơ'\n        case WAITING_ACTIVE : return 'Chờ kích hoạt'\n        case WAIT_APPROVAL: return 'Chờ duyệt'\n        case APPROVED : return 'Đã duyệt'\n        case REJECTED : return 'Đã từ chối'\n    }\n}\n\nexport function findColor(value) {\n    switch(value) {\n        case DISABLED : return '#20c997'\n        case WAIT_COMPLETE_PROFILE : return '#dc3535'\n        case WAITING_ACTIVE : return '#6f42c1'\n        case WAIT_APPROVAL : return '#dc3545'\n        case APPROVED: return '#28a745'\n        case REJECTED: return '#28a745'\n    }\n}","import Alert from 'react-s-alert';\n\nexport default class AlertUtils {\n\n  static showSuccess(message) {\n    Alert.success(message, {\n      position: 'top-right',\n      effect: 'slide',\n      timeout: 4000,\n      offset: 50\n    });\n  }\n\n  static showWarning(message) {\n    Alert.warning(message, {\n      position: 'top-right',\n      effect: 'slide',\n      timeout: 4000,\n      offset: 50\n    });\n  }\n\n  static showError(message) {\n    Alert.error(message, {\n      position: 'top-right',\n      effect: 'slide',\n      timeout: 4000,\n      offset: 50\n    });\n  }\n}\n","const month_to_vi = {\n    1: 'tháng 1',\n    2: 'tháng 2',\n    3: 'tháng 3',\n    4: 'tháng 4',\n    5: 'tháng 5',\n    6: 'tháng 6',\n    7: 'tháng 7',\n    8: 'tháng 8',\n    9: 'tháng 9',\n    10: 'tháng 10',\n    11: 'tháng 11',\n    12: 'tháng 12'\n}\nexport default class DateTimeUtil {\n    static toString(timestamp) {\n        let date = new Date(timestamp);\n        let day = date.getDate();\n        let month = date.getMonth() + 1;\n        let year = date.getFullYear();\n        return day + ' ' + month_to_vi[month] + ', ' + year;\n    }\n\n    static toStringForSysten(timestamp) {\n        let date = new Date(timestamp);\n        return date.getFullYear() + \"-\" + date.getMonth() + 1 + \"-\" + date.getDate();\n    }\n\n    static parseDate(str) {\n        let arr = str.split(\"-\");\n        return new Date(arr[0], arr[1] - 1, arr[2]);\n    }\n\n    static toStringNotYear(date) {\n        let mon = date.getMonth() + 1;\n        let day = date.getDate();\n        return day + ', th' + mon;\n    }\n\n}\n\n","import Layout from \"./component/Layout\";\nimport Modal from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { RegisterForm, Page, User, UserFilter } from \"./interface\";\nimport { City, District } from './utils/ProvinceUtil'\nimport { getListForRetailer } from \"./utils/CementUtil\";\nimport UserModel from \"./model/UserModel\";\nimport { Link } from \"react-router-dom\";\nimport * as UserStatus from './constant/UserStatus';\nimport AlertUtils from \"./utils/AlertUtils\";\nimport DateTimeUtil from \"./utils/DateTimeUtil\";\nimport { useSearchParams } from 'react-router-dom';\n\nconst default_avatar = 'http://cdn.onlinewebfonts.com/svg/img_264570.png'\nconst PAGE_SIZE = 500;\nfunction UserPage() {\n  let [searchParams, setSearchParams] = useSearchParams();\n  const [userPage, setUserPage] = useState<Page<User>>()\n  const [isOpenImportCustomerPopup, setIsOpenImportCustomerPopup] = useState(false)\n  const [filter, setFilter] = useState<UserFilter>({} as UserFilter)\n\n  const fetchUsers = (cityId: number, status: number) => {\n    UserModel.find(cityId, status, 0, PAGE_SIZE)\n      .then(resp => {\n        if (resp.error == 0) {\n          setUserPage(resp.data)\n          serialize2Url({ ...filter, cityId: cityId, status: status })\n        }\n      })\n  }\n\n  const exportUser = () => {\n    var url = new URL(`${process.env.REACT_APP_DOMAIN}/api/user/export-excel`);\n    if (filter.status && filter.status != 0) {\n      url.searchParams.append('status', filter.status + '');\n    }\n    if (filter.cityId && filter.cityId != 0) {\n      url.searchParams.append('city', filter.cityId + '');\n    }\n    window.open(url.toString(), '_blank')\n  }\n\n  const serialize2Url = (f: UserFilter) => {\n    var str = JSON.stringify(f)\n    if (str != \"{}\") {\n      searchParams.set('filter', str)\n      setSearchParams(searchParams)\n    }\n  }\n\n  useEffect(() => {\n    var param = searchParams.get('filter') as string;\n    var userFilter = { ...filter }\n    if (param) {\n      userFilter = JSON.parse(param)\n    }\n    fetchUsers(userFilter.cityId, userFilter.status)\n    setFilter(userFilter)\n  }, [])\n\n  return (\n    <Layout>\n      {isOpenImportCustomerPopup &&\n        <ImportCustomerPopup open={isOpenImportCustomerPopup} onCloseModal={() => {\n          setIsOpenImportCustomerPopup(false)\n          fetchUsers(filter.cityId, filter.status)\n        }} />\n      }\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Cửa hàng\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-bar\" style={{ padding: '10px' }}>\n                  <div className=\"row \">\n                    <div className=\"col-2 col-xl-2 ml-auto\">\n                      <select value={filter.cityId ? filter.cityId : 0} onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n                        fetchUsers(Number(e.currentTarget.value), filter.status)\n                        setFilter({ ...filter, cityId: Number(e.currentTarget.value) })\n                      }} className=\"form-control\">\n                        <option value={0}>Thành phố</option>\n                        {City.getList().map((value) => {\n                          return (\n                            <option key={value.key} value={value.key}>{value.value}</option>\n                          )\n                        })}\n                      </select>\n                    </div>\n\n                    <div className=\"col-2 col-xl-2 \">\n                      <select value={filter.status ? filter.status : 0} onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n\n                        fetchUsers(filter.cityId, Number(e.currentTarget.value))\n                        setFilter({ ...filter, status: Number(e.currentTarget.value) })\n\n                      }} className=\"form-control\">\n                        <option value={0}>Trạng thái</option>\n                        <option value={UserStatus.APPROVED}>Đã duyệt</option>\n                        <option value={UserStatus.WAITING_ACTIVE}>Chờ active</option>\n                        <option value={UserStatus.WAIT_APPROVAL}>Chờ duyệt</option>\n                        <option value={UserStatus.WAIT_COMPLETE_PROFILE}>Chờ hoàn thành hồ sơ</option>\n                      </select>\n                    </div>\n                    <button style={{ marginRight: '10px !important' }} onClick={() => { setIsOpenImportCustomerPopup(true) }} className=\"btn btn-primary mr-1\">Import</button>\n                    <button style={{ marginRight: '20px !important', backgroundColor: '#6f42c1' }} onClick={() => { exportUser() }} className=\"btn btn-primary mr-1\">Export</button>\n                  </div>\n\n                </div>\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th></th>\n                      <th>SDT</th>\n                      <th>Cửa hàng</th>\n                      <th>Thành phố / Quận</th>\n                      <th>INSEE ID</th>\n                      <th>Thời gian</th>\n                      <th>Trạng thái</th>\n                      <th>UTM</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userPage && userPage.list && userPage.list.map((user, key) => {\n                      return (\n                        <tr key={key}>\n                          <td><img className=\"m-avatar\" src={user.avatar ? user.avatar : default_avatar} /></td>\n                          <td>{user.phone}</td>\n                          <td>{user.name}</td>\n                          <td>{City.getName(user.cityId)}</td>\n                          <td>{user.inseeId}</td>\n                          <td>{DateTimeUtil.toString(user.createdTime * 1000)}</td>\n                          <td><span style={{ backgroundColor: UserStatus.findColor(user.status) }} className=\"badge badge-info\">{UserStatus.findName(user.status)}</span></td>\n                          <td>{user.utm ? user.utm : ''}</td>\n                          <td className=\"table-action\">\n                            <Link to={`/user/${user.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default UserPage;\n\nconst owlClass = \"popup\";\nfunction ImportCustomerPopup({ open, onCloseModal }: any) {\n  const [file, setFile] = useState(null as any);\n\n  const submit = () => {\n    if (file != null) {\n      UserModel.uploadFile(file)\n        .then(resp => {\n          onCloseModal()\n          if (resp.error == 0) {\n            AlertUtils.showSuccess('Upload thành công')\n          } else {\n            AlertUtils.showError(resp.msg);\n          }\n        })\n    }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          width: '500px'\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div style={{ margin: '0' }} className=\"row\">\n          <div style={{ padding: '0' }} className=\"col-12\">\n            <div style={{ margin: '0' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title\">Thông tin khách hàng</h5>\n                <h6 className=\"card-subtitle text-muted\">Vui lòng nhập thông tin khách hàng</h6>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"container-fluid\">\n                  <div style={{ margin: '0' }} className=\"row\">\n                    <div className=\"col-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label className=\"form-label w-100\">File input</label>\n                        <input onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                          setFile(event.target.files![0])\n                        }} type=\"file\" />\n                        <small className=\"form-text text-muted\">Example block-level help text here.</small>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div style={{ paddingRight: '20px' }} className=\"cart-btn-bar\">\n                <button onClick={() => { onCloseModal() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1 btn-cancel\">Hủy</button>\n                <button onClick={() => { submit() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1\">Submit</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nfunction ImportCustomerPopup2({ open, onCloseModal }: any) {\n  const [form, setForm] = useState<RegisterForm>({} as RegisterForm)\n\n  const onSelectCement = (cementId: number) => {\n    let cements = form.cements ? form.cements : [];\n    if (cements.includes(cementId)) {\n      cements = cements.filter((e) => e != cementId);\n    } else {\n      cements.push(cementId)\n    }\n    setForm({ ...form, cements: cements })\n  }\n\n  const submit = () => {\n    UserModel.create(form)\n      .then(resp => {\n        if (resp.error == 0) {\n          onCloseModal()\n          AlertUtils.showSuccess(\"Import thành công\")\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          width: '800px'\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div style={{ margin: '0' }} className=\"row\">\n          <div style={{ padding: '0' }} className=\"col-12\">\n            <div style={{ margin: '0' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title\">Thông tin khách hàng</h5>\n                <h6 className=\"card-subtitle text-muted\">Vui lòng nhập thông tin khách hàng</h6>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"container-fluid\">\n                  <div style={{ margin: '0' }} className=\"row\">\n                    <div className=\"col-12 col-lg-6\">\n                      <div className=\"form-group\">\n                        <label>INSEE ID</label>\n                        <input value={form.inseeId} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, inseeId: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Sô điện thoại</label>\n                        <input value={form.phone} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, phone: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Tên</label>\n                        <input value={form.name} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, name: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <div className=\"form-group\">\n                        <label>Thành phố</label>\n                        <select className=\"form-control\" value={form.cityId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, cityId: Number(e.currentTarget.value) }) }}>\n                          {(!form.cityId || form.cityId == 0) &&\n                            <option value={0}></option>\n                          }\n                          {City.getList().map((value) => {\n                            return (\n                              <option key={value.key} value={value.key}>{value.value}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Quận</label>\n                        <select className=\"form-control\" value={form.districtId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, districtId: Number(e.currentTarget.value) }) }}>\n                          {(!form.districtId || form.districtId == 0) &&\n                            <option value={0}></option>\n                          }\n                          {(form.cityId && form.cityId != 0) && District.getList(form.cityId).map((value) => {\n                            return (\n                              <option key={value.key} value={value.key}>{value.value}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Địa chỉ</label>\n                        <input value={form.address} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, address: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-lg-12\">\n                      {getListForRetailer().map(value => {\n                        return (\n                          <label onClick={() => { onSelectCement(Number(value.id)) }} className=\"form-check\">\n                            <input className=\"form-check-input\" checked={form.cements ? form.cements.includes(Number(value.id)) : false} type=\"checkbox\" />\n                            <span className=\"form-check-label\">\n                              {value.name}\n                            </span>\n                          </label>\n                        )\n                      })}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div style={{ paddingRight: '20px' }} className=\"cart-btn-bar\">\n                <button onClick={() => { onCloseModal() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1 btn-cancel\">Hủy</button>\n                <button onClick={() => { submit() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1\">Submit</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}","import Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { useEffect, useState } from 'react';\nimport { UserCityMetric, UserDateMetric } from '../../interface';\nimport DateTimeUtil from '../../utils/DateTimeUtil';\nimport { City } from '../../utils/ProvinceUtil';\n\n\n\nexport function UserCityMetricChart({ data }) {\n    const [option, setOption] = useState()\n\n    const buildOption = (data: Array<UserCityMetric>) => {\n        var series: any = []\n        for (var i = 0; i < data.length; i++) {\n            var metric = data[i];\n            series.push({\n                name: City.getName(metric.city),\n                y: metric.total\n            })\n        }\n\n        return {\n            chart: {\n                plotBackgroundColor: null,\n                plotBorderWidth: null,\n                plotShadow: false,\n                type: 'pie'\n            },\n            title: {\n                text: ''\n            },\n            accessibility: {\n                point: {\n                    valueSuffix: '%'\n                }\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: true,\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n                    }\n                }\n            },\n            series: [{\n                name: 'Cửa hàng',\n                colorByPoint: true,\n                data: series\n            }]\n        }\n    }\n\n    useEffect(() => {\n        const option: any = buildOption(data)\n        setOption(option)\n    }, [])\n\n    return (\n        <HighchartsReact constructorType={\"chart\"}\n            highcharts={Highcharts} options={option} />\n    )\n}\n\nexport function UserDateMetricChart({ data }) {\n    const [option, setOption] = useState()\n\n    const buildOption = (data: Array<UserDateMetric>) => {\n        let dataSeries: any = []\n        var categories: any = []\n        for (var i = data.length - 1; i >= 0; i--) {\n            dataSeries.push([data[i].date, data[i].total])\n            categories.push(DateTimeUtil.toStringNotYear(DateTimeUtil.parseDate(data[i].date)))\n        }\n        return {\n            chart: {\n                type: 'column'\n            },\n            title: {\n                text: ''\n            },\n            xAxis: {\n                categories: categories,\n                labels: {\n                    format: '{value:%e %b}'\n                }\n            },\n            yAxis: {\n                min: 0,\n                title: {\n                    text: ''\n                }\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                    '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\n                footerFormat: '</table>',\n                shared: true,\n                useHTML: true\n            },\n            plotOptions: {\n                column: {\n                    pointPadding: 0.2,\n                    borderWidth: 0\n                }\n            },\n            series: [{\n                name: 'Số người đăng ký',\n                data: dataSeries\n            }]\n        }\n    }\n\n    useEffect(() => {\n        const option: any = buildOption(data)\n        setOption(option)\n    }, [])\n\n    return (\n        <HighchartsReact constructorType={\"chart\"}\n            highcharts={Highcharts} options={option} />\n    )\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class FormModel {\n\n\n    static findByPromotionId(promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/find-by-promotion?promotionId=${promotionId}`, resolve, reject);\n        });\n    }\n\n    static statsByPromotion(promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/stats-by-promotion?promotionId=${promotionId}`, resolve, reject);\n        });\n    }\n\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static findLQForm(promotionId, topicId, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/lq-form/find?promotionId=${promotionId}&topicId=${topicId}&page=${page}&pageSize=${pageSize}`, resolve, reject);\n        });\n    }\n\n    static findStockForm(promotionIds, city, status, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/find-by-promotions?promotionIds=${promotionIds}&page=${page}&pageSize=${pageSize}${(city && city != 0) ? ('&city=' + city) : ''}${(status && status != 0) ? ('&status=' + status) : ''}`, resolve, reject);\n        });\n    }\n\n    static updateStatusTopic(promotionId, topicId, status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/update-status-topic?id=${promotionId}&topicId=${topicId}&status=${status}`, resolve, reject);\n        });\n    }\n\n    static updateStatus(formId, status, note) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/update-status?id=${formId}&status=${status}${note ? ('&note=' + note) : ''}`, resolve, reject);\n        });\n    }\n\n    static statsFormBypromotion() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/stats-form-promotion`, resolve, reject);\n        });\n    }\n\n    static countByTypePromotion(status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/count?${status && 'status=' + status}`, resolve, reject);\n        });\n    }\n\n    static countFormByTypePromotion(type) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/count-by-type-promotion?type=${type}`, resolve, reject);\n        });\n    }\n\n    static updateStockForm(id, form) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/stock-form/update?id=${id}`, JSON.stringify(form), resolve, reject);\n        });\n    }\n\n\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class GiftModel {\n\n    static create(formId, gift) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/gift/create?formId=${formId}`, JSON.stringify(gift), resolve, reject);\n        });\n    }\n\n    static count(status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/gift/count`, resolve, reject);\n        });\n    }\n\n    static find(status, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/gift/find?page=${page}&pageSize=${pageSize}${(status && status != 0) ? ('&status=' + status) : ''}`, resolve, reject);\n        });\n    }\n\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { CountGiftDTO, CountPromotionDTO, CountUserDashboard, FormPromotionMetric, UserCityMetric, UserDateMetric } from \"./interface\";\nimport UserModel from \"./model/UserModel\";\nimport { UserCityMetricChart, UserDateMetricChart } from \"./component/chart\";\nimport FormModel from \"./model/FormModel\";\nimport * as FormStatus from './constant/StockFormStatus'\nimport GiftModel from \"./model/GiftModel\";\n\n\nfunction Dashboard() {\n  const [countUser, setCountUser] = useState<CountUserDashboard>();\n  const [lstUserCity, setLstUserCity] = useState<Array<UserCityMetric>>();\n  const [lstUserDate, setLstUserDate] = useState<Array<UserDateMetric>>();\n  const [listFormPromotion, setlistFormPromotion] = useState<Array<FormPromotionMetric>>();\n  const [countFormPromotion, setCountFormPromotion] = useState<CountPromotionDTO>();\n  const [countgift, setCountGift] = useState<CountGiftDTO>()\n\n\n  const fetchCountUser = () => {\n    UserModel.count()\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountUser(resp.data)\n        }\n      })\n  }\n\n  const fetchUserCityMetric = () => {\n    UserModel.statsUserCity()\n      .then(resp => {\n        if (resp.error == 0) {\n          setLstUserCity(resp.data)\n        }\n      })\n  }\n\n  const fetchUserDateMetric = () => {\n    UserModel.statsUserDate()\n      .then(resp => {\n        if (resp.error == 0) {\n          setLstUserDate(resp.data)\n        }\n      })\n  }\n\n  const fetchStatsFormPromotion = () => {\n    FormModel.statsFormBypromotion()\n      .then(resp => {\n        if (resp.error == 0) {\n          setlistFormPromotion(resp.data)\n        }\n      })\n  }\n\n  const fetchCountFormPromotion = () => {\n    FormModel.countByTypePromotion(null)\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountFormPromotion(resp.data)\n        }\n      })\n  }\n\n  const fetchCountGift = () => {\n    GiftModel.count()\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountGift(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchCountUser()\n    fetchUserCityMetric()\n    fetchUserDateMetric()\n    fetchStatsFormPromotion()\n    fetchCountFormPromotion()\n    fetchCountGift()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Overview\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">User</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-store\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countUser?.numApprovedUser}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Promotion</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw  fa-ad\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormPromotion?.promotion}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Engagement</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle far fa-fw fa-heart\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormPromotion?.engagement}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Gift</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-gift\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countgift?.total}</h1>\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6 col-xxl-4 d-flex\">\n              <div className=\"card flex-fill w-100\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title mb-0\">Số cửa hàng phân bố theo vùng</h5>\n                </div>\n                <div className=\"card-body px-4\">\n                  {lstUserCity && <UserCityMetricChart data={lstUserCity} />}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12 col-md-6 col-xxl-8 d-flex\">\n              <div className=\"card flex-fill w-100\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title mb-0\">Số cửa hàng đăng ký theo ngày</h5>\n                </div>\n                <div className=\"card-body py-3\">\n                  {lstUserDate && <UserDateMetricChart data={lstUserDate} />}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-lg-8 d-flex\">\n              <div className=\"card flex-fill\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title mb-0\">Top các chiến dịch</h5>\n                </div>\n                <div id=\"datatables-dashboard-products_wrapper\" className=\"dataTables_wrapper dt-bootstrap4 no-footer\"><div className=\"row\"><div className=\"col-sm-12 col-md-6\" /><div className=\"col-sm-12 col-md-6\" /></div><div className=\"row\"><div className=\"col-sm-12\"><table id=\"datatables-dashboard-products\" className=\"table table-striped my-0 dataTable no-footer\" role=\"grid\" aria-describedby=\"datatables-dashboard-products_info\">\n                  <thead>\n                    <tr role=\"row\">\n                      <th className=\"d-none d-xl-table-cell sorting\" tabIndex={0}>Chiến dịch</th>\n                      <th className=\"d-none d-xl-table-cell sorting\" tabIndex={0}>Thời gian bắt đầu</th>\n                      <th className=\"d-none d-xl-table-cell sorting\" tabIndex={0}>Số lượng tham gia</th>\n\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      listFormPromotion && listFormPromotion.map(stat => {\n                        return (\n                          <tr role=\"row\" className=\"odd\">\n                            <td className=\"d-none d-xl-table-cell\">{stat.promotion.title}</td>\n                            <td className=\"d-none d-xl-table-cell\">{new Date(stat.promotion.timeStart).toLocaleDateString('vi')}</td>\n                            <td><span className=\"badge badge-danger\">{stat.total}</span></td>\n                          </tr>\n                        )\n                      })\n                    }\n\n                  </tbody>\n                </table>\n                </div>\n                </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-4 d-flex\">\n              <div className=\"card flex-fill w-100\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title mb-0\">Tỉnh thành tích cực</h5>\n                </div>\n                <div className=\"card-body d-flex w-100\">\n                  <div className=\"align-self-center chart chart-lg\"><div className=\"chartjs-size-monitor\"><div className=\"chartjs-size-monitor-expand\"><div /></div><div className=\"chartjs-size-monitor-shrink\"><div /></div></div>\n                    <canvas id=\"chartjs-dashboard-bar-alt\" width={422} height={350} style={{ display: 'block', width: '422px', height: '350px' }} className=\"chartjs-render-monitor\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Dashboard;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\n\n\nfunction StockForm() {\n\n  return (\n    <Layout>\n    </Layout>\n\n  );\n}\n\nexport default StockForm;\n","import { useState } from \"react\";\nimport Modal from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport \"./styles.scss\";\n\nconst owlClass = \"popup\";\n\n\nexport function AreYouSurePopup({ open, onCloseModal, onAgree }) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass} style={{ minWidth: '300px' }}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Anh/chị có chắc?</div>\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item left`}\n            onClick={onCloseModal}\n          >\n            Không\n          </div>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onAgree}\n          >\n            Có\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport function AreYouSureWithNotePopup({ open, onCloseModal, onAgree }) {\n  const [note, setNote] = useState(null)\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass} style={{ minWidth: '500px' }}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Anh/chị có chắc?</div>\n        </div>\n        <div style={{ padding: '0px 0px 30px 0' }} className=\"card-body\">\n          <div className=\"container-fluid\">\n            <label>Lý do:</label>\n            <textarea onChange={(e) => setNote(e.target.value)} className=\"form-control\" rows={2}></textarea>\n          </div>\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item left`}\n            onClick={onCloseModal}\n          >\n            Không\n          </div>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={() => { onAgree(note) }}\n          >\n            Có\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n\n\nexport function ConfirmPhonePopup({ phone, storeName, open, onCloseModal, onAgree }) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Anh/chị có chắc?</div>\n          <p className={`${owlClass}__wrapper__desc`}>\n            Số điện thoại ({phone}) là của cửa hàng {storeName} ?\n          </p>\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item left`}\n            onClick={onCloseModal}\n          >\n            Không\n          </div>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onAgree}\n          >\n            Có\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n\nexport function ErrorPopup({ open, onCloseModal }) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Lỗi</div>\n          <p className={`${owlClass}__wrapper__desc`}>\n            Anh/chị vui lòng thử lại sau\n          </p>\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onCloseModal}\n          >\n            OK\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserModel from \"./model/UserModel\";\nimport { User } from \"./interface\";\nimport { City, District } from \"./utils/ProvinceUtil\";\nimport { AreYouSurePopup, AreYouSureWithNotePopup } from \"./popup\";\nimport * as UserStatus from './constant/UserStatus';\nimport AlertUtils from \"./utils/AlertUtils\";\nimport { ARCHITECT, CONSTRUCTOR } from \"./constant/UserType\";\n\nconst default_avatar = 'http://cdn.onlinewebfonts.com/svg/img_264570.png'\nfunction DetailUserPage() {\n  let { id } = useParams();\n  const [isShowConfirmPopup, setIsShowConfirmPopup] = useState(false)\n  const [isShowConfirmUpdatePopup, setIsShowConfirmUpdatePopup] = useState(false)\n  const [isShowConfirmWithNotePopup, setIsShowConfirmWithNotePopup] = useState(false)\n  const [user, setUser] = useState<User>()\n\n  const fetchUser = (id: any) => {\n    UserModel.get(id)\n      .then(resp => {\n        if (resp.error === 0) {\n          setUser(resp.data)\n        }\n      })\n  }\n\n  const updateStatus = (id: any, status: number, note: any) => {\n    UserModel.updateStatus(id, status, note)\n      .then(resp => {\n        if (resp.error === 0) {\n          fetchUser(id);\n        }\n      })\n  }\n\n  const update = () => {\n    UserModel.update(user?.id, user)\n      .then(resp => {\n        if (resp.error === 0) {\n          fetchUser(user?.id)\n          AlertUtils.showSuccess(\"Thành công\")\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchUser(id)\n  }, [])\n\n  return (\n    <Layout>\n      {<AreYouSurePopup open={isShowConfirmPopup} onAgree={() => {\n        setIsShowConfirmPopup(false)\n        updateStatus(user?.id, UserStatus.APPROVED, null)\n      }} onCloseModal={() => {\n        setIsShowConfirmPopup(false)\n      }} />}\n\n      {<AreYouSurePopup open={isShowConfirmUpdatePopup} onAgree={() => {\n        setIsShowConfirmUpdatePopup(false)\n        update()\n      }} onCloseModal={() => {\n        setIsShowConfirmUpdatePopup(false)\n      }} />}\n\n      {<AreYouSureWithNotePopup open={isShowConfirmWithNotePopup} onAgree={(note) => {\n        setIsShowConfirmWithNotePopup(false)\n        updateStatus(user?.id, UserStatus.REJECTED, note)\n      }} onCloseModal={() => {\n        setIsShowConfirmWithNotePopup(false)\n      }} />}\n\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12 col-xl-12\">\n              <div className=\"tab-content\">\n                <div className=\"tab-pane fade show active\" id=\"account\" role=\"tabpanel\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5 className=\"card-title mb-0\">Thông tin thành viên</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      {user &&\n                        <form>\n                          <div className=\"row\">\n                            <div className=\"col-md-8\">\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Nhà thầu / Kiến trúc sư</label>\n                                <select className=\"form-control\" value={user.roleId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setUser({ ...user, roleId: Number(e.currentTarget.value) }) }}>\n                                  {(!user.roleId || user.roleId === 0) &&\n                                    <option value={0}></option>\n                                  }\n                                  <option value={CONSTRUCTOR}>Nhà thầu</option>\n                                  <option value={ARCHITECT}>Kiến trúc sư</option>\n                                </select>\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">INSEE ID</label>\n                                <input type=\"text\" onChange={(e: React.FormEvent<HTMLInputElement>) => { setUser({ ...user, inseeId: e.currentTarget.value }) }} className=\"form-control\" value={user.inseeId} />\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Tên</label>\n                                <input type=\"text\" onChange={(e: React.FormEvent<HTMLInputElement>) => { setUser({ ...user, name: e.currentTarget.value }) }} className=\"form-control\" value={user.name} />\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Số điện thoại</label>\n                                <input type=\"text\" className=\"form-control\" value={user.phone} />\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Thành phố / Tỉnh</label>\n                                <select className=\"form-control\" value={user.cityId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setUser({ ...user, cityId: Number(e.currentTarget.value) }) }}>\n                                  {(!user.cityId || user.cityId === 0) &&\n                                    <option value={0}></option>\n                                  }\n                                  {City.getList().map((value) => {\n                                    return (\n                                      <option key={value.key} value={value.key}>{value.value}</option>\n                                    )\n                                  })}\n                                </select>\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Quận / Huyện</label>\n                                <select className=\"form-control\" value={user.districtId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setUser({ ...user, districtId: Number(e.currentTarget.value) }) }}>\n                                  {(!user.districtId || user.districtId === 0) &&\n                                    <option value={0}></option>\n                                  }\n                                  {(user.cityId && user.cityId !== 0) && District.getList(user.cityId).map((value) => {\n                                    return (\n                                      <option key={value.key} value={value.key}>{value.value}</option>\n                                    )\n                                  })}\n                                </select>\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Địa chỉ</label>\n                                <input type=\"text\" onChange={(e: React.FormEvent<HTMLInputElement>) => { setUser({ ...user, address: e.currentTarget.value }) }} className=\"form-control\" value={user.address} />\n                              </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                              <div className=\"text-center\">\n                                <img alt=\"Chris Wood\" src={user.avatar ? user.avatar : default_avatar} className=\"rounded-circle img-responsive mt-2\" width={128} height={128} />\n                              </div>\n\n                            </div>\n                          </div>\n                        </form>\n                      }\n                    </div>\n                    {user &&\n                      <div className=\"card-footer\">\n                        <button style={{ marginRight: '40px' }} onClick={() => { setIsShowConfirmUpdatePopup(true) }} type=\"submit\" className=\"btn btn-danger m-btn-danger\">Save</button>\n                        {user.status === UserStatus.WAIT_APPROVAL &&\n                          <>\n                            <button onClick={() => { setIsShowConfirmPopup(true) }} type=\"submit\" className=\"btn btn-danger m-btn-danger\">Duyệt</button>\n                            <button onClick={() => { setIsShowConfirmWithNotePopup(true) }} style={{ marginLeft: '30px', backgroundColor: '#3e4676' }} type=\"submit\" className=\"btn btn-danger m-btn-danger\">Từ chối</button>\n                          </>\n                        }\n                        <button style={{ marginLeft: '30px', padding: '5px 30px' }} type=\"submit\" className=\"btn btn-delete\">Xóa</button>\n                      </div>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DetailUserPage;\n","export const CONSTRUCTOR = 1;\nexport const ARCHITECT = 2;\n\nexport function findName(value) {\n    // eslint-disable-next-line default-case\n    switch (value) {\n        case CONSTRUCTOR: return 'Nhà Thầu'\n        case ARCHITECT: return 'Kiến trúc sư'\n    }\n}\n\nexport function findColor(value) {\n    // eslint-disable-next-line default-case\n    switch (value) {\n        case CONSTRUCTOR: return '#20c997'\n        case ARCHITECT: return '#dc3535'\n    }\n}","import { useEffect } from \"react\";\n\nconst INSEEEditor = ({ myRef }) => {\n\n    const initEditor = () => {\n        window.ClassicEditor\n            .create(document.querySelector('.editor'), {\n                fontFamily: {\n                    options: [\n                        'default',\n                        'Ubuntu, Arial, sans-serif',\n                        'Ubuntu Mono, Courier New, Courier, monospace'\n                    ]\n                }, fontSize: {\n                    options: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n                    supportAllValues: true\n                },\n                fontColor: {\n                    columns: 6,\n                    documentColors: 12,\n                },\n                toolbar: {\n                    items: [\n                        'heading',\n                        '|',\n                        'bold',\n                        'italic',\n                        'link',\n                        'bulletedList',\n                        'numberedList',\n                        '|',\n                        'indent',\n                        'outdent',\n                        '|',\n                        'imageUpload',\n                        'blockQuote',\n                        'insertTable',\n                        'mediaEmbed',\n                        'undo',\n                        'redo',\n                        'alignment',\n                        'fontFamily',\n                        'fontSize',\n                        'fontColor'\n                    ]\n                },\n                language: 'en',\n                image: {\n                    toolbar: [\n                        'imageTextAlternative',\n                        'imageStyle:full',\n                        'imageStyle:side'\n                    ]\n                },\n                table: {\n                    contentToolbar: [\n                        'tableColumn',\n                        'tableRow',\n                        'mergeTableCells'\n                    ]\n                },\n                licenseKey: '',\n\n            })\n            .then(editor => {\n                window.editor = editor;\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    const getValue = () => {\n        return window.editor.getData();\n    }\n\n    const setValue = (value) => {\n        window.editor.setData(value)\n    }\n\n    useEffect(() => {\n        initEditor()\n    }, [])\n\n    myRef.current = {}\n    myRef.current.getValue = getValue;\n    myRef.current.setValue = setValue;\n    return (\n        <div className=\"editor\"></div>\n    )\n}\n\nINSEEEditor.defaultProps = {\n    myRef: { current: {} }\n}\n\nexport default INSEEEditor\n","import 'whatwg-fetch';\nlet fetch = window.fetch;\n\nexport default class UploadFileUtil {\n    static async uploadImg(photo) {\n        let formData = new FormData();\n        formData.append(\"file\", photo);\n\n        const ctrl = new AbortController() \n        setTimeout(() => ctrl.abort(), 5000);\n\n        try {\n            return await fetch('https://admin-conwood.insee.udev.com.vn/upload/image', { method: \"POST\", body: formData })\n                .then(resp => resp.json());\n        } catch (e) {\n            console.log('Huston we have problem...:', e);\n        }\n    }\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class PostModel {\n\n    static create(post) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/create`, JSON.stringify(post), resolve, reject);\n        });\n    }\n\n    static list() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/list`, resolve, reject);\n        });\n    }\n\n    static getList() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/get-list`, resolve, reject);\n        });\n    }\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static updateStatus(id, status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/update-status?id=${id}&status=${status}`, resolve, reject);\n        });\n    }\n\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class PromotionModel {\n\n    static create(post) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/create`, JSON.stringify(post), resolve, reject);\n        });\n    }\n\n    static update(post) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/update`, JSON.stringify(post), resolve, reject);\n        });\n    }\n\n    static list(types) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/list?${types ? ('types=' + types) : ''}`, resolve, reject);\n        });\n    }\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static updateStatus(id, status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/update-status?id=${id}&status=${status}`, resolve, reject);\n        });\n    }\n\n\n    static listPromotionForPost() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/list-promotion-for-map-post`, resolve, reject);\n        });\n    }\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport Select from 'react-select'\nimport INSEEEditor from \"./component/INSEEEditor\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Post } from \"./interface\";\nimport { City, District } from '../src/utils/ProvinceUtil'\nimport UploadFileUtil from \"./utils/UploadFileUtil\";\nimport PostModel from \"./model/PostModel\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { useNavigate } from 'react-router-dom';\nimport AlertUtils from \"./utils/AlertUtils\";\n\nconst locationOptions = City.getOptions()\nfunction CreatePost() {\n  const navigate = useNavigate()\n  const inputImgRef = useRef<HTMLInputElement | null>(null);\n  const editorRef = useRef<any>(null);\n  const [previewImg, setPreviewImg] = useState(null as any);\n  const [file, setFile] = useState(null as any);\n  const [postForm, setPostForm] = useState<Post>({} as Post)\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const [lstPromotion, setLstPromotion] = useState([] as any)\n\n\n  const fetchPromotion = () => {\n    PromotionModel.listPromotionForPost()\n      .then(resp => {\n        setLstPromotion(resp.data)\n      })\n  }\n\n  const submit = async () => {\n    let content = editorRef.current.getValue()\n    if (!file || !postForm.title || !postForm.summary || !content) {\n      setErrorMsg('Vui lòng nhập đủ thông tin')\n      return;\n    }\n    let resp = await UploadFileUtil.uploadImg(file)\n    if (resp.error != 200) {\n      setErrorMsg('Upload file thất bại')\n      return;\n    }\n\n    PostModel.create({ ...postForm, cover: resp.data, content: content })\n      .then(resp => {\n        if (resp.error == 0) {\n          navigate(\"/post\")\n          AlertUtils.showSuccess('Thành công')\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotion()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Post Form\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\"></label>\n                      <div className=\"col-sm-10\">\n                        <div className=\"create-post-select-img-container\">\n                          <input ref={inputImgRef} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setPreviewImg(URL.createObjectURL(event.target.files![0]))\n                            setFile(event.target.files![0])\n                          }} type=\"file\" style={{ display: 'none' }} />\n                          {previewImg && <img style={{ maxHeight: '200px' }} src={previewImg} />}\n                          <i onClick={() => {\n                            inputImgRef.current?.click()\n                          }} className=\"align-middle mr-2 far fa-fw fa-image\"></i>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Title</label>\n                      <div className=\"col-sm-10\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => { setPostForm({ ...postForm, title: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Promotion</label>\n                      <div className=\"col-sm-10\">\n                        <select onChange={(e: React.FormEvent<HTMLSelectElement>) => { setPostForm({ ...postForm, promotionId: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          {lstPromotion && lstPromotion.map((a: any) => {\n                            return (\n                              <option value={a.id}>{a.title}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Citys</label>\n                      <div className=\"form-group col-sm-4\">\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setPostForm({ ...postForm, cityIds: list })\n                          }}\n                          options={locationOptions}\n                        />\n                      </div>\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Districts</label>\n                      <div className=\"form-group col-sm-4\">\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setPostForm({ ...postForm, districtIds: list })\n                          }}\n                          options={(postForm && postForm.cityIds && postForm.cityIds.length > 0) ? District.getOption(postForm.cityIds) : []}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time Start</label>\n                      <div className=\"form-group col-md-4\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setPostForm({ ...postForm, timeStart: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time End</label>\n                      <div className=\"form-group col-md-4\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setPostForm({ ...postForm, timeEnd: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Summary</label>\n                      <div className=\"col-sm-10\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => { setPostForm({ ...postForm, summary: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Content</label>\n                      <div className=\"col-sm-10\">\n                        <INSEEEditor myRef={editorRef} />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <div className=\"col-sm-10 ml-sm-auto\">\n                        {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                        <div onClick={() => { submit() }} className=\"btn btn-primary\">Submit</div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default CreatePost;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const INIT = 1;\nexport const APPROVED = 2;\nexport const REMOVED = 0;\n\nexport function findName(value) {\n    switch (value) {\n        case INIT: return 'Khởi tạo'\n        case APPROVED: return 'Đã công khai'\n    }\n}\n\nexport function findColor(value) {\n    switch (value) {\n        case INIT: return '#20c997'\n        case APPROVED: return '#dc3545'\n    }\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport PostModel from \"./model/PostModel\";\nimport { useEffect, useState } from \"react\";\nimport { Page, Post } from \"./interface\";\nimport { Link } from \"react-router-dom\";\nimport { City, District } from \"./utils/ProvinceUtil\";\nimport * as PostStatus from './constant/PostStatus';\nimport { AreYouSurePopup } from \"./popup\";\nimport AlertUtils from \"./utils/AlertUtils\";\n\nfunction Posts() {\n  const [postPage, setPostPage] = useState<Page<Post>>()\n  const [selectedId, setSelectedId] = useState<number>()\n  const [isShowApprovedPopup, setIsShowApprovedPopup] = useState(false)\n  const [isShowRemovedPopup, setIsShowRemovedPopup] = useState(false)\n\n\n  const fetchPostPage = () => {\n    PostModel.list()\n      .then(resp => {\n        if (resp.error == 0) {\n          setPostPage(resp.data);\n        }\n      })\n  }\n\n  const updateStatus = (status: number) => {\n    PostModel.updateStatus(selectedId, status)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n          fetchPostPage()\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPostPage()\n  }, [])\n\n  return (\n    <Layout>\n      {\n        <>\n          <AreYouSurePopup open={isShowApprovedPopup} onCloseModal={() => {\n            setIsShowApprovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(PostStatus.APPROVED)\n              setIsShowApprovedPopup(false)\n            }} />\n\n          <AreYouSurePopup open={isShowRemovedPopup} onCloseModal={() => {\n            setIsShowRemovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(PostStatus.REMOVED)\n              setIsShowRemovedPopup(false)\n            }} />\n        </>\n      }\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Posts\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"cart-btn-bar\">\n                    <Link to={\"/post/create\"} className=\"btn btn-primary mr-1\">Thêm bài viết</Link>\n                  </div>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th></th>\n                      <th>Title</th>\n                      <th>City</th>\n                      <th>District</th>\n                      <th>Duration</th>\n                      <th>Promotion</th>\n                      <th>Status</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {postPage && postPage.list && postPage.list.map(post => {\n                      return (\n                        <tr>\n                          <td>\n                            <img src={post.cover} className=\"mr-2 post-cover-posts\" />\n                          </td>\n                          <td>{post.title}</td>\n                          <td>{post.cityIds ? post.cityIds.map((l: number) => City.getName(l)).join(\", \") : 'Tất cả'}</td>\n                          <td>{post.districtIds ? post.districtIds.map((l: number) => District.getName(l)).join(\", \") : 'Tất cả'}</td>\n                          <td>{post.timeStart && new Date(post.timeStart).toLocaleDateString('vi')} - {post.timeEnd && new Date(post.timeEnd).toLocaleDateString('vi')}</td>\n                          <td>{post.promotionId && <Link to={`/promotion/detail/${post.promotionId}`}> <span style={{ cursor: 'pointer' }} className=\"badge badge-info\">#khuyến_mãi_{post.promotionId}</span></Link>}</td>\n                          <td><span className=\"badge badge-info\" style={{backgroundColor: PostStatus.findColor(post.status)}}>{PostStatus.findName(post.status)}</span></td>\n                          <td className=\"table-action\">\n                            <Link to={`/post/detail/${post.id}`}><i style={{ fontSize: '15px' }}\n                              className=\"align-middle fas fa-fw fa-pen\" /></Link>\n                            {post.status == PostStatus.INIT &&\n                              <>\n                                <i onClick={() => {\n                                  setSelectedId(post.id)\n                                  setIsShowApprovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 16px' }} className=\"ion ion-ios-globe mr-2\"></i>\n                                <i onClick={() => {\n                                  setSelectedId(post.id)\n                                  setIsShowRemovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 8px' }} className=\"align-middle fas fa-fw fa-trash\"></i>\n                              </>\n                            }\n                          </td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Posts;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport INSEEEditor from \"./component/INSEEEditor\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Post } from \"./interface\";\nimport UploadFileUtil from \"./utils/UploadFileUtil\";\nimport PostModel from \"./model/PostModel\";\nimport Select from 'react-select'\nimport { useParams } from \"react-router-dom\";\nimport { City, District } from '../src/utils/ProvinceUtil'\nimport DateTimeUtil from \"./utils/DateTimeUtil\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport AlertUtils from \"./utils/AlertUtils\";\n\nconst locationOptions = City.getOptions()\nfunction UpdatePost() {\n  let { id } = useParams();\n  const inputImgRef = useRef<HTMLInputElement | null>(null);\n  const editorRef = useRef<any>(null);\n  const [previewImg, setPreviewImg] = useState(null as any);\n  const [file, setFile] = useState(null as any);\n  const [post, setPost] = useState<Post>({} as Post)\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const [lstPromotion, setLstPromotion] = useState([] as any)\n\n  const fetchPromotion = () => {\n    PromotionModel.listPromotionForPost()\n      .then(resp => {\n        setLstPromotion(resp.data)\n      })\n  }\n\n  const fetchPost = () => {\n    PostModel.get(id)\n      .then(resp => {\n        let post: Post = resp.data;\n        setPost(post)\n        setPreviewImg(post.cover)\n        editorRef.current.setValue(post.content)\n      })\n  }\n\n  const submit = async () => {\n    let content = editorRef.current.getValue()\n    if (!content) {\n      setErrorMsg('Vui lòng nhập content')\n      return;\n    }\n    if (!post.title) {\n      setErrorMsg('Vui lòng nhập content')\n      return;\n    }\n\n    if (!post.summary) {\n      setErrorMsg('Vui lòng nhập summary')\n      return;\n    }\n\n    let urlCover;\n    if (file) {\n      let resp = await UploadFileUtil.uploadImg(file)\n      if (resp.error != 200) {\n        setErrorMsg('Upload file thất bại')\n        return;\n      }\n      urlCover = resp.data;\n    }\n\n    if (!post.cover && !urlCover) {\n      setErrorMsg('Vui lòng chọn cover')\n      return;\n    }\n\n    let postForm = { ...post, content: content }\n    if (urlCover) {\n      postForm.cover = urlCover;\n    }\n\n    PostModel.create(postForm)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotion()\n    fetchPost()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Post Detail\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\"></label>\n                      <div className=\"col-sm-10\">\n                        <div className=\"create-post-select-img-container\">\n                          <input ref={inputImgRef} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setPreviewImg(URL.createObjectURL(event.target.files![0]))\n                            setFile(event.target.files![0])\n                          }} type=\"file\" style={{ display: 'none' }} />\n                          {previewImg && <img style={{ maxHeight: '200px' }} src={previewImg} />}\n                          <i onClick={() => {\n                            inputImgRef.current?.click()\n                          }} className=\"align-middle mr-2 far fa-fw fa-image\"></i>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Title</label>\n                      <div className=\"col-sm-10\">\n                        <input value={post.title} onChange={(e: React.FormEvent<HTMLInputElement>) => { setPost({ ...post, title: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Promotion</label>\n                      <div className=\"col-sm-10\">\n                        <select value={post.promotionId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setPost({ ...post, promotionId: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          {lstPromotion && lstPromotion.map((a: any) => {\n                            return (\n                              <option value={a.id}>{a.title}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">City</label>\n                      <div className=\"col-sm-4\">\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={post.cityIds && post.cityIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: City.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setPost({ ...post, cityIds: list })\n                          }}\n                          options={locationOptions}\n                        />\n                      </div>\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">District</label>\n                      <div className=\"col-sm-4\">\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={post.districtIds && post.districtIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: District.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setPost({ ...post, districtIds: list })\n                          }}\n                          options={(post && post.cityIds && post.cityIds.length > 0) ? District.getOption(post.cityIds) : []}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time Start</label>\n                      <div className=\"form-group col-md-4\">\n                        <input value={post.timeStart ? new Date(post.timeStart).toISOString().slice(0, 10) : ''}\n                          onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                            let time = new Date(e.currentTarget.value).getTime();\n                            setPost({ ...post, timeStart: time })\n                          }} type=\"date\" className=\"form-control\" />\n                      </div>\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time End</label>\n                      <div className=\"form-group col-md-4\">\n                        <input value={post.timeEnd ? new Date(post.timeEnd).toISOString().slice(0, 10) : ''}\n                          onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                            let time = new Date(e.currentTarget.value).getTime();\n                            setPost({ ...post, timeEnd: time })\n                          }} type=\"date\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Summary</label>\n                      <div className=\"col-sm-10\">\n                        <input value={post.summary} onChange={(e: React.FormEvent<HTMLInputElement>) => { setPost({ ...post, summary: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Content</label>\n                      <div className=\"col-sm-10\">\n                        <INSEEEditor myRef={editorRef} />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <div className=\"col-sm-10 ml-sm-auto\">\n                        {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                        <div onClick={() => { submit() }} className=\"btn btn-primary\">Save</div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default UpdatePost;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport Select from 'react-select'\nimport * as CementEnum from './component/enum/CementEnum'\nimport { City, District } from './utils/ProvinceUtil'\nimport { useEffect, useState } from \"react\";\nimport { Promotion } from \"./interface\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { useParams } from \"react-router-dom\";\nimport AlertUtils from \"./utils/AlertUtils\";\nimport { useNavigate } from 'react-router-dom';\n\nconst locationOptions = City.getOptions()\nfunction CreateOrUpdatePromotion() {\n  let { id } = useParams();\n  const [form, setForm] = useState<Promotion>({} as Promotion)\n  const [errorMsg, setErrorMsg] = useState<string>()\n  const navigate = useNavigate()\n\n\n  const fetchPromotion = () => {\n    PromotionModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setForm(resp.data)\n        }\n      })\n  }\n\n  const submit = () => {\n    if (!form.title || !form.type\n      || !form.timeStart || !form.timeEnd) {\n      setErrorMsg('Vui lòng điền đủ thông tin')\n      return;\n    }\n\n    if (id) {\n      PromotionModel.update(form)\n        .then(resp => {\n          if (resp.error == 0) {\n            AlertUtils.showSuccess('Thành công')\n          } else {\n            AlertUtils.showError(resp.msg)\n          }\n        })\n    } else {\n      PromotionModel.create(form)\n        .then(resp => {\n          if (resp.error == 0) {\n            if (form.type == 21) {\n              navigate('/egagement')\n            } else {\n              navigate('/promotion')\n            }\n            AlertUtils.showSuccess('Thành công')\n          } else {\n            AlertUtils.showError(resp.msg)\n          }\n        })\n    }\n\n  }\n\n  useEffect(() => {\n    if (id) {\n      fetchPromotion()\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Promotion\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title\">Thông tin chương trình khuyến mãi</h5>\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-8\">\n                        <label htmlFor=\"inputEmail4\">Title</label>\n                        <input value={form.title} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, title: e.currentTarget.value }) }} className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Type</label>\n                        <select value={form.type} disabled={id != null} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, type: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          <option value={20}>Stock Promotion</option>\n                          {/* <option value={21}>Lighting Quiz Promotion</option> */}\n                          {/* <option value={0}>Dự đoán kết quả bóng đá</option> */}\n                          <option value={0}>Loyalty</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Time Start</label>\n                        <input value={form.timeStart ? new Date(form.timeStart).toISOString().slice(0, 10) : ''}\n                          onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                            setForm({ ...form, timeStart: Number(e.currentTarget.valueAsDate?.getTime()) })\n                          }} type=\"date\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Time End</label>\n                        <input value={form.timeEnd ? new Date(form.timeEnd).toISOString().slice(0, 10) : ''}\n                          onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                            setForm({ ...form, timeEnd: Number(e.currentTarget.valueAsDate?.getTime()) })\n                          }} type=\"date\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">City</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={form.cityIds && form.cityIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: City.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, cityIds: list })\n                          }}\n                          options={locationOptions}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">District</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={form.districtIds && form.districtIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: District.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, districtIds: list })\n                          }}\n                          options={form.cityIds ? District.getOption(form.cityIds) : []}\n                        />\n                      </div>\n                    </div>\n                    {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                    <div onClick={submit} className=\"btn btn-primary\">Submit</div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default CreateOrUpdatePromotion;\n","export const STOCK_PROMOTION_TYPE = 20;\nexport const LIGHTING_QUIZ_GAME_PROMOTION_TYPE = 21;\nexport const PREDICT_FOOTBALL = 4;\n\nexport function findName(value) {\n    // eslint-disable-next-line default-case\n    switch (value) {\n        case STOCK_PROMOTION_TYPE: return 'Stock Promotion'\n        case LIGHTING_QUIZ_GAME_PROMOTION_TYPE: return 'Lighting Quiz Game'\n        case PREDICT_FOOTBALL: return 'Dự đoán bóng đá'\n    }\n}\n\nexport function findColor(value) {\n    // eslint-disable-next-line default-case\n    switch (value) {\n        case STOCK_PROMOTION_TYPE: return '#20c997'\n        case LIGHTING_QUIZ_GAME_PROMOTION_TYPE: return '#dc3535'\n        case PREDICT_FOOTBALL: return '#dc3535'\n    }\n}","export const INIT = 1;\nexport const APPROVED = 2;\nexport const REMOVED = 0;\n\nexport function findName(value) {\n    switch (value) {\n        case INIT: return 'Khởi tạo'\n        case APPROVED: return 'Đã duyệt'\n    }\n}\n\nexport function findColor(value) {\n    switch (value) {\n        case INIT: return '#20c997'\n        case APPROVED: return '#dc3545'\n    }\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { useEffect, useState } from \"react\";\nimport { Page, Promotion } from \"./interface\";\nimport { Link } from \"react-router-dom\";\nimport { City, District } from \"./utils/ProvinceUtil\";\nimport * as CementUtil from \"./utils/CementUtil\";\nimport * as PromotionType from './constant/PromotionType'\nimport { AreYouSurePopup } from \"./popup\";\nimport AlertUtils from \"./utils/AlertUtils\";\nimport * as PromotionStatus from './constant/PromotionStatus'\n\nfunction Promotions() {\n  const [promotionPage, setPromotionPage] = useState<Page<Promotion>>()\n  const [isShowApprovedPopup, setIsShowApprovedPopup] = useState(false)\n  const [isShowRemovedPopup, setIsShowRemovedPopup] = useState(false)\n  const [selectedId, setSelectedId] = useState<number>()\n\n  const fetchPromotionPage = () => {\n    PromotionModel.list(PromotionType.STOCK_PROMOTION_TYPE)\n      .then(resp => {\n        if (resp.error == 0) {\n          setPromotionPage(resp.data);\n        }\n      })\n  }\n\n  const updateStatus = (status: number) => {\n    PromotionModel.updateStatus(selectedId, status)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n          fetchPromotionPage()\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotionPage()\n  }, [])\n\n  return (\n    <Layout>\n      {\n        <>\n          <AreYouSurePopup open={isShowApprovedPopup} onCloseModal={() => {\n            setIsShowApprovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(PromotionStatus.APPROVED)\n              setIsShowApprovedPopup(false)\n            }} />\n\n          <AreYouSurePopup open={isShowRemovedPopup} onCloseModal={() => {\n            setIsShowRemovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(PromotionStatus.REMOVED)\n              setIsShowRemovedPopup(false)\n            }} />\n        </>\n      }\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Promotions\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title m-card-title\">Danh sách các chiến dịch khuyến mãi</h5>\n                  <div className=\"cart-btn-bar\">\n                    <Link to={\"/promotion/create-or-update\"} className=\"btn btn-primary mr-1\">Thêm chiến dịch</Link>\n                  </div>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Id</th>\n                      <th>Title</th>\n                      <th>Type</th>\n                      <th>City</th>\n                      <th>District</th>\n                      <th>Status</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {promotionPage && promotionPage.list && promotionPage.list.map(promotion => {\n                      return (\n                        <tr>\n                          <td>{promotion.id}</td>\n                          <td>{promotion.title}</td>\n                          <td>{promotion.type == 20 ? 'Stock Promotion' : 'Lighting Quiz Game'}</td>\n                          <td>\n                            {promotion.cityIds && promotion.cityIds.map((l: number) => City.getName(l)).join(\", \")}\n                          </td>\n                          <td>\n                            {promotion.districtIds && promotion.districtIds.map((l: number) => District.getName(l)).join(\", \")}\n                          </td>\n                          <td><span style={{ backgroundColor: PromotionStatus.findColor(promotion.status) }}\n                            className=\"badge badge-info\">{PromotionStatus.findName(promotion.status)}</span></td>\n                          <td className=\"table-action\">\n                            <Link to={`/promotion/detail/${promotion.id}`}><i style={{ fontSize: '15px' }}\n                              className=\"ion ion-ios-open mr-2\" /></Link>\n\n                            {promotion.status == PromotionStatus.INIT &&\n                              <>\n                                <Link to={`/promotion/create-or-update/${promotion.id}`}><i style={{ fontSize: '15px', margin: '0 10px' }}\n                                  className=\"align-middle fas fa-fw fa-pen\" /></Link>\n                                <i onClick={() => {\n                                  setSelectedId(promotion.id)\n                                  setIsShowApprovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"ion ion-ios-globe mr-2\"></i>\n                                <i onClick={() => {\n                                  setSelectedId(promotion.id)\n                                  setIsShowRemovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"align-middle fas fa-fw fa-trash\"></i>\n                              </>\n                            }\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Promotions;\n","export const INIT = 1;\nexport const APPROVED = 2;\nexport const REJECTED = 3;\nexport const SEND_GIFT = 4;\n\nexport function findName(value) {\n    switch (value) {\n        case INIT: return 'Chờ duyệt'\n        case APPROVED: return 'Đã duyệt'\n        case REJECTED: return 'Từ chối'\n        case SEND_GIFT : return 'Đã gửi quà'\n    }\n}\n\nexport function findColor(value) {\n    switch (value) {\n        case INIT: return '#20c997'\n        case APPROVED: return '#28a745'\n        case REJECTED: return '#999'\n        case SEND_GIFT : return '#28a745'\n    }\n}","import \"../popup/styles.scss\"\nimport { Link, useParams } from \"react-router-dom\";\nimport FormModel from \"../model/FormModel\";\nimport { useEffect, useState } from \"react\";\nimport { Form, Page, StatsForm } from \"../interface\";\nimport * as StockFormStatus from '../constant/StockFormStatus';\n\nfunction DetailStockPromotion() {\n    let { id } = useParams();\n    const [formPage, setFormPage] = useState<Page<Form>>()\n\n    const fetchListForm = () => {\n        FormModel.findByPromotionId(id)\n            .then(resp => {\n                if (resp.error == 0) {\n                    setFormPage(resp.data)\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchListForm()\n    }, [])\n\n    return (\n        <div className=\"col-12 col-xl-12\">\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title\">Danh sách đơn</h5>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                    <thead>\n                        <tr>\n                            <th>ID INSEE</th>\n                            <th>Cửa hàng</th>\n                            <th>Thời gian</th>\n                            <th>Trạng thái</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {formPage && formPage.list && formPage.list.map((item: Form) => {\n                            return (\n                                <tr>\n                                    <td>{item.user.inseeId}</td>\n                                    <td>\n                                        <img src={item.user.avatar} width={48} height={48} className=\"rounded-circle mr-2\" alt=\"Avatar\" />\n                                        {item.user.name}\n                                    </td>\n                                    <td>{item.time && new Date(item.time * 1000).toLocaleString('vi')}</td>\n                                    <td><span style={{ backgroundColor: StockFormStatus.findColor(item.status) }} className=\"badge\">{StockFormStatus.findName(item.status)}</span></td>\n                                    <td className=\"table-action\">\n                                        <Link to={`/form/detail/${item.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default DetailStockPromotion;\n","import APIUtil from '../utils/APIUtils'\n\nexport default class LQPromotionModel {\n\n    static create(topic, promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/create-topic?promotionId=${promotionId}`, JSON.stringify(topic), resolve, reject);\n        });\n    }\n\n    static createOrUpdateQuestion(question, topicId, promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/create-or-update-question?promotionId=${promotionId}&topicId=${topicId}`, JSON.stringify(question), resolve, reject);\n        });\n    }\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static getTopic(id, topicId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/get-topic?id=${id}&topicId=${topicId}`, resolve, reject);\n        });\n    }\n}","export const INIT = 1;\nexport const LOCKED = 2;\nexport const APPROVED = 3;\nexport const DONE = 4;\nexport const REMOVED = 0;\n\n\nexport function findName(value) {\n    switch(value) {\n        case INIT : return 'Khởi tạo'\n        case LOCKED : return 'Đang diễn ra'\n        case APPROVED : return 'Đã duyệt'\n        case DONE : return 'Hoàn thành'\n    }\n}\n\nexport function findColor(value) {\n    switch(value) {\n        case INIT : return '#20c997'\n        case LOCKED : return '#dc3535'\n        case APPROVED : return '#999'\n        case DONE : return '#999'\n    }\n}","import \"react-responsive-modal/styles.css\";\nimport Modal from \"react-responsive-modal\";\nimport '../../src/popup/styles.scss'\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { Topic } from \"../interface\";\nimport { Question, Answer } from '../interface/index'\nimport LQPromotionModel from '../model/LQPromotionModel'\nimport { Link, useParams } from \"react-router-dom\";\nimport * as TopicStatus from '../constant/TopicStatus'\n\nfunction DetailLQuizTopic({ data }: any) {\n  let { id, topicId } = useParams()\n  const [topic, setTopic] = useState<Topic>()\n  const [question, setQuestion] = useState<Question>()\n  const [isShowImgModel, setIsShowImgModel] = useState(false)\n\n  const fetchTopic = () => {\n    LQPromotionModel.getTopic(id, topicId)\n      .then(resp => {\n        if (resp.error == 0) {\n          setTopic(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchTopic()\n  }, [])\n\n  return (\n    <div className=\"col-12 col-xl-12\">\n      {isShowImgModel && <LQuizTopicModal open={isShowImgModel} data={question}\n        onCloseModal={() => {\n          setIsShowImgModel(false)\n          fetchTopic()\n        }} />}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h5 className=\"card-title m-card-title\">Dach sách hỏi của chủ đề</h5>\n          {topic && topic.status == TopicStatus.INIT &&\n            <div className=\"cart-btn-bar\">\n              <button onClick={() => { setIsShowImgModel(true); setQuestion({} as Question) }} className=\"btn btn-primary mr-1\">Thêm câu hỏi</button>\n            </div>\n          }\n        </div>\n        <table className=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Options</th>\n              <th>Answer</th>\n              <th>Actions:</th>\n            </tr>\n          </thead>\n          <tbody>\n            {topic && topic.questions && topic.questions.map((question: Question) => {\n              let rights = question.options.filter((o: Answer) => o.right);\n              return (\n                <tr>\n                  <td>{question.content}</td>\n                  <td>{question.options.map((o: Answer) => o.content).join(\", \")}</td>\n                  <td>{rights && rights.length > 0 && rights[0].content}</td>\n                  <td className=\"table-action\">\n                    <i onClick={() => {\n                      setQuestion(question)\n                      setIsShowImgModel(true)\n                    }} style={{ fontSize: '30px', cursor: 'pointer' }} className=\"align-middle ion ion-ios-play mr-2\" />\n                  </td>\n                </tr>\n              )\n            })}\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailLQuizTopic;\n\nconst owlClass = \"popup\";\nexport function LQuizTopicModal({ open, onCloseModal, data }: any) {\n  let { id, topicId } = useParams()\n  const [question, setQuestion] = useState<Question>(data)\n  const [errorMsg, setErrorMsg] = useState<string>()\n\n\n  const submit = () => {\n    if (isValid()) {\n      LQPromotionModel.createOrUpdateQuestion(question, topicId, id)\n        .then(resp => {\n          onCloseModal()\n        })\n    }\n  }\n\n  const isValid = () => {\n    if (!question.content || question.content.length <= 0) {\n      setErrorMsg('Vui lòng nhập nội dung câu hỏi')\n      return false;\n    }\n    if (!question.options || question.options.length <= 0) {\n      setErrorMsg('Vui lòng thêm câu trả lời')\n      return false;\n    }\n\n    let wrongOptions = question.options.filter((o: Answer) => {\n      if (!o.content || o.content.length <= 0) {\n        return true;\n      }\n      return false;\n    })\n\n    if (wrongOptions.length > 0) {\n      setErrorMsg('Vui lòng nhập nội dung câu trả lời')\n      return false;\n    }\n\n    wrongOptions = question.options.filter((o: Answer) => {\n      if (o.right) {\n        return true;\n      }\n    })\n\n    if (wrongOptions.length <= 0) {\n      setErrorMsg('Vui lòng chọn đáp án đúng')\n      return false;\n    }\n    return true;\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Cẩu hỏi: </div>\n          <p className={`${owlClass}__wrapper__desc`}>\n            <div style={{ minWidth: '700px', textAlign: 'left', marginBottom: '2px' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title mb-0\">Nội dung: </h5>\n              </div>\n              <div className=\"card-body\">\n                <textarea onChange={(e: React.FormEvent<HTMLTextAreaElement>) => {\n                  setQuestion({ ...question, content: e.currentTarget.value })\n                }} className=\"form-control\" value={question.content} rows={2} />\n              </div>\n            </div>\n            <div style={{ minWidth: '700px', textAlign: 'left' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title mb-0\">Đáp án</h5>\n              </div>\n              {question.options && question.options.map((option: Answer) => {\n                return (\n                  <div className=\"card-body\" style={{ paddingBottom: '10px' }}>\n                    <div style={{ marginBottom: '10px' }} className=\"row\">\n                      <div style={{ textAlign: 'right', paddingTop: '5px' }} className=\"col-md-1\">\n                        <input type=\"radio\" checked={option.right} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          let tmpQuestion = { ...question }\n                          tmpQuestion.options.forEach((a: Answer) => {\n                            if (a.id == option.id) {\n                              a.right = true;\n                            } else {\n                              a.right = false;\n                            }\n                          })\n                          setQuestion(tmpQuestion)\n                        }} />\n                      </div>\n                      <div className=\"col-md-7\">\n                        <input type=\"text\" onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          let tmpQuestion = { ...question }\n                          tmpQuestion.options.forEach((a: Answer) => {\n                            if (a.id == option.id) {\n                              a.content = e.currentTarget.value;\n                            }\n                          })\n                          setQuestion(tmpQuestion)\n                        }} value={option.content} className=\"form-control\" />\n                      </div>\n                      <div style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={() => {\n                        let tmpQuestion = { ...question }\n                        tmpQuestion.options = tmpQuestion.options.filter((e: Answer) => e.id != option.id)\n                        setQuestion(tmpQuestion)\n                      }}>\n                        <i className=\"align-middle mr-2 fas fa-fw fa-window-close\"></i>\n                      </div>\n                    </div>\n                  </div>\n                )\n              })}\n              <div onClick={() => {\n                let options = question.options;\n                if (!options) {\n                  options = []\n                }\n                if (options.length >= 4) {\n                  return;\n                }\n                let id: string = new Date().getTime() + ''\n                options.push({\n                  id: id,\n                  content: '',\n                  right: false\n                })\n                setQuestion({ ...question, options: options })\n              }} className=\"add-more-lquiz\" style={{ textAlign: 'center' }}>Thêm</div>\n            </div>\n          </p>\n        </div>\n        {errorMsg && <p style={{ color: 'red', textAlign: 'center' }}>{errorMsg}</p>}\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={submit}\n          >\n            Lưu\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n\n","import \"react-responsive-modal/styles.css\";\nimport Modal from \"react-responsive-modal\";\nimport '../../src/popup/styles.scss'\nimport { useEffect, useReducer, useState } from \"react\";\nimport { LQPromotion, StockForm, Topic } from \"../interface\";\nimport {\n  useParams,\n  Link\n} from \"react-router-dom\";\nimport DetailLQuizTopic, { LQuizTopicModal } from \"./DetailLQuizTopic\";\nimport LQPromotionModel from '../../src/model/LQPromotionModel';\nimport * as TopicStatus from '../constant/TopicStatus';\nimport FormModel from \"../model/FormModel\";\nimport AlertUtils from \"../utils/AlertUtils\";\nimport { AreYouSurePopup } from \"../popup\";\n\nfunction DetailLQuizPromotion() {\n  let { id, topicId } = useParams()\n  if (topicId) {\n    return <DetailLQuizTopic />\n  }\n  return <ListTopicLQuiz />\n}\n\nexport default DetailLQuizPromotion;\n\n\nfunction ListTopicLQuiz() {\n  let { id } = useParams()\n  const [isShowTopicModal, setIsShowTopicModal] = useState(false)\n  const [promtoion, setPromotion] = useState<LQPromotion>()\n  const [isShowApprovedPopup, setIsShowApprovedPopup] = useState(false)\n  const [isShowRemovedPopup, setIsShowRemovedPopup] = useState(false)\n  const [selectedId, setSelectedId] = useState<string>()\n\n  const fetchLQPromotion = () => {\n    LQPromotionModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setPromotion(resp.data)\n        }\n      })\n  }\n\n  const updateStatus = (status: number) => {\n    FormModel.updateStatusTopic(id, selectedId, status)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n          fetchLQPromotion()\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchLQPromotion()\n  }, [])\n\n  return (\n    <div className=\"col-12 col-xl-12\">\n      <TopicPopup open={isShowTopicModal} onCloseModal={() => {\n        fetchLQPromotion()\n        setIsShowTopicModal(false)\n      }} />\n\n      {\n        <>\n          <AreYouSurePopup open={isShowApprovedPopup} onCloseModal={() => {\n            setIsShowApprovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(TopicStatus.APPROVED)\n              setIsShowApprovedPopup(false)\n            }} />\n\n          <AreYouSurePopup open={isShowRemovedPopup} onCloseModal={() => {\n            setIsShowRemovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(TopicStatus.REMOVED)\n              setIsShowRemovedPopup(false)\n            }} />\n        </>\n      }\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h5 className=\"card-title m-card-title\">Dach sách chủ đề</h5>\n          <div className=\"cart-btn-bar\">\n            <button onClick={() => { setIsShowTopicModal(true) }} className=\"btn btn-primary mr-1\">Thêm chủ đề </button>\n          </div>\n        </div>\n        <table className=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Time Start</th>\n              <th>Time End</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {promtoion && promtoion.topics && promtoion.topics.map((topic: Topic) => {\n              if (topic.status == TopicStatus.REMOVED) {\n                return;\n              }\n              return (\n                <tr>\n                  <td>{topic.title}</td>\n                  <td>{new Date(topic.timeStart).toLocaleString('vi')}</td>\n                  <td>{new Date(topic.timeEnd).toLocaleString('vi')}</td>\n                  <td><span style={{ backgroundColor: TopicStatus.findColor(topic.status) }}\n                    className=\"badge\">{TopicStatus.findName(topic.status)}</span></td>\n                  <td className=\"table-action\">\n                    <Link to={\"/form/list/\" + id + \"/\" + topic.id}><i style={{ fontSize: '15px' }} className=\"ion ion-ios-open mr-2\" /></Link>\n                    <Link to={`/promotion/detail/${id}/${topic.id}`}><i style={{ fontSize: '15px', margin: '0 10px' }} className=\"align-middle fas fa-fw fa-pen\" /></Link>\n                    {topic.status == TopicStatus.INIT &&\n                      <>\n                        <i onClick={() => {\n                          setSelectedId(topic.id)\n                          setIsShowApprovedPopup(true)\n                        }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"ion ion-ios-globe mr-2\"></i>\n                        <i onClick={() => {\n                          setSelectedId(topic.id)\n                          setIsShowRemovedPopup(true)\n                        }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"align-middle fas fa-fw fa-trash\"></i>\n                      </>\n                    }\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nconst owlClass = \"popup\";\nfunction TopicPopup({ open, onCloseModal }: any) {\n  let { id } = useParams()\n  const [form, setForm] = useState<Topic>({} as Topic)\n\n  const submit = () => {\n    LQPromotionModel.create(form, id)\n      .then(resp => {\n        if (resp.error == 0) {\n          onCloseModal()\n        }\n      })\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          width: '800px'\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div style={{ margin: '0' }} className=\"row\">\n          <div style={{ padding: '0' }} className=\"col-12\">\n            <div style={{ margin: '0' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title\">Chủ đề</h5>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"container-fluid\">\n                  <div style={{ margin: '0' }} className=\"row\">\n                    <div className=\"col-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label>Chủ đề: </label>\n                        <input value={form.title} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, title: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Thời gian bắt đầu: </label>\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          let time = new Date(e.currentTarget.value).getTime();\n                          setForm({ ...form, timeStart: time })\n                        }} type=\"datetime-local\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Thời gian kết thúc: </label>\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          let time = new Date(e.currentTarget.value).getTime();\n                          setForm({ ...form, timeEnd: time })\n                        }} type=\"datetime-local\" className=\"form-control\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div style={{ paddingRight: '20px' }} className=\"cart-btn-bar\">\n                <button onClick={() => { onCloseModal() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1 btn-cancel\">Hủy</button>\n                <button onClick={() => { submit() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1\">Submit</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class MatchFootballModel {\n\n    static list(promotionId, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/match-football/list?promotionId=${promotionId}&page=${page}&pageSize=${pageSize}`, resolve, reject);\n        });\n    }\n\n    static updateResult(promotionId, matchId, scoreTeamOne, scoreTeamTwo) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/match-football/update-result-match?promotionId=${promotionId}&matchId=${matchId}&scoreTeamOne=${scoreTeamOne}&scoreTeamTwo=${scoreTeamTwo}`, resolve, reject);\n        });\n    }\n\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class AccumulationModel {\n\n    static list(promotionId, type, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/accumulation/list?promotionId=${promotionId}&type=${type}&page=${page}&pageSize=${pageSize}`, resolve, reject);\n        });\n    }\n\n}","import \"../popup/styles.scss\"\nimport \"react-responsive-modal/styles.css\";\n\nimport { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Page, MatchFootball, Accumulation } from \"../interface\";\nimport MatchFootballModel from \"../model/MatchFootballModel\";\nimport moment from 'moment';\nimport Modal from \"react-responsive-modal\";\nimport AlertUtils from \"../utils/AlertUtils\";\nimport AccumulationModel from \"../model/AccumulationModel\";\n\nconst owlClass = \"popup\";\nconst LIST_MATCH_PAGE = 1;\nconst LIST_TOP_PREDICT_PAGE = 2;\nfunction DetailPredictFootballPromotion() {\n    let { id } = useParams();\n    const [matchPage, setMatchPage] = useState<Page<MatchFootball>>()\n    const [topPage, setTopPage] = useState<Page<Accumulation>>()\n    const [isShowUpdateResultPopop, setIsShowUpdateResultPopop] = useState(false)\n    const [selectMatch, setSelectMatch] = useState<MatchFootball>()\n    const [showPage, setShowPage] = useState(LIST_MATCH_PAGE)\n\n    const fetchListMatch = (promotionId) => {\n        MatchFootballModel.list(promotionId, 0, 100)\n            .then(resp => {\n                if (resp.error == 0) {\n                    setMatchPage(resp.data)\n                }\n            })\n    }\n\n    const fetchBXH = (promotionId) => {\n        AccumulationModel.list(promotionId, 1, 0, 100)\n            .then(resp => {\n                if (resp.error == 0) {\n                    setTopPage(resp.data)\n                }\n            })\n    }\n\n    const updateResult = (promotionId, matchId, scoreTeamOne, scoreTeamTwo) => {\n        MatchFootballModel.updateResult(promotionId, matchId, scoreTeamOne, scoreTeamTwo)\n            .then(resp => {\n                if (resp.error == 0) {\n                    fetchListMatch(promotionId)\n                    AlertUtils.showSuccess('Update thành công')\n                    setIsShowUpdateResultPopop(false)\n                    setSelectMatch(undefined)\n                } else {\n                    AlertUtils.showError(resp.msg)\n                    setIsShowUpdateResultPopop(false)\n                    setSelectMatch(undefined)\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchListMatch(id)\n        fetchBXH(id)\n    }, [])\n\n    return (\n        <div className=\"col-12 col-xl-12\">\n            {selectMatch &&\n                <UpdateResultMatchPopup open={isShowUpdateResultPopop}\n                    onCloseModal={() => { setIsShowUpdateResultPopop(false) }}\n                    onAgree={(scoreTeamOne: any, scoreTeamTwo: any) => {\n                        updateResult(id, selectMatch.id, scoreTeamOne, scoreTeamTwo)\n                    }}\n                    teamOne={selectMatch.teamOne}\n                    teamTwo={selectMatch.teamTwo} />\n            }\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h5 style={{ display: 'inline-block' }} className=\"card-title\">Danh sách các trận đấu</h5>\n                    {showPage == LIST_MATCH_PAGE &&\n                        <button style={{ marginRight: '20px !important', float: 'right', backgroundColor: '#6f42c1' }}\n                            onClick={() => { setShowPage(LIST_TOP_PREDICT_PAGE) }}\n                            className=\"btn btn-primary mr-1\">Bảng xếp hạng</button>\n                    }\n                    {showPage == LIST_TOP_PREDICT_PAGE &&\n                        <button style={{ marginRight: '20px !important', float: 'right', backgroundColor: '#6f42c1' }}\n                            onClick={() => { setShowPage(LIST_MATCH_PAGE) }}\n                            className=\"btn btn-primary mr-1\">Danh sách trận đấu</button>\n                    }\n                </div>\n                {showPage == LIST_MATCH_PAGE &&\n                    <table className=\"table table-striped table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Thời gian </th>\n                                <th>Đội</th>\n                                <th>Kết quả</th>\n                                <th>Đội</th>\n                                <th>Dự đoán</th>\n                                <th>Chính xác</th>\n                                <th>Sai</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {matchPage && matchPage.list && matchPage.list.map((match: MatchFootball, index: number) => {\n                                return (\n                                    <tr>\n                                        <td>{moment(new Date(match.timeStart * 1000)).format(\"HH:mm MM-DD\")}</td>\n                                        <td>{match.teamOne}</td>\n                                        <td>\n                                            {match.status == 1 &&\n                                                <p >Chưa bắt đầu</p>\n                                            }\n                                            {match.status == 2 && <p style={{ cursor: 'pointer' }} onClick={() => {\n                                                setSelectMatch(match)\n                                                setIsShowUpdateResultPopop(true)\n                                            }\n                                            }>Cập nhật kết quả</p>}\n                                            {match.status == 3 && `${match.teamOneScore} - ${match.teamTwoScore}`}\n                                        </td>\n                                        <td>{match.teamTwo}</td>\n                                        <td>{match.totalPredict}</td>\n                                        <td>{match.totalWin}</td>\n                                        <td>{match.totalFailed}</td>\n                                        <td className=\"table-action\">\n                                            <Link to={`/form/match/${match.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion  mr-2\" />CHI TIẾT</Link>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n\n                        </tbody>\n                    </table>\n                }\n\n                {showPage == LIST_TOP_PREDICT_PAGE &&\n                    <table className=\"table table-striped table-hover\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>Tên</th>\n                                <th>SDT</th>\n                                <th>Điểm</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {topPage && topPage.list && topPage.list.map((accumulation: Accumulation, index: number) => {\n                                return (\n                                    <tr>\n                                        <td>{<img className=\"avatar\" src={accumulation.user.avatar} />}</td>\n                                        <td>{accumulation.user.name}</td>\n                                        <td>{accumulation.user.phone}</td>\n                                        <td>{accumulation.point}</td>\n                                    </tr>\n                                )\n                            })}\n\n                        </tbody>\n                    </table>\n                }\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default DetailPredictFootballPromotion;\n\n\n\nfunction UpdateResultMatchPopup({ open, onCloseModal, onAgree, teamOne, teamTwo }) {\n    const [scoreTeamOne, setScoreTeamOne] = useState<number>()\n    const [scoreTeamTwo, setScoreTeamTwo] = useState<number>()\n\n    return (\n        <Modal\n            open={open}\n            onClose={onCloseModal}\n            center\n            showCloseIcon={false}\n            styles={{\n                modal: {\n                    background: \"rgba(242, 242, 242, 0.94)\",\n                    backdropFilter: \"blur(54.3656px)\",\n                    borderRadius: \"14px\",\n                    padding: \"0\",\n                    maxWidth: \"80%\"\n                },\n            }}\n        >\n            <div className={owlClass} style={{ minWidth: '300px' }}>\n                <div className={`${owlClass}__wrapper`}>\n\n                    <div className={`${owlClass}__wrapper__title`}>\n                        <div className=\"form-group row\">\n                            <label className=\"col-form-label offset-sm-1 col-sm-5 text-sm-right\">{teamOne}</label>\n                            <div className=\"col-sm-4\">\n                                <input value={scoreTeamOne} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                                    setScoreTeamOne(Number(e.currentTarget.value))\n                                }} type=\"number\" className=\"form-control\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-form-label offset-sm-1 col-sm-5 text-sm-right\">{teamTwo}</label>\n                            <div className=\"col-sm-4\">\n                                <input value={scoreTeamTwo} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                                    setScoreTeamTwo(Number(e.currentTarget.value))\n                                }} type=\"number\" className=\"form-control\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={`${owlClass}__group-btn`}>\n                    <div\n                        className={`${owlClass}__group-btn__item left`}\n                        onClick={onCloseModal}\n                    >\n                        Không\n            </div>\n                    <div\n                        className={`${owlClass}__group-btn__item right`}\n                        onClick={() => {\n                            if (scoreTeamOne != null && scoreTeamTwo != null && scoreTeamOne >= 0 && scoreTeamTwo >= 0) {\n                                onAgree(scoreTeamOne, scoreTeamTwo)\n                            }\n                        }}\n                    >\n                        Có\n            </div>\n                </div>\n            </div>\n        </Modal>\n    );\n}\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { Link, useParams } from \"react-router-dom\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport FormModel from \"./model/FormModel\";\nimport { useEffect, useState } from \"react\";\nimport { Form, Page, Promotion, StatsForm } from \"./interface\";\nimport DetailStockPromotion from \"./promotion/DetailStockPromotion\";\nimport DetailLQuizPromotion from \"./promotion/DetailLQuizPromotion\";\nimport DetailPredictFootballPromotion from \"./promotion/DetailPredictFootballPromotion\";\n\nfunction DetailPromotion() {\n  let { id } = useParams();\n  const [promotion, setPromotion] = useState<Promotion>()\n  const [statsForm, setStatsForm] = useState<StatsForm>()\n\n  const fetchPromotionById = () => {\n    PromotionModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setPromotion(resp.data)\n        }\n      })\n  }\n\n  const fetchStatsPromotion = () => {\n    FormModel.statsByPromotion(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setStatsForm(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotionById()\n    fetchStatsPromotion()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {statsForm &&\n              <div className=\"col-md-12 col-xl-12\">\n                <div className=\"w-100\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div className=\"col mt-0\">\n                              <h5 className=\"card-title\">Số đơn tham gia</h5>\n                            </div>\n                            <div className=\"col-auto\">\n                              <div className=\"avatar\">\n                                <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-truck align-middle\"><rect x={1} y={3} width={15} height={13} /><polygon points=\"16 8 20 8 23 11 23 16 16 16 16 8\" /><circle cx=\"5.5\" cy=\"18.5\" r=\"2.5\" /><circle cx=\"18.5\" cy=\"18.5\" r=\"2.5\" /></svg>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <h1 className=\"display-5 mt-1 mb-3\">{statsForm.total}</h1>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div className=\"col mt-0\">\n                              <h5 className=\"card-title\">Số đơn được duyệt</h5>\n                            </div>\n                            <div className=\"col-auto\">\n                              <div className=\"avatar\">\n                                <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-dollar-sign align-middle\"><line x1={12} y1={1} x2={12} y2={23} /><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /></svg>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <h1 className=\"display-5 mt-1 mb-3\">{statsForm.approved}</h1>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n          <div className=\"row\">\n            {promotion?.type == 20 && <DetailStockPromotion />}\n            {promotion?.type == 21 && <DetailLQuizPromotion />}\n            {promotion?.type == 4 && <DetailPredictFootballPromotion/>}\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DetailPromotion;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { useState } from \"react\";\nimport Modal from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { CardPhoneGift, FormGift } from \"../interface\";\nimport \"../popup/styles.scss\";\nconst owlClass = \"popup\";\n\n\nexport function SendGiftPopup({ open, onCloseModal, onAgree, userId }) {\n    const [form, setForm] = useState<FormGift>({ type: 1 } as FormGift)\n    const phoneCardRef = React.createRef<CardPhoneComponent>()\n\n    const countValue = (cardPhones: Array<CardPhoneGift>) => {\n        let c = 0;\n        cardPhones.forEach(cardPhone => {\n            c = c + cardPhone.value;\n        });\n        return c;\n    }\n\n    return (\n        <Modal\n            open={open}\n            onClose={onCloseModal}\n            center\n            showCloseIcon={false}\n            styles={{\n                modal: {\n                    background: \"rgba(242, 242, 242, 0.94)\",\n                    backdropFilter: \"blur(54.3656px)\",\n                    borderRadius: \"14px\",\n                    padding: \"0\",\n                    maxWidth: \"80%\"\n                },\n            }}\n        >\n            <div className={owlClass} style={{ minWidth: '600px' }}>\n                <div className={`${owlClass}__wrapper`}>\n                    <div className={`${owlClass}__wrapper__title`}>Quà tặng</div>\n                </div>\n                <div style={{ padding: '0px 0px 30px 0' }} className=\"card-body\">\n                    <div className=\"container-fluid\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5 className=\"card-title mb-0\">Loại quà tặng</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <select onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, type: Number(e.currentTarget.value) }) }} className=\"form-control mb-3\">\n                                    <option value={1}>Thẻ cào</option>\n                                    <option value={2}>Voucher Offline</option>\n                                    <option value={3}>Điểm thưởng</option>\n                                </select>\n                                {form && form.type == 1 &&\n                                    <CardPhoneComponent ref={phoneCardRef} />\n                                }\n                                {form && form.type != 1 &&\n                                    <div style={{ textAlign: 'center' }}>Chưa hỗ trợ</div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={`${owlClass}__group-btn`}>\n                    <div\n                        className={`${owlClass}__group-btn__item left`}\n                        onClick={onCloseModal}\n                    >\n                        Không\n                    </div>\n                    <div\n                        className={`${owlClass}__group-btn__item right`}\n                        onClick={() => {\n                            if (form.type == 1) {\n                                let data = phoneCardRef.current?.getValue() as Array<CardPhoneGift>;\n                                let count = countValue(data);\n                                let title = 'Thẻ điện thoại ' + count + '.000 đ'\n                                onAgree({ ...form, cardPhones: phoneCardRef.current?.getValue(), title: title, userId: userId })\n                            }\n                        }}\n                    >\n                        Có\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\n\ninterface StateCardPhoneComponent {\n    cards: Array<number>,\n    refs: Map<number, React.RefObject<CardPhoneItemComponent>>\n}\n\nclass CardPhoneComponent extends React.Component<{}, StateCardPhoneComponent> {\n    state: StateCardPhoneComponent = { cards: [] as Array<number>, refs: new Map() } as StateCardPhoneComponent\n\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.add()\n    }\n\n    add = () => {\n        let id = new Date().getTime()\n        let lst = [...this.state.cards]\n        lst.push(id)\n        const childRef = React.createRef<CardPhoneItemComponent>();\n        this.state.refs.set(id, childRef)\n        this.setState({\n            refs: this.state.refs,\n            cards: lst\n        })\n    }\n\n    remove = (id: number) => {\n        let lst = [...this.state.cards]\n        lst = lst.filter(e => e != id)\n        this.state.refs.delete(id)\n        this.setState({\n            refs: this.state.refs,\n            cards: lst\n        })\n    }\n\n    getValue = (): Array<CardPhoneGift> => {\n        let rs: Array<CardPhoneGift> = []\n        this.state.refs.forEach((value: React.RefObject<CardPhoneItemComponent>, key: number) => {\n            value.current &&\n                rs.push(value.current?.getValue())\n        });\n        return rs;\n    }\n\n    render() {\n        const cards = this.state.cards;\n        return (\n            <div>\n                {cards && cards.map((card: number) => {\n                    return (\n                        <div style={{ position: 'relative' }}>\n                            <span onClick={() => { this.remove(card) }} className=\"btn-x-card\">X</span>\n                            <CardPhoneItemComponent ref={this.state.refs.get(card)} />\n                        </div>\n                    )\n                })}\n                {\n                    cards.length < 4 &&\n                    <div onClick={this.add} style={{ textAlign: 'center', padding: '10px', cursor: 'pointer' }}>Thêm</div>\n                }\n            </div >\n        )\n    }\n\n}\n\ninterface StateCardPhoneItemComponent {\n    cardPhone: CardPhoneGift\n}\nclass CardPhoneItemComponent extends React.Component<{}, StateCardPhoneItemComponent> {\n    state: StateCardPhoneItemComponent = { cardPhone: { network: 1, value: 50 } as CardPhoneGift }\n\n    constructor(props) {\n        super(props)\n    }\n\n    getValue = (): CardPhoneGift => {\n        return this.state.cardPhone;\n    };\n\n    render() {\n        const cardPhone = { ...this.state.cardPhone }\n        return (\n            <div style={{ padding: '20px', border: '1px #ccc solid' }}>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Nhà mạng</span>\n                    </div>\n                    <select onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n                        this.setState({ cardPhone: { ...cardPhone, network: Number(e.currentTarget.value) } })\n                    }} className=\"form-control\">\n                        <option value={1}>Vietel</option>\n                        <option value={2}>Mobile</option>\n                        <option value={3}>Vina</option>\n                    </select>\n                </div>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Mệnh giá</span>\n                    </div>\n                    <select onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n                        this.setState({ cardPhone: { ...cardPhone, value: Number(e.currentTarget.value) } })\n                    }} className=\"form-control\">\n                        <option value={50}>50.000 đ</option>\n                        <option value={100}>100.000 đ</option>\n                        <option value={200}>200.000 đ</option>\n                    </select>\n                </div>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Seri</span>\n                    </div>\n                    <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                        this.setState({ cardPhone: { ...cardPhone, seri: e.currentTarget.value } })\n                    }} type=\"text\" className=\"form-control\" />\n                </div>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Code</span>\n                    </div>\n                    <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                        this.setState({ cardPhone: { ...cardPhone, code: e.currentTarget.value } })\n                    }} type=\"text\" className=\"form-control\" />\n                </div>\n            </div >\n        )\n    }\n\n\n}\n\n","import \"react-responsive-modal/styles.css\";\nimport Modal from \"react-responsive-modal\";\nimport '../../src/popup/styles.scss'\nimport { useEffect, useReducer, useState } from \"react\";\nimport { FormGift, ImgRealtimePhoto, StockForm } from \"../interface\";\nimport { City, District } from \"../utils/ProvinceUtil\";\nimport { AreYouSurePopup, AreYouSureWithNotePopup } from \"../popup\";\nimport FormModel from \"../model/FormModel\";\nimport AlertUtils from \"../utils/AlertUtils\";\nimport * as StockFormStatus from '../constant/StockFormStatus';\nimport { SendGiftPopup } from '../gift/popup';\nimport GiftModel from \"../model/GiftModel\";\nimport DateTimeUtil from \"../utils/DateTimeUtil\";\nimport * as CementUtil from '../utils/CementUtil'\n\nfunction DetailStockForm({ data }: any) {\n  const [isShowImgModel, setIsShowImgModel] = useState(false)\n  const [isShowApporvedPopup, setIsShowApporvedPopup] = useState(false)\n  const [isRejectPopup, setIsRejectPopup] = useState(false)\n  const [form, setForm] = useState<StockForm>();\n  const [selectedJSONImg, setSelectedJSONImg] = useState<ImgRealtimePhoto>()\n  const [isShowGiftPopup, setIsShowGiftPopup] = useState(false)\n\n  const updateStatus = (id: any, status: number, note: any) => {\n    FormModel.updateStatus(id, status, note)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess(\"Thành công!\")\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n        fetchForm()\n      })\n  }\n\n  const fetchForm = () => {\n    FormModel.get(form?.id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setForm(resp.data)\n        }\n      })\n  }\n\n  const sendGift = (formGift: FormGift) => {\n    GiftModel.create(form?.id, formGift)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n          fetchForm()\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  const updateForm = () => {\n    FormModel.updateStockForm(form?.id, form)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n          fetchForm()\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    setForm(data as StockForm)\n  }, [])\n\n  return (\n    <main className=\"content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 col-xl-12\">\n            <div className=\"tab-content\">\n              <div className=\"tab-pane fade show active\" id=\"account\" role=\"tabpanel\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h5 className=\"card-title mb-0\">Thông tin thành viên</h5>\n                  </div>\n                  <div className=\"card-body\">\n                    {form &&\n                      <form>\n                        <div className=\"row\">\n                          <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Tên</label>\n                              <input type=\"text\" className=\"form-control\" value={form.user.name} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Số điện thoại</label>\n                              <input type=\"text\" className=\"form-control\" value={form.user.phone} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Địa chỉ</label>\n                              <input type=\"text\" className=\"form-control\" value={`${form.user.address} - ${District.getName(form.user.districtId)} - ${City.getName(form.user.cityId)} `} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Số bao</label>\n                              <input type=\"text\" className=\"form-control\" value={form.bags} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Xi măng</label>\n                              <input type=\"text\" className=\"form-control\" value={`${form.cements ? form.cements.map(c => {\n                                return CementUtil.findById(c)?.name;\n                              }).join(', ') : ''}`} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Ghi chú</label>\n                              <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                                setForm({ ...form, note: e.currentTarget.value })\n                              }}\n                                type=\"text\" className=\"form-control\" value={form.note} />\n                            </div>\n                          </div>\n                          <div className=\"col-md-8\">\n                            <div className=\"text-center\">\n                              <div className=\"previews-img-container\">\n                                {form && form.jsonImgs.map((jsonImg: ImgRealtimePhoto) => {\n                                  return (\n                                    <div onClick={() => {\n                                      setSelectedJSONImg(jsonImg)\n                                      setIsShowImgModel(true)\n                                    }} className=\"item\">\n                                      <img src={jsonImg.url} />\n                                    </div>\n                                  )\n                                })}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                      </form>\n                    }\n                  </div>\n                  <div className=\"card-footer\">\n                    {form?.status == StockFormStatus.INIT &&\n                      <>\n                        <button style={{ backgroundColor: '#28a745', marginRight: '30px' }} onClick={() => {\n                          updateForm()\n                        }} className=\"btn btn-danger m-btn-danger\">Save</button>\n\n                        <button onClick={() => setIsShowApporvedPopup(true)} className=\"btn btn-danger m-btn-danger\">Duyệt</button>\n                        <AreYouSurePopup open={isShowApporvedPopup} onCloseModal={() => { setIsShowApporvedPopup(false) }}\n                          onAgree={() => {\n                            updateStatus(form?.id, StockFormStatus.APPROVED, null)\n                            setIsShowApporvedPopup(false)\n                          }} />\n\n                        <button onClick={() => setIsRejectPopup(true)} style={{ marginLeft: '30px', padding: '5px 30px' }} className=\"btn btn-delete\">Không duyệt</button>\n                        <AreYouSureWithNotePopup open={isRejectPopup} onCloseModal={() => { setIsRejectPopup(false) }}\n                          onAgree={(note) => {\n                            updateStatus(form?.id, StockFormStatus.REJECTED, note)\n                            setIsRejectPopup(false)\n                          }} />\n                      </>\n                    }\n                    {form?.status == StockFormStatus.APPROVED &&\n                      <button onClick={() => setIsShowGiftPopup(true)} className=\"btn btn-danger m-btn-danger\">Gửi quà</button>\n                    }\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <SendGiftPopup open={isShowGiftPopup} onCloseModal={() => { setIsShowGiftPopup(false) }} onAgree={(form) => {\n          sendGift(form)\n          setIsShowGiftPopup(false)\n        }} userId={form?.userId} />\n        <ImagePopup open={isShowImgModel}\n          onCloseModal={() => { setIsShowImgModel(false) }}\n          url={selectedJSONImg?.url}\n          time={selectedJSONImg?.time}\n          location={selectedJSONImg?.location}\n        />\n      </div>\n    </main>\n  );\n}\n\nexport default DetailStockForm;\n\nconst owlClass = \"popup\";\nexport function ImagePopup({ open, onCloseModal, url, time, location }: any) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div className={`${owlClass}__wrapper`}>\n          <img style={{ maxHeight: '70vh', maxWidth: '70vw' }} src={url} alt=\"\" />\n          <p style={{ marginTop: '20px', lineHeight: '5px' }}>Thời gian: {DateTimeUtil.toString(time)}</p>\n          {location && <p>Vị trí: {JSON.stringify(location)}</p>}\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onCloseModal}\n          >\n            Đóng\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useParams } from \"react-router-dom\";\nimport FormModel from \"./model/FormModel\";\nimport { useEffect, useState } from \"react\";\nimport { Form, StockForm } from \"./interface\";\nimport DetailStockForm from \"./promotion/DetailStockForm\";\n\n\nfunction DetailForm() {\n  let { id } = useParams();\n  const [form, setForm] = useState<Form>()\n\n  const fetchForm = () => {\n    FormModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setForm(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchForm()\n  }, [])\n\n  return (\n    <Layout>\n      {form && form.type == 20 &&\n        <DetailStockForm data={form} />\n      }\n    </Layout>\n\n  );\n}\n\nexport default DetailForm;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport FormModel from \"./model/FormModel\";\nimport { LightingQuizForm, Page, Topic } from \"./interface\";\nimport { AreYouSurePopup } from \"./popup\";\nimport LQPromotionModel from \"./model/LQPromotionModel\";\nimport * as TopicStatus from './constant/TopicStatus';\n\nfunction ListLightingQuizForm() {\n  let { id, topicId } = useParams();\n  const [page, setPage] = useState<Page<LightingQuizForm>>()\n  const [isShowPopup, setIsShowPopup] = useState(false)\n  const [topic, setTopic] = useState<Topic>()\n\n  const fetchTopic = () => {\n    LQPromotionModel.getTopic(id, topicId)\n      .then(resp => {\n        if (resp.error == 0) {\n          setTopic(resp.data)\n        }\n      })\n  }\n\n  const fetchLQForm = (promotionId: any, topicId: any) => {\n    FormModel.findLQForm(promotionId, topicId, 0, 100)\n      .then(resp => {\n        setPage(resp.data)\n      })\n  }\n\n  const endTopic = (promotionId: any, topicId: any) => {\n    FormModel.updateStatusTopic(promotionId, topicId, TopicStatus.DONE)\n      .then(resp => {\n        if (resp.error == 0) {\n          fetchLQForm(promotionId, topicId)\n        }\n      });\n  }\n\n  useEffect(() => {\n    fetchTopic()\n    fetchLQForm(id, topicId)\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <AreYouSurePopup open={isShowPopup} onAgree={() => {\n            setIsShowPopup(false)\n            endTopic(id, topicId)\n          }} onCloseModal={() => {\n            setIsShowPopup(false)\n          }} />\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title m-card-title\">Dach sách tham gia</h5>\n                  {topic && topic.status == TopicStatus.APPROVED &&\n                    <div className=\"cart-btn-bar\">\n                      <button onClick={() => { setIsShowPopup(true) }} className=\"btn btn-primary mr-1\">Kết thúc</button>\n                    </div>\n                  }\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Avatar</th>\n                      <th>Name</th>\n                      <th>Point</th>\n                      <th>Duration</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {page && page.list && page.list.map((form, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>{<img className=\"avatar\" src={form.user.avatar} />}</td>\n                          <td>{form.user.name}</td>\n                          <td>{form.point}</td>\n                          <td>{(form.jsonDetail.timeEnd - form.jsonDetail.timeStart) / 1000} seconds</td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default ListLightingQuizForm;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { useEffect, useState } from \"react\";\nimport { Page, Promotion, EgagementsFilter } from \"./interface\";\nimport { Link } from \"react-router-dom\";\nimport { City, District } from \"./utils/ProvinceUtil\";\nimport * as PromotionType from './constant/PromotionType'\nimport * as PromotionStatus from './constant/PromotionStatus'\nimport AlertUtils from \"./utils/AlertUtils\";\nimport { AreYouSurePopup } from \"./popup\";\nimport { type } from \"os\";\n\n\n\n\nfunction Egagements() {\n  const navigate = useNavigate()\n  const [promotionPage, setPromotionPage] = useState<Page<Promotion>>()\n  const [isShowApprovedPopup, setIsShowApprovedPopup] = useState(false)\n  const [isShowRemovedPopup, setIsShowRemovedPopup] = useState(false)\n  const [selectedId, setSelectedId] = useState<number>()\n  const [filter, setFilter] = useState<EgagementsFilter>({ type: PromotionType.LIGHTING_QUIZ_GAME_PROMOTION_TYPE })\n\n  const fetchPromotionPage = (type: number) => {\n    PromotionModel.list([type])\n      .then(resp => {\n        if (resp.error == 0) {\n          setPromotionPage(resp.data);\n        }\n      })\n  }\n\n  const updateStatus = (status: number) => {\n    PromotionModel.updateStatus(selectedId, status)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n          fetchPromotionPage(filter.type)\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotionPage(filter.type)\n  }, [])\n\n  return (\n    <Layout>\n      {\n        <>\n          <AreYouSurePopup open={isShowApprovedPopup} onCloseModal={() => {\n            setIsShowApprovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(PromotionStatus.APPROVED)\n              setIsShowApprovedPopup(false)\n            }} />\n\n          <AreYouSurePopup open={isShowRemovedPopup} onCloseModal={() => {\n            setIsShowRemovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(PromotionStatus.REMOVED)\n              setIsShowRemovedPopup(false)\n            }} />\n        </>\n      }\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Egagements\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-bar\" style={{ padding: '20px' }}>\n                  <div className=\"row\">\n                    <div className=\"col-2 col-xl-2 ml-auto\">\n                      <select onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n                        setFilter({ ...filter, type: Number(e.currentTarget.value) })\n                        fetchPromotionPage(Number(e.currentTarget.value))\n                      }} className=\"form-control\">\n                        <option value={PromotionType.LIGHTING_QUIZ_GAME_PROMOTION_TYPE}>Nhanh như chớp</option>\n                        <option value={PromotionType.PREDICT_FOOTBALL}>Dự đoán bóng đá</option>\n                      </select>\n                    </div>\n                    <button style={{ marginRight: '10px !important' }} onClick={() => {\n                      navigate('/egagement/create-or-update')\n                    }} className=\"btn btn-primary mr-1\">Tạo mới</button>\n                  </div>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Id</th>\n                      <th>Title</th>\n                      <th>Type</th>\n                      <th>City</th>\n                      <th>District</th>\n                      <th>Status</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {promotionPage && promotionPage.list && promotionPage.list.map(promotion => {\n                      return (\n                        <tr>\n                          <td>{promotion.id}</td>\n                          <td>{promotion.title}</td>\n                          <td>{PromotionType.findName(promotion.type)}</td>\n                          <td>\n                            {promotion.cityIds && promotion.cityIds.map((l: number) => City.getName(l)).join(\", \")}\n                          </td>\n                          <td>\n                            {promotion.districtIds && promotion.districtIds.map((l: number) => District.getName(l)).join(\", \")}\n                          </td>\n\n                          <td><span style={{ backgroundColor: PromotionStatus.findColor(promotion.status) }}\n                            className=\"badge badge-info\">{PromotionStatus.findName(promotion.status)}</span></td>\n                          <td className=\"table-action\">\n                            <Link to={`/promotion/detail/${promotion.id}`}><i style={{ fontSize: '15px' }}\n                              className=\"ion ion-ios-open mr-2\" /></Link>\n                            {promotion.status == PromotionStatus.INIT &&\n                              <>\n                                <Link to={`/promotion/create-or-update/${promotion.id}`}><i style={{ fontSize: '15px' }}\n                                  className=\"align-middle fas fa-fw fa-pen\" /></Link>\n                                <i onClick={() => {\n                                  setSelectedId(promotion.id)\n                                  setIsShowApprovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"ion ion-ios-globe mr-2\"></i>\n                                <i onClick={() => {\n                                  setSelectedId(promotion.id)\n                                  setIsShowRemovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"align-middle fas fa-fw fa-trash\"></i>\n                              </>\n                            }\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Egagements;\n","export const REQUEST_REGISTER_ZNS = 1;\nexport const BROADCAST_NORMAL_POST = 2;\n\nexport function findName(value) {\n    switch (value) {\n        case REQUEST_REGISTER_ZNS: return 'Gửi tin đăng ký bằng ZNS'\n        case BROADCAST_NORMAL_POST: return 'Broadcast bài viết'\n    }\n}\n\nexport function findColor(value) {\n    switch (value) {\n        case REQUEST_REGISTER_ZNS: return '#20c997'\n        case BROADCAST_NORMAL_POST: return '#dc3545'\n    }\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class BroadcastModel {\n\n    static create(form) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/broadcast/create`, JSON.stringify(form), resolve, reject);\n        });\n    }\n\n    static update(id, form) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/broadcast/update?id=${id}`, JSON.stringify(form), resolve, reject);\n        });\n    }\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/broadcast/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static list() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/broadcast/find`, resolve, reject);\n        });\n    }\n\n    static updateStatus(id, status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/broadcast/update-status?id=${id}&status=${status}`, resolve, reject);\n        });\n    }\n\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport Select from 'react-select'\nimport { City, District } from './utils/ProvinceUtil'\nimport { useEffect, useState } from \"react\";\nimport { Broadcast, Post } from \"./interface\";\nimport * as BroadcastType from './constant/BroadcastType'\nimport PostModel from \"./model/PostModel\";\nimport BroadcastModel from \"./model/BroadcastModel\";\nimport AlertUtils from \"./utils/AlertUtils\";\nimport { AreYouSurePopup } from \"./popup\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nconst cityOptions = City.getOptions()\nfunction CreateOrUpdateBroadcast() {\n  let { id } = useParams();\n  const [form, setForm] = useState<Broadcast>({} as Broadcast)\n  const [errorMsg, setErrorMsg] = useState<string>()\n  const [lstPost, setLstPost] = useState<Array<Post>>()\n  const [isShowPopup, setIsShowPopup] = useState(false)\n  const navigate = useNavigate()\n\n  const fetchGetListPost = () => {\n    PostModel.getList()\n      .then(resp => {\n        if (resp.error == 0) {\n          setLstPost(resp.data)\n        }\n      })\n  }\n  const fetchBroadcast = () => {\n    BroadcastModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setForm(resp.data)\n        }\n      })\n  }\n\n  const isValidForm = (): boolean => {\n    if (!form.name) {\n      setErrorMsg('Vui lòng nhập title')\n      return false;\n    }\n\n    if (!form.type) {\n      setErrorMsg('Vui lòng chọn loại broadcast')\n      return false;\n    }\n\n    // if (form.type == BroadcastType.REQUEST_REGISTER_ZNS) {\n    //   setErrorMsg('Chưa hỗ trợ type này')\n    //   return false;\n    // }\n\n    if (!form.cityIds) {\n      setErrorMsg('Vui lòng chọn ít nhất một thành phố')\n      return false;\n    }\n    return true;\n\n  }\n\n  const createOrUpdateBroadcast = () => {\n    if (id) {\n      BroadcastModel.update(id, form)\n        .then(resp => {\n          if (resp.error == 0) {\n            AlertUtils.showSuccess('Thành công')\n          } else {\n            AlertUtils.showError(resp.msg)\n          }\n        })\n    } else {\n      BroadcastModel.create(form)\n        .then(resp => {\n          if (resp.error == 0) {\n            navigate('/broadcast')\n            AlertUtils.showSuccess('Thành công')\n          } else {\n            AlertUtils.showError(resp.msg)\n          }\n        })\n    }\n  }\n\n\n  useEffect(() => {\n    if (id) {\n      fetchBroadcast()\n    }\n    fetchGetListPost()\n  }, [])\n\n  return (\n    <Layout>\n      <AreYouSurePopup open={isShowPopup} onCloseModal={() => {\n        setIsShowPopup(false)\n      }} onAgree={() => {\n        createOrUpdateBroadcast()\n        setIsShowPopup(false)\n      }} />\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Broadcast\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-8\">\n                        <label htmlFor=\"inputEmail4\">Title</label>\n                        <input value={form.name} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, name: e.currentTarget.value }) }} className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Type</label>\n                        <select value={form.type} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, type: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          <option value={BroadcastType.REQUEST_REGISTER_ZNS}>{BroadcastType.findName(BroadcastType.REQUEST_REGISTER_ZNS)}</option>\n                          <option value={BroadcastType.BROADCAST_NORMAL_POST}>{BroadcastType.findName(BroadcastType.BROADCAST_NORMAL_POST)}</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Time Start</label>\n                        <input value={moment(new Date(form.timeStart)).format(\"YYYY-MM-DDTkk:mm\")} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          let time = new Date(e.currentTarget.value).getTime();\n                          setForm({ ...form, timeStart: time })\n                        }} type=\"datetime-local\" className=\"form-control\" />\n                      </div>\n                      {form.type == BroadcastType.BROADCAST_NORMAL_POST &&\n                        <div className=\"form-group col-md-4\">\n                          <label htmlFor=\"inputState\">Bài viết</label>\n                          <select value={form.postId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, postId: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                            <option selected>Choose...</option>\n                            {lstPost && lstPost.map((post) => {\n                              return (\n                                <option value={post.id}>{post.title}</option>\n                              )\n                            })}\n                          </select>\n                        </div>\n                      }\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">City</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={form.cityIds && form.cityIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: City.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, cityIds: list })\n                          }}\n                          options={cityOptions}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">District</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={form.districtIds && form.districtIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: District.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, districtIds: list })\n                          }}\n                          options={(form.cityIds && District.getOption(form.cityIds)) ? District.getOption(form.cityIds) : []}\n                        />\n                      </div>\n                    </div>\n                    {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                    <div onClick={() => {\n                      if (isValidForm()) {\n                        setIsShowPopup(true)\n                      }\n                    }} className=\"btn btn-primary\">Save</div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default CreateOrUpdateBroadcast;\n","export const INIT = 1;\nexport const APPROVED = 2;\nexport const DELETED = 3;\nexport const CANCELED = 4;\nexport const DONE = 5;\nexport const FAILED = 6;\n\nexport function findName(value) {\n    switch (value) {\n        case INIT: return 'Mới khởi tạo'\n        case APPROVED: return 'Đã duyệt'\n        case DELETED: return 'Đã xóa'\n        case CANCELED: return 'Đã hủy'\n        case DONE: return 'Hoàn thành'\n        case FAILED: return 'Thất bại'\n    }\n}\n\nexport function findColor(value) {\n    switch (value) {\n        case INIT: return '#20c997'\n        case APPROVED: return '#dc3545'\n        case DELETED: return '#20c997'\n        case CANCELED: return '#20c997'\n        case DONE: return '#20c997'\n        case FAILED: return '#20c997'\n    }\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { Broadcast, Page, Promotion } from \"./interface\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { City, District } from \"./utils/ProvinceUtil\";\nimport AlertUtils from \"./utils/AlertUtils\";\nimport { AreYouSurePopup } from \"./popup\";\nimport * as BroadcastType from './constant/BroadcastType'\nimport * as BroadcastStatus from './constant/BroadcastStatus'\nimport BroadcastModel from \"./model/BroadcastModel\";\n\n\n\nfunction BroadcastPage() {\n  const [broadcastPage, setBroadcastPage] = useState<Page<Broadcast>>()\n  const [isShowApprovedPopup, setIsShowApprovedPopup] = useState(false)\n  const [isShowRemovedPopup, setIsShowRemovedPopup] = useState(false)\n  const [selectedId, setSelectedId] = useState<number>()\n\n  const fetchBroadcastPage = () => {\n    BroadcastModel.list()\n      .then(resp => {\n        if (resp.error == 0) {\n          setBroadcastPage(resp.data);\n        }\n      })\n  }\n\n  const updateStatus = (status: number) => {\n    BroadcastModel.updateStatus(selectedId, status)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess('Thành công')\n          fetchBroadcastPage()\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchBroadcastPage()\n  }, [])\n\n  return (\n    <Layout>\n      {\n        <>\n          <AreYouSurePopup open={isShowApprovedPopup} onCloseModal={() => {\n            setIsShowApprovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(BroadcastStatus.APPROVED)\n              setIsShowApprovedPopup(false)\n            }} />\n\n          <AreYouSurePopup open={isShowRemovedPopup} onCloseModal={() => {\n            setIsShowRemovedPopup(false)\n          }}\n            onAgree={() => {\n              updateStatus(BroadcastStatus.CANCELED)\n              setIsShowRemovedPopup(false)\n            }} />\n        </>\n\n      }\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Broadcast\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"cart-btn-bar\">\n                    <Link to={\"/broadcast/create-or-update\"} className=\"btn btn-primary mr-1\">Tạo broadcast</Link>\n                  </div>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Id</th>\n                      <th>Title</th>\n                      <th>Type</th>\n                      <th>City</th>\n                      <th>District</th>\n                      <th>Status</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {broadcastPage && broadcastPage.list && broadcastPage.list.map(broadcast => {\n                      return (\n                        <tr>\n                          <td>{broadcast.id}</td>\n                          <td>{broadcast.name}</td>\n                          <td>{BroadcastType.findName(broadcast.type)}</td>\n                          <td>\n                            {broadcast.cityIds && broadcast.cityIds.map((l: number) => City.getName(l)).join(\", \")}\n                          </td>\n                          <td>\n                            {broadcast.districtIds && broadcast.districtIds.map((l: number) => District.getName(l)).join(\", \")}\n                          </td>\n                          <td><span style={{ backgroundColor: BroadcastStatus.findColor(broadcast.status) }}\n                            className=\"badge badge-info\">{BroadcastStatus.findName(broadcast.status)}</span>\n                          </td>\n                          <td className=\"table-action\">\n                            {broadcast.status == BroadcastStatus.DONE &&\n                              <Link to={`/broadcast/detail/${broadcast.id}`}><i style={{ fontSize: '15px' }}\n                                className=\"ion ion-ios-open mr-2\" /></Link>\n                            }\n                            {broadcast.status == BroadcastStatus.INIT &&\n                              <>\n                                <Link to={`/broadcast/create-or-update/${broadcast.id}`}><i style={{ fontSize: '15px', margin: '0 10px' }} className=\"align-middle fas fa-fw fa-pen\" /></Link>\n                                <i onClick={() => {\n                                  setSelectedId(broadcast.id)\n                                  setIsShowApprovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"ion ion-ios-globe mr-2\"></i>\n                                <i onClick={() => {\n                                  setSelectedId(broadcast.id)\n                                  setIsShowRemovedPopup(true)\n                                }} style={{ cursor: 'pointer', margin: '0 10px' }} className=\"align-middle fas fa-fw fa-trash\"></i>\n                              </>\n                            }\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default BroadcastPage;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { Broadcast, CountUserDashboard } from \"./interface\";\nimport UserModel from \"./model/UserModel\";\nimport BroadcastModel from \"./model/BroadcastModel\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction DetailBroadcast() {\n  let { id } = useParams();\n  const [broadcast, setBroadcast] = useState<Broadcast>()\n  const [countUser, setCountUser] = useState<CountUserDashboard>();\n\n  const fetchBroadcast = () => {\n    BroadcastModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setBroadcast(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchBroadcast()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Chi tiết broadcast\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Tổng số user</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24}\n                            viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2}\n                            strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-dollar-sign align-middle\">\n                            <line x1={12} y1={1} x2={12} y2={23} /><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /></svg>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{broadcast?.totalUids}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Tổng số user gửi thành công</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24}\n                            viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2}\n                            strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-dollar-sign align-middle\">\n                            <line x1={12} y1={1} x2={12} y2={23} /><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /></svg>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{broadcast?.totalUidsSuccessSend}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Tổng số user Click</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24}\n                            viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2}\n                            strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-dollar-sign align-middle\">\n                            <line x1={12} y1={1} x2={12} y2={23} /><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /></svg>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{broadcast?.userIds.length}</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DetailBroadcast;\n","import Layout from \"./component/Layout\";\nimport Modal from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { Page, Form, FormFilter, Promotion } from \"./interface\";\nimport { City, District } from './utils/ProvinceUtil'\nimport { getListForRetailer } from \"./utils/CementUtil\";\nimport UserModel from \"./model/UserModel\";\nimport { Link } from \"react-router-dom\";\nimport * as StockFormStatus from './constant/StockFormStatus';\nimport AlertUtils from \"./utils/AlertUtils\";\nimport FormModel from \"./model/FormModel\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { STOCK_PROMOTION_TYPE } from \"./constant/PromotionType\";\nimport DateTimeUtil from \"./utils/DateTimeUtil\";\n\nconst default_avatar = 'http://cdn.onlinewebfonts.com/svg/img_264570.png'\nconst PAGE_SIZE = 10;\nfunction PromotionForms() {\n  const [formPage, setFormPage] = useState<Page<Form>>()\n  const [filter, setFilter] = useState<FormFilter>({} as FormFilter)\n  const [listPromotion, setListPromotion] = useState<Array<Promotion>>()\n\n\n  const fetchListStockPromotion = () => {\n    PromotionModel.list(STOCK_PROMOTION_TYPE)\n      .then(resp => {\n        if (resp.error == 0) {\n          let lst: Array<Promotion> = resp.data.list;\n          setListPromotion(lst);\n          let ids = lst.map(e => e.id);\n          setFilter({ ...filter, promotionIds: ids })\n          fetchFormPromotions(ids, filter.cityId, filter.status)\n        }\n      })\n  }\n\n  const fetchFormPromotions = (ids, cityId, status) => {\n    FormModel.findStockForm(ids, cityId, status, 0, PAGE_SIZE)\n      .then(resp => {\n        if (resp.error == 0) {\n          setFormPage(resp.data)\n        }\n      })\n  }\n\n\n  useEffect(() => {\n    fetchListStockPromotion()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Đơn tham gia\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-bar\" style={{ padding: '10px' }}>\n                  <div className=\"row \">\n                    <div className=\"col-2 col-xl-2 ml-auto\">\n                      {listPromotion &&\n                        <select value={(filter.promotionIds && filter.promotionIds.length == 1) ? filter.promotionIds[0] : 0} onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n                          let promotionIds: Array<number> = [];\n                          let promotionId = Number(e.currentTarget.value);\n                          promotionIds.push(promotionId)\n                          if (promotionId == 0) {\n                            fetchFormPromotions(listPromotion.map(e => e.id), filter.cityId, filter.status)\n                          } else {\n                            fetchFormPromotions(promotionId, filter.cityId, filter.status)\n                          }\n                          setFilter({ ...filter, promotionIds: promotionIds })\n                        }} className=\"form-control\">\n                          <option value={0}>Chiến dịch</option>\n                          {listPromotion && listPromotion.map((value) => {\n                            return (\n                              <option key={value.id} value={value.id}>{value.title}</option>\n                            )\n                          })}\n                        </select>\n                      }\n                    </div>\n                    <div className=\"col-2 col-xl-2\">\n                      <select value={filter.cityId ? filter.cityId : 0} onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n\n                        fetchFormPromotions(filter.promotionIds, Number(e.currentTarget.value), filter.status)\n                        setFilter({ ...filter, cityId: Number(e.currentTarget.value) })\n\n                      }} className=\"form-control\">\n                        <option value={0}>Thành phố</option>\n                        {City.getList().map((value) => {\n                          return (\n                            <option key={value.key} value={value.key}>{value.value}</option>\n                          )\n                        })}\n                      </select>\n                    </div>\n\n                    <div className=\"col-2 col-xl-2 \">\n                      <select value={filter.status ? filter.status : 0} onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n\n                        fetchFormPromotions(filter.promotionIds, filter.cityId, Number(e.currentTarget.value))\n                        setFilter({ ...filter, status: Number(e.currentTarget.value) })\n\n                      }} className=\"form-control\">\n                        <option value={0}>Trạng thái</option>\n                        <option value={StockFormStatus.APPROVED}>Đã duyệt</option>\n                        <option value={StockFormStatus.INIT}>Chờ duyệt</option>\n                        <option value={StockFormStatus.SEND_GIFT}>Đã gửi quà</option>\n                        <option value={StockFormStatus.REJECTED}>Đã từ chối</option>\n                      </select>\n                    </div>\n                  </div>\n\n                </div>\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th></th>\n                      <th>Chiến dịch</th>\n                      <th>Cửa hàng</th>\n                      <th>Thành phố / Quận</th>\n                      <th>INSEE ID</th>\n                      <th>Thời gian</th>\n                      <th>Trạng thái</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {formPage && formPage.list && formPage.list.map((form, key) => {\n                      return (\n                        <tr>\n                          <td><img className=\"m-avatar\" src={form.user.avatar ? form.user.avatar : default_avatar} /></td>\n                          <td>{form.promotion.title}</td>\n                          <td>{form.user.name}</td>\n                          <td>{City.getName(form.user.cityId)}</td>\n                          <td>{form.user.inseeId}</td>\n                          <td>{DateTimeUtil.toString(form.time * 1000)}</td>\n                          <td><span style={{ backgroundColor: StockFormStatus.findColor(form.status) }} className=\"badge badge-info\">{StockFormStatus.findName(form.status)}</span></td>\n                          <td className=\"table-action\">\n                            <Link to={`/form/detail/${form.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default PromotionForms;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { CountUserDashboard } from \"./interface\";\nimport UserModel from \"./model/UserModel\";\n\n\nfunction DashboardUser() {\n  const [countUser, setCountUser] = useState<CountUserDashboard>();\n\n  const fetchCountUser = () => {\n    UserModel.count()\n      .then(resp => {\n        if (resp.error === 0) {\n          setCountUser(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchCountUser()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Thống kê\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Tổng số thành viên</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-store\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countUser?.numUser}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã duyệt</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-check-circle\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countUser?.numApprovedUser}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Chờ duyệt</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-hourglass\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countUser?.numWaitingReviewUser}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Chờ kích hoạt</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-hourglass\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countUser?.numWaitingActiveUser}</h1>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DashboardUser;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { CountFormDTO, CountUserDashboard, Promotion } from \"./interface\";\nimport UserModel from \"./model/UserModel\";\nimport FormModel from \"./model/FormModel\";\nimport * as TypePromotion from './constant/PromotionType'\nimport PromotionModel from \"./model/PromotionModel\";\n\n\nfunction DashboardEgagements() {\n  const [countUser, setCountUser] = useState<CountUserDashboard>();\n  const [countFormByPromotion, setCountFormByPromotion] = useState<CountFormDTO>()\n  const [listPromotion, setListPromotion] = useState<Array<Promotion>>()\n  const [selectedPromotion, setSelectedPromotion] = useState<number>(0)\n\n  const fetchLQPromotion = () => {\n    PromotionModel.list(TypePromotion.LIGHTING_QUIZ_GAME_PROMOTION_TYPE)\n      .then(resp => {\n        if (resp.error == 0) {\n          let lst: Array<Promotion> = resp.data.list;\n          setListPromotion(lst);\n        }\n      })\n  }\n\n  const fetchCountUser = () => {\n    UserModel.count()\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountUser(resp.data)\n        }\n      })\n  }\n  const fetchCountForm = () => {\n    FormModel.countFormByTypePromotion(TypePromotion.LIGHTING_QUIZ_GAME_PROMOTION_TYPE)\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountFormByPromotion(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchCountUser()\n    fetchCountForm()\n    fetchLQPromotion()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Thống kê\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Tổng</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-file\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.total}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã duyệt</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-check-circle\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.approved}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Chờ duyệt</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-hourglass\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.init}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã gửi quà</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-gift\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.sendGift}</h1>\n                </div>\n              </div>\n            </div>\n\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã nhận quà</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-gift\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.receivedGift}</h1>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-2 col-xl-2 ml-auto\">\n              {listPromotion &&\n                <select value={selectedPromotion} onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n                  setSelectedPromotion(Number(e.currentTarget.value))\n                }} className=\"form-control\">\n                  <option value={0}>Chiến dịch</option>\n                  {listPromotion && listPromotion.map((value) => {\n                    return (\n                      <option key={value.id} value={value.id}>{value.title}</option>\n                    )\n                  })}\n                </select>\n              }\n            </div>\n            <div style={{ textAlign: 'right' }} className=\"col-1 col-xl-1\">\n              <button style={{ backgroundColor: '#6f42c1' }} onClick={() => {\n                if (selectedPromotion == 0) {\n                  alert(\"Vui lòng chọn một chiến dịch\")\n                  return;\n                }\n                window.open(`${process.env.REACT_APP_DOMAIN}/api/lq-form/export-excel?promotionId=${selectedPromotion}`, '_blank')\n              }} className=\"btn btn-primary mr-1\">Export</button>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DashboardEgagements;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { CountFormDTO, CountUserDashboard, Promotion } from \"./interface\";\nimport UserModel from \"./model/UserModel\";\nimport FormModel from \"./model/FormModel\";\nimport * as TypePromotion from './constant/PromotionType'\nimport PromotionModel from \"./model/PromotionModel\";\n\n\nfunction DashboardPromotion() {\n  const [countUser, setCountUser] = useState<CountUserDashboard>();\n  const [countFormByPromotion, setCountFormByPromotion] = useState<CountFormDTO>()\n  const [listPromotion, setListPromotion] = useState<Array<Promotion>>()\n  const [selectedPromotion, setSelectedPromotion] = useState<number>(0)\n\n\n  const fetchListStockPromotion = () => {\n    PromotionModel.list(TypePromotion.STOCK_PROMOTION_TYPE)\n      .then(resp => {\n        if (resp.error == 0) {\n          let lst: Array<Promotion> = resp.data.list;\n          setListPromotion(lst);\n        }\n      })\n  }\n\n  const fetchCountUser = () => {\n    UserModel.count()\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountUser(resp.data)\n        }\n      })\n  }\n\n  const fetchCountForm = () => {\n    FormModel.countFormByTypePromotion(TypePromotion.STOCK_PROMOTION_TYPE)\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountFormByPromotion(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchCountUser()\n    fetchCountForm()\n    fetchListStockPromotion()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Thống kê\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Tổng</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-file\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.total}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã duyệt</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-check-circle\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.approved}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Chờ duyệt</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-hourglass\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.init}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã gửi quà</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-gift\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.sendGift}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã nhận quà</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-gift\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countFormByPromotion?.receivedGift}</h1>\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2 col-xl-2 ml-auto\">\n              {listPromotion &&\n                <select value={selectedPromotion} onChange={(e: React.FormEvent<HTMLSelectElement>) => {\n                  setSelectedPromotion(Number(e.currentTarget.value))\n                }} className=\"form-control\">\n                  <option value={0}>Chiến dịch</option>\n                  {listPromotion && listPromotion.map((value) => {\n                    return (\n                      <option key={value.id} value={value.id}>{value.title}</option>\n                    )\n                  })}\n                </select>\n              }\n            </div>\n            <div style={{ textAlign: 'right' }} className=\"col-1 col-xl-1\">\n              <button style={{ backgroundColor: '#6f42c1' }} onClick={() => {\n                if (selectedPromotion == 0) {\n                  alert(\"Vui lòng chọn một chiến dịch\")\n                  return;\n                }\n                window.open(`${process.env.REACT_APP_DOMAIN}/api/stock-form/export-excel?promotionId=${selectedPromotion}`, '_blank')\n              }} className=\"btn btn-primary mr-1\">Export</button>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DashboardPromotion;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport Select from 'react-select'\nimport * as CementEnum from './component/enum/CementEnum'\nimport { City, District } from './utils/ProvinceUtil'\nimport { useEffect, useState } from \"react\";\nimport { Promotion } from \"./interface\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { useParams } from \"react-router-dom\";\nimport AlertUtils from \"./utils/AlertUtils\";\nimport { useNavigate } from 'react-router-dom';\n\nconst locationOptions = City.getOptions()\nfunction CreateOrUpdateEngagement() {\n  let { id } = useParams();\n  const [form, setForm] = useState<Promotion>({} as Promotion)\n  const [errorMsg, setErrorMsg] = useState<string>()\n  const navigate = useNavigate()\n\n\n  const fetchPromotion = () => {\n    PromotionModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setForm(resp.data)\n        }\n      })\n  }\n\n  const submit = () => {\n    if (!form.title || !form.type\n      || !form.timeStart || !form.timeEnd) {\n      setErrorMsg('Vui lòng điền đủ thông tin')\n      return;\n    }\n\n    if (id) {\n      PromotionModel.update(form)\n        .then(resp => {\n          if (resp.error == 0) {\n            AlertUtils.showSuccess('Thành công')\n          } else {\n            AlertUtils.showError(resp.msg)\n          }\n        })\n    } else {\n      PromotionModel.create(form)\n        .then(resp => {\n          if (resp.error == 0) {\n            if (form.type == 21) {\n              navigate('/egagement')\n            } else {\n              navigate('/promotion')\n            }\n            AlertUtils.showSuccess('Thành công')\n          } else {\n            AlertUtils.showError(resp.msg)\n          }\n        })\n    }\n\n  }\n\n  useEffect(() => {\n    if (id) {\n      fetchPromotion()\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Promotion\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title\">Thông tin chương trình khuyến mãi</h5>\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-8\">\n                        <label htmlFor=\"inputEmail4\">Title</label>\n                        <input value={form.title} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, title: e.currentTarget.value }) }} className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Type</label>\n                        <select value={form.type} disabled={id != null} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, type: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          {/* <option value={20}>Stock Promotion</option> */}\n                          <option value={21}>Lighting Quiz Promotion</option>\n                          <option value={0}>Dự đoán kết quả bóng đá</option>\n                          {/* <option value={0}>Loyalty</option> */}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Time Start</label>\n                        <input value={form.timeStart ? new Date(form.timeStart).toISOString().slice(0, 10) : ''}\n                          onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                            setForm({ ...form, timeStart: Number(e.currentTarget.valueAsDate?.getTime()) })\n                          }} type=\"date\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Time End</label>\n                        <input value={form.timeEnd ? new Date(form.timeEnd).toISOString().slice(0, 10) : ''}\n                          onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                            setForm({ ...form, timeEnd: Number(e.currentTarget.valueAsDate?.getTime()) })\n                          }} type=\"date\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">City</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={form.cityIds && form.cityIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: City.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, cityIds: list })\n                          }}\n                          options={locationOptions}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">District</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={form.districtIds && form.districtIds.map((id: number) => {\n                            return {\n                              value: id,\n                              label: District.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, districtIds: list })\n                          }}\n                          options={form.cityIds ? District.getOption(form.cityIds) : []}\n                        />\n                      </div>\n                    </div>\n                    {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                    <div onClick={submit} className=\"btn btn-primary\">Submit</div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default CreateOrUpdateEngagement;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport {CountGiftDTO } from \"./interface\";\nimport GiftModel from \"./model/GiftModel\";\n\n\nfunction DashboardGift() {\n  const [countGift, setCountGift] = useState<CountGiftDTO>()\n\n\n  const fetchGift = () => {\n    GiftModel.count()\n      .then(resp => {\n        if (resp.error == 0) {\n          setCountGift(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchGift()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Thống kê\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Tổng</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-file\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countGift?.total}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã gửi</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-check-circle\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countGift?.send}</h1>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-3 col-xl\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col mt-0\">\n                      <h5 className=\"card-title\">Đã nhận</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                          <i className=\"align-middle fas fa-fw fa-hourglass\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h1 className=\"display-5 mt-1 mb-3\">{countGift?.received}</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DashboardGift;\n","export const SENT = 2;\nexport const RECEIEVED = 3;\n\n\nexport function findName(value) {\n    switch (value) {\n        case SENT: return 'Chờ nhận'\n        case RECEIEVED: return 'Đã nhận'\n    }\n}\n\nexport function findColor(value) {\n    switch (value) {\n        case SENT: return '#20c997'\n        case RECEIEVED: return '#dc3535'\n    }\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { useEffect, useState } from \"react\";\nimport { GiftDTO, Page, Promotion } from \"./interface\";\nimport * as GiftStatus from './constant/GiftStatus'\nimport GiftModel from \"./model/GiftModel\";\n\n\n\nfunction Gifts() {\n  const [gifts, setGifts] = useState<Page<GiftDTO>>()\n\n  const fetchGifts = () => {\n    GiftModel.find(null, 0, 200)\n      .then(resp => {\n        if (resp.error == 0) {\n          setGifts(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchGifts()\n  }, [])\n\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Gifts\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Id</th>\n                      <th>Avatar</th>\n                      <th>Cửa hàng</th>\n                      <th>SDT</th>\n                      <th>Quà tặng</th>\n                      <th>Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {gifts && gifts.list && gifts.list.map(gift => {\n                      return (\n                        <tr>\n                          <td>{gift.id}</td>\n                          <td><img className=\"avatar-gift\" src={gift.user.avatar} /></td>\n                          <td>{gift.user.name}</td>\n                          <td>{gift.user.phone}</td>\n                          <td>{gift.title}</td>\n                          <td><span style={{ backgroundColor: GiftStatus.findColor(gift.status) }}\n                            className=\"badge badge-info\">{GiftStatus.findName(gift.status)}</span></td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Gifts;\n","import APIUtil from '../utils/APIUtils'\n\nexport default class PredictMatchFootballFormModel {\n\n    static list(matchId, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/match-football-form/list?matchId=${matchId}&page=${page}&pageSize=${pageSize}`, resolve, reject);\n        });\n    }\n\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport PredictMatchFootballFormModel from \"./model/PredictMatchFootballFormModel\";\nimport { Page, PredictMatchForm } from \"./interface\";\n\nfunction ListPredictFootballForm() {\n  let { id } = useParams();\n  const [pageForm, setPageForm] = useState<Page<PredictMatchForm>>()\n\n  const fetchPredictForm = (matchId) => {\n    PredictMatchFootballFormModel.list(matchId, 0, 200)\n      .then(resp => {\n        if (resp.error == 0) {\n          setPageForm(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPredictForm(id)\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title m-card-title\">Dach sách dự đoán</h5>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Avatar</th>\n                      <th>Name</th>\n                      <th>Dự đoán</th>\n                      <th>Trạng thái</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {pageForm && pageForm.list && pageForm.list.map((form: PredictMatchForm, index: number) => {\n                      return (\n                        <tr>\n                          <td>{<img className=\"avatar\" src={form.user.avatar} />}</td>\n                          <td>{form.user.name}</td>\n                          <td>{form.teamWin == 0 ? 'Hòa' : (form.teamWin == 1 ? `${form.match.teamOne} thắng` : `${form.match.teamTwo} thắng`)}</td>\n                          <td>{form.status}</td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default ListPredictFootballForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Alert from 'react-s-alert';\n\nimport '../src/resource/css/modern.css';\nimport '../src/resource/css/index.css'\nimport UserPage from './UserPage';\nimport Dashboard from './Dashboard';\nimport StockForm from './StockForm';\nimport DetailUserPage from './DetailUserPage';\nimport CreatePost from './CreatePost';\n\n\nimport reportWebVitals from './reportWebVitals';\nimport Posts from './Posts';\nimport UpdatePost from './UpdatePost';\nimport CreateOrUpdatePromotion from './CreateOrUpdatePromotion';\nimport Promotions from './Promotions';\nimport DetailPromotion from './DetailPromotion';\nimport DetailForm from '../src/DetailForm';\nimport ListLightingQuizForm from './ListLightingQuizForm';\n\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css';\nimport Egagements from './Egagements';\nimport CreateOrUpdateBroadcast from './CreateOrUpdateBroadcast';\nimport BroadcastPage from './BroadcastPage';\nimport DetailBroadcast from './DetailBroadcast';\nimport PromotionForms from './PromotionForms';\nimport DashboardUser from './DashboardUser';\nimport DashboardEgagements from './DashboardEgagements';\nimport DashboardPromotion from './DashboardPromotion';\nimport CreateOrUpdateEngagement from './CreateOrUpdateEngagement';\nimport DashboardGift from './DashboardGift';\nimport Gifts from './Gifts';\nimport ListPredictFootballForm from './ListPredictFootballForm';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n        <Route path=\"/user\" element={<DashboardUser />} />\n        <Route path=\"/user/list\" element={<UserPage />} />\n        <Route path=\"/stock-form\" element={<StockForm />} />\n        <Route path=\"/user/:id\" element={<DetailUserPage />} />\n        <Route path=\"/post/create\" element={<CreatePost />} />\n        <Route path=\"/post/detail/:id\" element={<UpdatePost />} />\n        <Route path=\"/post\" element={<Posts />} />\n        <Route path=\"/promotion/create-or-update\" element={<CreateOrUpdatePromotion />} />\n        <Route path=\"/promotion/create-or-update/:id\" element={<CreateOrUpdatePromotion />} />\n        <Route path=\"/promotion\" element={<DashboardPromotion />} />\n        <Route path=\"/promotion/list\" element={<Promotions />} />\n        <Route path=\"/promotion/forms\" element={<PromotionForms />} />\n\n\n        <Route path=\"/egagement\" element={<DashboardEgagements />} />\n        <Route path=\"/egagement/list\" element={<Egagements />} />\n        <Route path=\"/egagement/create-or-update\" element={<CreateOrUpdateEngagement />} />\n\n        <Route path=\"/gift\" element={<DashboardGift />} />\n        <Route path=\"/gift/list\" element={<Gifts />} />\n\n\n        <Route path=\"/broadcast\" element={<BroadcastPage />} />\n        <Route path=\"/broadcast/create-or-update\" element={<CreateOrUpdateBroadcast />} />\n        <Route path=\"/broadcast/create-or-update/:id\" element={<CreateOrUpdateBroadcast />} />\n        <Route path=\"/broadcast/detail/:id\" element={<DetailBroadcast />} />\n\n        <Route path=\"/form/match/:id\" element={<ListPredictFootballForm />} />\n        <Route path=\"/form/list/:id/:topicId\" element={<ListLightingQuizForm />} />\n        <Route path=\"/promotion/detail/:id\" element={<DetailPromotion />} />\n        <Route path=\"/promotion/detail/:id/:topicId\" element={<DetailPromotion />} />\n        <Route path=\"/form/detail/:id\" element={<DetailForm />} />\n        <Route path=\"/form/detail/:id/*\" element={<DetailForm />} />\n\n      </Routes>\n    </BrowserRouter>\n    <Alert stack={{ limit: 3 }} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}