{"version":3,"sources":["component/Layout.js","utils/ProvinceUtil.js","utils/CementUtil.js","utils/APIUtils.js","model/UserModel.js","constant/UserStatus.js","utils/AlertUtils.js","Retailer.tsx","Dashboard.tsx","StockForm.tsx","popup/index.js","DetailRetailer.tsx","component/INSEEEditor.js","utils/UploadFileUtil.js","model/PostModel.js","model/PromotionModel.js","CreatePost.tsx","reportWebVitals.ts","Posts.tsx","utils/DateTimeUtil.js","UpdatePost.tsx","component/enum/CementEnum.js","CreatePromotion.tsx","Promotions.tsx","model/FormModel.js","constant/StockFormStatus.js","promotion/DetailStockPromotion.tsx","model/LQPromotionModel.js","constant/TopicStatus.js","promotion/DetailLQuizTopic.tsx","promotion/DetailLQuizPromotion.tsx","DetailPromotion.tsx","promotion/DetailStockForm.tsx","DetailForm.tsx","ListLightingQuizForm.tsx","index.tsx"],"names":["Layout","className","id","style","height","src","alt","to","type","placeholder","href","this","props","children","React","PureComponent","compare","a","b","value","listCity","optionsCity","key","data","r","name","status","push","label","sort","listDistrict","forEach","district","o","cityId","City","District","districtId","city","districts","rs","CementEnum","group","POWERS","WALL_PRO","LAVILLA_EXTRA_CC40","EXTRA_DURABLE_HOUSING","POWER_FAST","QUICK_CAST","STABLE_SOIL","COMPACT_ROCK","EXTRA_DURABLE","MASS_POUR","EASY_FLOW","POWER_CAST","PITU_FILL","fetch","window","APIUtils","url","success","error","method","credentials","then","resp","json","returnedValue","catch","ex","formData","headers","body","UserModel","Promise","resolve","reject","APIUtil","getJSONWithCredentials","process","page","pageSize","form","postJSONWithCredentials","JSON","stringify","findName","findColor","AlertUtils","message","Alert","position","effect","timeout","offset","warning","Retailer","useState","userPage","setUserPage","isOpenImportCustomerPopup","setIsOpenImportCustomerPopup","fetchUsers","find","useEffect","ImportCustomerPopup","open","onCloseModal","onClick","list","map","user","avatar","phone","getName","backgroundColor","UserStatus","fontSize","setForm","onClose","center","showCloseIcon","styles","modal","background","backdropFilter","borderRadius","padding","width","margin","onChange","e","currentTarget","Number","getList","address","cementId","cements","includes","filter","onSelectCement","checked","paddingRight","float","create","showSuccess","showError","msg","Dashboard","StockForm","owlClass","AreYouSurePopup","onAgree","maxWidth","minWidth","DetailRetailer","useParams","isShowConfirmPopup","setIsShowConfirmPopup","setUser","fetchUser","get","updateStatus","role","htmlFor","marginLeft","INSEEEditor","myRef","editor","ClassicEditor","document","querySelector","fontFamily","options","supportAllValues","fontColor","columns","documentColors","toolbar","items","language","image","table","contentToolbar","licenseKey","console","current","getValue","getData","setValue","setData","defaultProps","UploadFileUtil","photo","FormData","append","ctrl","AbortController","setTimeout","abort","log","PostModel","post","PromotionModel","locationOptions","getOptions","CreatePost","inputImgRef","useRef","editorRef","previewImg","setPreviewImg","file","setFile","postForm","setPostForm","errorMsg","setErrorMsg","lstPromotion","setLstPromotion","submit","content","title","summary","uploadImg","cover","location","listPromotionForPost","ref","event","URL","createObjectURL","target","files","display","maxHeight","click","promotionId","selected","isClearable","isMulti","x","locations","timeStart","valueAsDate","getTime","timeEnd","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Posts","postPage","setPostPage","l","join","Date","toLocaleDateString","cursor","month_to_vi","DateTimeUtil","timestamp","date","day","getDate","month","getMonth","year","getFullYear","UpdatePost","setPost","urlCover","defaultValue","toStringForSysten","TILE_GROUT_ULTRA","TILEFIX_PLUS_25KG","TILEFIX_PLUS_5KG","FLEX_SHIELD_5KG","FLEX_SHIELD_18KG","TILEGROUT_NANO","TILEFIX_PRO","cementOptions","item","CreatePromotion","length","Promotions","promotionPage","setPromotionPage","promotion","CementUtil","FormModel","topicId","formId","DetailStockPromotion","formPage","setFormPage","findByPromotionId","StockFormStatus","LQPromotionModel","topic","question","DetailLQuizTopic","setTopic","setQuestion","isShowImgModel","setIsShowImgModel","fetchTopic","getTopic","LQuizTopicModal","questions","rights","right","isValid","wrongOptions","textAlign","marginBottom","rows","option","paddingBottom","paddingTop","tmpQuestion","createOrUpdateQuestion","DetailLQuizPromotion","ListTopicLQuiz","isShowTopicModal","setIsShowTopicModal","promtoion","setPromotion","fetchLQPromotion","TopicPopup","topics","toLocaleString","TopicStatus","valueAsNumber","DetailPromotion","statsForm","setStatsForm","statsByPromotion","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","y","points","cx","cy","total","x1","y1","x2","y2","d","approved","DetailStockForm","isShowApporvedPopup","setIsShowApporvedPopup","isRejectPopup","setIsRejectPopup","fetchForm","jsonImg","time","ImagePopup","DetailForm","ListLightingQuizForm","setPage","isShowPopup","setIsShowPopup","fetchLQForm","findLQForm","endTopic","index","point","jsonDetail","ReactDOM","render","StrictMode","path","element","stack","limit","getElementById"],"mappings":"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","file":"static/js/main.dec92750.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Layout extends React.PureComponent {\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <nav id=\"sidebar\" className=\"sidebar\">\n                    <a className=\"sidebar-brand\">\n                        <img style={{ height: '30px' }} src=\"https://ximanginsee.gapit.com.vn/html/images/logo.png\" />\n                    </a>\n                    <div className=\"sidebar-content\">\n                        <div className=\"sidebar-user\">\n                            <img src=\"https://s120-ava-talk.zadn.vn/f/f/a/9/10/120/87069ccaa43702ad56ec93fe5a75f24f.jpg\" className=\"img-fluid rounded-circle mb-2\" alt=\"Linda Miller\" />\n                            <div className=\"font-weight-bold\">Đình Trung</div>\n                        </div>\n                        <ul className=\"sidebar-nav\">\n                            <li className=\"sidebar-header\">\n                                Main\n                            </li>\n                            <li className=\"sidebar-item\">\n                                <Link to=\"/\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle mr-2 fas fa-fw fa-home\" /> <span className=\"align-middle\">Dashboards</span>\n                                </Link>\n                            </li>\n                            <li className=\"sidebar-item\">\n                                <Link to=\"/retailer\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle mr-2 fas fa-fw fa-file\" /> <span className=\"align-middle\">Retailer</span>\n                                </Link>\n                            </li>\n                            {/* <li className=\"sidebar-item\">\n                                <Link to=\"/stock-form\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle mr-2 fas fa-fw fa-sign-in-alt\" /> <span className=\"align-middle\">Stock Form </span>\n                                </Link>\n                            </li> */}\n                            <li className=\"sidebar-item\">\n                                <Link to=\"/post\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle mr-2 fas fa-fw fa-sign-in-alt\" /> <span className=\"align-middle\">Post </span>\n                                </Link>\n                            </li>\n                            <li className=\"sidebar-item\">\n                                <Link to=\"/promotion\" data-toggle=\"collapse\" className=\"sidebar-link collapsed\">\n                                    <i className=\"align-middle mr-2 fas fa-fw fa-sign-in-alt\" /> <span className=\"align-middle\">Promotion </span>\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <div className=\"main\">\n                    <nav className=\"navbar navbar-expand navbar-theme\">\n                        <a className=\"sidebar-toggle d-flex mr-2\">\n                            <i className=\"hamburger align-self-center\" />\n                        </a>\n                        <form className=\"form-inline d-none d-sm-inline-block\">\n                            <input className=\"form-control form-control-lite\" type=\"text\" placeholder=\"Search projects...\" />\n                        </form>\n                        <div className=\"navbar-collapse collapse\">\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item dropdown ml-lg-2\">\n                                    <a className=\"nav-link dropdown-toggle position-relative\" href=\"#\" id=\"userDropdown\" data-toggle=\"dropdown\">\n                                        <i className=\"align-middle fas fa-cog\" />\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n\n}","import data from './province.json'\n\nfunction compare(a, b) {\n    if (a.value < b.value) {\n        return -1;\n    }\n    if (a.value > b.value) {\n        return 1;\n    }\n    return 0;\n}\n\nvar listCity = [];\nvar optionsCity = [];\nfor (const key in data) {\n    let r = { key: key, value: data[key].name }\n    if (data[key].status != 0) {\n        listCity.push(r);\n        optionsCity.push({ value: key, label: data[key].name })\n    }\n}\nlistCity = listCity.sort(compare)\noptionsCity = optionsCity.sort(compare)\n\n\nvar listDistrict = [];\nfor (const key in data) {\n    let city = data[key];\n    let districts = city[\"districts\"];\n    districts.forEach(district => {\n        let o = { key: district.id, value: { name: district.name, cityId: key } }\n        listDistrict.push(o);\n    });\n}\n\n\nexport class City {\n\n    static getName(id) {\n        for (const key in data) {\n            if (id == key) {\n                return data[key].name;\n            }\n        }\n        return null;\n    }\n\n    static getList() {\n        return listCity\n    }\n\n    static getOptions() {\n        return optionsCity;\n    }\n}\n\nexport class District {\n    static getName(districtId) {\n        for (const district of listDistrict) {\n            if (district.key == districtId) {\n                return district.value.name;\n            }\n        }\n    }\n\n    static getList(cityId) {\n        if (cityId == 0) {\n            return []\n        }\n        let city = data[cityId];\n        let districts = city ? city.districts : [];\n        let rs = []\n        for (const district of districts) {\n            let o = { key: district.id, value: district.name }\n            rs.push(o);\n        }\n        rs = rs.sort(compare);\n        return rs;\n    }\n}","export class CementEnum {\n    constructor(id, name, group) {\n        this.id = id;\n        this.name = name;\n        this.group = group;\n    }\n}\n\nexport function findById(id) {\n    switch (id) {\n        case 1: return POWERS;\n        case 2: return WALL_PRO;\n        case 3: return LAVILLA_EXTRA_CC40;\n        case 4: return EXTRA_DURABLE_HOUSING;\n        case 5: return POWER_FAST;\n        case 6: return QUICK_CAST;\n        case 7: return STABLE_SOIL;\n        case 8: return COMPACT_ROCK;\n        case 9: return EXTRA_DURABLE;\n        case 10: return MASS_POUR;\n        case 11: return EASY_FLOW;\n        case 12: return POWER_CAST;\n        case 13: return PITU_FILL;\n    }\n}\n\nexport function getList() {\n    return [POWERS, WALL_PRO, LAVILLA_EXTRA_CC40, EXTRA_DURABLE_HOUSING, POWER_FAST, QUICK_CAST, STABLE_SOIL, COMPACT_ROCK, EXTRA_DURABLE, MASS_POUR, EASY_FLOW, POWER_CAST, PITU_FILL]\n}\n\n\nexport function getListForRetailer() {\n    return [POWERS, WALL_PRO, LAVILLA_EXTRA_CC40, EXTRA_DURABLE_HOUSING]\n}\n\nexport function getOption() {\n    const list = getList();\n    return list.map(item => {\n        return { value: item.id, label: item.name };\n    });\n}\n\nexport const POWERS = new CementEnum(1, \"INSEE Power-S\", 1);\nexport const WALL_PRO = new CementEnum(2, \"INSEE Wall Pro\", 1);\nexport const LAVILLA_EXTRA_CC40 = new CementEnum(3, \"Lavilla Xtra CC40\", 1);\nexport const EXTRA_DURABLE_HOUSING = new CementEnum(4, \"INSEE Extra Durable\", 1);\nexport const POWER_FAST = new CementEnum(5, \"INSEE Power Fast \", 1);\nexport const QUICK_CAST = new CementEnum(6, \"INSEE Quick Cast \", 2);\nexport const STABLE_SOIL = new CementEnum(7, \"INSEE Stable Soil \", 2);\nexport const COMPACT_ROCK = new CementEnum(8, \"INSEE Compact Rock \", 2);\nexport const EXTRA_DURABLE = new CementEnum(9, \"INSEE Extra Durable \", 2);\nexport const MASS_POUR = new CementEnum(10, \"INSEE Mass Pour\", 2);\nexport const EASY_FLOW = new CementEnum(11, \"INSEE Easy Flow\", 2);\nexport const POWER_CAST = new CementEnum(12, \"INSEE Power Cast\", 2);\nexport const PITU_FILL = new CementEnum(13, \"INSEE Pitu Fill \", 2);","import 'whatwg-fetch';\nlet fetch = window.fetch;\n\nexport default class APIUtils {\n  static getJSONWithCredentials(url, success, error) {\n    fetch(url, {\n      method: 'get',\n      credentials: 'include'\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function(ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static getJSONWithoutCredentials(url, success, error) {\n    fetch(url, {\n      method: 'get'\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function(ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postJSONWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function(ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postJSONWithoutCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function(ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postFormDataWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function(ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postFileWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function(ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n\n  static postFormDataContainFileWithCredentials(url, formData, success, error) {\n    fetch(url, {\n      method: 'post',\n      credentials: 'include',\n      body: formData\n    })\n      .then(resp => {\n        return resp.json();\n      })\n      .then(returnedValue => {\n        success(returnedValue);\n      })\n      .catch(function(ex) {\n        if (error) {\n          error(ex);\n        }\n      });\n  }\n}\n","import APIUtil from '../utils/APIUtils'\n\nexport default class UserModel {\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/get?id=${id}`, resolve, reject);\n        });\n    }\n\n\n    static find(page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/find?page=${page}&pageSize=${pageSize}`, resolve, reject);\n        });\n    }\n\n    static create(form) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/upload-customer`, JSON.stringify(form), resolve, reject);\n        });\n    }\n\n    static updateStatus(id, status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/user/update-status?&uid=${id}&status=${status}`, resolve, reject);\n        });\n    }\n\n}","export const  DISABLED = -1;\nexport const  WAIT_COMPLETE_PROFILE = 5;\nexport const  WAITING_ACTIVE = 7;\nexport const  WAIT_APPROVAL = 8;\nexport const  APPROVED = 10;\n\nexport function findName(value) {\n    switch(value) {\n        case DISABLED : return 'Khởi tạo'\n        case WAIT_COMPLETE_PROFILE : return 'Chưa hoàn thành hồ sơ'\n        case WAITING_ACTIVE : return 'Chờ kích hoạt'\n        case WAIT_APPROVAL: return 'Chờ duyệt'\n        case APPROVED : return 'Đã duyệt'\n    }\n}\n\nexport function findColor(value) {\n    switch(value) {\n        case DISABLED : return '#20c997'\n        case WAIT_COMPLETE_PROFILE : return '#dc3535'\n        case WAITING_ACTIVE : return '#6f42c1'\n        case WAIT_APPROVAL : return '#dc3545'\n        case APPROVED: return '#28a745'\n    }\n}","import Alert from 'react-s-alert';\n\nexport default class AlertUtils {\n\n  static showSuccess(message) {\n    Alert.success(message, {\n      position: 'top-right',\n      effect: 'slide',\n      timeout: 4000,\n      offset: 50\n    });\n  }\n\n  static showWarning(message) {\n    Alert.warning(message, {\n      position: 'top-right',\n      effect: 'slide',\n      timeout: 4000,\n      offset: 50\n    });\n  }\n\n  static showError(message) {\n    Alert.error(message, {\n      position: 'top-right',\n      effect: 'slide',\n      timeout: 4000,\n      offset: 50\n    });\n  }\n}\n","import Layout from \"./component/Layout\";\nimport Modal from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useState } from \"react\";\nimport { RegisterForm, Page, User } from \"./interface\";\nimport { City, District } from './utils/ProvinceUtil'\nimport { getListForRetailer } from \"./utils/CementUtil\";\nimport UserModel from \"./model/UserModel\";\nimport { Link } from \"react-router-dom\";\nimport * as UserStatus from './constant/UserStatus';\nimport AlertUtils from \"./utils/AlertUtils\";\n\nconst  default_avatar = 'http://cdn.onlinewebfonts.com/svg/img_264570.png'\nconst PAGE_SIZE = 10;\nfunction Retailer() {\n  const [page, setPage] = useState(0);\n  const [userPage, setUserPage] = useState<Page<User>>()\n  const [isOpenImportCustomerPopup, setIsOpenImportCustomerPopup] = useState(false)\n\n  const fetchUsers = () => {\n    UserModel.find(0, PAGE_SIZE)\n      .then(resp => {\n        if (resp.error == 0) {\n          setUserPage(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchUsers()\n  }, [])\n\n  return (\n    <Layout>\n      {isOpenImportCustomerPopup &&\n        <ImportCustomerPopup open={isOpenImportCustomerPopup} onCloseModal={() => { \n          setIsOpenImportCustomerPopup(false) \n          fetchUsers()\n        }} />\n      }\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Cửa hàng\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title m-card-title\">Danh sách cửa hàng</h5>\n                  <div className=\"cart-btn-bar\">\n                    <button onClick={() => { setIsOpenImportCustomerPopup(true) }} className=\"btn btn-primary mr-1\">Import Khách hàng</button>\n                  </div>\n                </div>\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>ID</th>\n                      <th></th>\n                      <th>SDT</th>\n                      <th>Cửa hàng</th>\n                      <th>Thành phố / Quận</th>\n                      <th>Trạng thái</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userPage && userPage.list && userPage.list.map((user, key) => {\n                      return (\n                        <tr>\n                          <td>{user.id}</td>\n                          <td><img className=\"m-avatar\" src={user.avatar ? user.avatar : default_avatar} /></td>\n                          <td>{user.phone}</td>\n                          <td>{user.name}</td>\n                          <td>{City.getName(user.cityId)}</td>\n                          <td><span style={{backgroundColor: UserStatus.findColor(user.status)}} className=\"badge badge-info\">{UserStatus.findName(user.status)}</span></td>\n                          <td className=\"table-action\">\n                            <Link  to={`/retailer/${user.id}`}><i style={{fontSize: '30px'}} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Retailer;\n\nconst owlClass = \"popup\";\nfunction ImportCustomerPopup({ open, onCloseModal }: any) {\n  const [form, setForm] = useState<RegisterForm>({} as RegisterForm)\n\n  const onSelectCement = (cementId: number) => {\n    let cements = form.cements ? form.cements : [];\n    if (cements.includes(cementId)) {\n      cements = cements.filter((e) => e != cementId);\n    } else {\n      cements.push(cementId)\n    }\n    setForm({ ...form, cements: cements })\n  }\n\n  const submit = () => {\n    UserModel.create(form)\n      .then(resp => {\n        if (resp.error == 0) {\n          onCloseModal()\n          AlertUtils.showSuccess(\"Import thành công\")\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n      })\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          width: '800px'\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div style={{ margin: '0' }} className=\"row\">\n          <div style={{ padding: '0' }} className=\"col-12\">\n            <div style={{ margin: '0' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title\">Thông tin khách hàng</h5>\n                <h6 className=\"card-subtitle text-muted\">Vui lòng nhập thông tin khách hàng</h6>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"container-fluid\">\n                  <div style={{ margin: '0' }} className=\"row\">\n                    <div className=\"col-12 col-lg-6\">\n                      <div className=\"form-group\">\n                        <label>Sô điện thoại</label>\n                        <input value={form.phone} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, phone: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Tên</label>\n                        <input value={form.name} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, name: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-lg-6\">\n                      <div className=\"form-group\">\n                        <label>Thành phố</label>\n                        <select className=\"form-control\" value={form.cityId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, cityId: Number(e.currentTarget.value) }) }}>\n                          {(!form.cityId || form.cityId == 0) &&\n                            <option value={0}></option>\n                          }\n                          {City.getList().map((value) => {\n                            return (\n                              <option key={value.key} value={value.key}>{value.value}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Quận</label>\n                        <select className=\"form-control\" value={form.districtId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, districtId: Number(e.currentTarget.value) }) }}>\n                          {(!form.districtId || form.districtId == 0) &&\n                            <option value={0}></option>\n                          }\n                          {(form.cityId && form.cityId != 0) && District.getList(form.cityId).map((value) => {\n                            return (\n                              <option key={value.key} value={value.key}>{value.value}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Địa chỉ</label>\n                        <input value={form.address} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, address: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-lg-12\">\n                      {getListForRetailer().map(value => {\n                        return (\n                          <label onClick={() => { onSelectCement(Number(value.id)) }} className=\"form-check\">\n                            <input className=\"form-check-input\" checked={form.cements ? form.cements.includes(Number(value.id)) : false} type=\"checkbox\" />\n                            <span className=\"form-check-label\">\n                              {value.name}\n                            </span>\n                          </label>\n                        )\n                      })}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div style={{ paddingRight: '20px' }} className=\"cart-btn-bar\">\n                <button onClick={() => { onCloseModal() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1 btn-cancel\">Hủy</button>\n                <button onClick={() => { submit() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1\">Submit</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\n\n\nfunction Dashboard() {\n\n  return (\n    <Layout>\n    </Layout>\n\n  );\n}\n\nexport default Dashboard;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\n\n\nfunction StockForm() {\n\n  return (\n    <Layout>\n    </Layout>\n\n  );\n}\n\nexport default StockForm;\n","import Modal from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport \"./styles.scss\";\n\nconst owlClass = \"popup\";\n\n\nexport function AreYouSurePopup({open, onCloseModal, onAgree }) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass} style={{minWidth: '300px'}}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Anh/chị có chắc?</div>\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item left`}\n            onClick={onCloseModal}\n          >\n            Không\n          </div>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onAgree}\n          >\n            Có\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n\n\nexport function ConfirmPhonePopup({ phone, storeName, open, onCloseModal, onAgree }) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Anh/chị có chắc?</div>\n          <p className={`${owlClass}__wrapper__desc`}>\n            Số điện thoại ({phone}) là của cửa hàng {storeName} ?\n          </p>\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item left`}\n            onClick={onCloseModal}\n          >\n            Không\n          </div>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onAgree}\n          >\n            Có\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n\n\nexport function ErrorPopup({ open, onCloseModal }) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Lỗi</div>\n          <p className={`${owlClass}__wrapper__desc`}>\n            Anh/chị vui lòng thử lại sau\n          </p>\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onCloseModal}\n          >\n            OK\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport Modal from \"react-responsive-modal\";\nimport \"../src/popup/styles.scss\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport UserModel from \"./model/UserModel\";\nimport { User } from \"./interface\";\nimport { City, District } from \"./utils/ProvinceUtil\";\nimport { AreYouSurePopup } from \"./popup\";\nimport * as UserStatus from './constant/UserStatus';\n\nconst default_avatar = 'http://cdn.onlinewebfonts.com/svg/img_264570.png'\nfunction DetailRetailer() {\n  let { id } = useParams();\n  const [isShowConfirmPopup, setIsShowConfirmPopup] = useState(false)\n  const [user, setUser] = useState<User>()\n\n  const fetchUser = (id: any) => {\n    UserModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setUser(resp.data)\n        }\n      })\n  }\n\n  const updateStatus = (id: any, status: number) => {\n    UserModel.updateStatus(id, status)\n      .then(resp => {\n        if (resp.error == 0) {\n          fetchUser(id);\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchUser(id)\n  }, [])\n\n  return (\n    <Layout>\n      {<AreYouSurePopup open={isShowConfirmPopup} onAgree={() => {\n        setIsShowConfirmPopup(false)\n        updateStatus(user?.id, UserStatus.APPROVED)\n      }} onCloseModal={() => {\n        setIsShowConfirmPopup(false)\n      }} />}\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12 col-xl-12\">\n              <div className=\"tab-content\">\n                <div className=\"tab-pane fade show active\" id=\"account\" role=\"tabpanel\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h5 className=\"card-title mb-0\">Thông tin cửa hàng</h5>\n                    </div>\n                    <div className=\"card-body\">\n                      {user &&\n                        <form>\n                          <div className=\"row\">\n                            <div className=\"col-md-8\">\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Tên</label>\n                                <input type=\"text\" className=\"form-control\" value={user.name} />\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Số điện thoại</label>\n                                <input type=\"text\" className=\"form-control\" value={user.phone} />\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Thành phố / Tỉnh</label>\n                                <input type=\"text\" className=\"form-control\" value={City.getName(user.cityId)} />\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Quận / Huyện</label>\n                                <input type=\"text\" className=\"form-control\" value={District.getName(user.districtId)} />\n                              </div>\n                              <div className=\"form-group\">\n                                <label htmlFor=\"inputUsername\">Địa chỉ</label>\n                                <input type=\"text\" className=\"form-control\" value={user.address} />\n                              </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                              <div className=\"text-center\">\n                                <img alt=\"Chris Wood\" src={user.avatar ? user.avatar : default_avatar} className=\"rounded-circle img-responsive mt-2\" width={128} height={128} />\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      }\n                    </div>\n                    {user &&\n                      <div className=\"card-footer\">\n                        {user.status == UserStatus.WAIT_APPROVAL &&\n                          <button onClick={() => { setIsShowConfirmPopup(true) }} type=\"submit\" className=\"btn btn-danger m-btn-danger\">Duyệt</button>\n                        }\n                        <button style={{ marginLeft: '30px', padding: '5px 30px' }} type=\"submit\" className=\"btn btn-delete\">Xóa</button>\n                      </div>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DetailRetailer;\n","import { useEffect } from \"react\";\n\nconst INSEEEditor = ({ myRef }) => {\n\n    const initEditor = () => {\n        if (!window.editor) {\n            window.ClassicEditor\n                .create(document.querySelector('.editor'), {\n                    fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    }, fontSize: {\n                        options: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n                        supportAllValues: true\n                    },\n                    fontColor: {\n                        columns: 6,\n                        documentColors: 12,\n                    },\n                    toolbar: {\n                        items: [\n                            'heading',\n                            '|',\n                            'bold',\n                            'italic',\n                            'link',\n                            'bulletedList',\n                            'numberedList',\n                            '|',\n                            'indent',\n                            'outdent',\n                            '|',\n                            'imageUpload',\n                            'blockQuote',\n                            'insertTable',\n                            'mediaEmbed',\n                            'undo',\n                            'redo',\n                            'alignment',\n                            'fontFamily',\n                            'fontSize',\n                            'fontColor'\n                        ]\n                    },\n                    language: 'en',\n                    image: {\n                        toolbar: [\n                            'imageTextAlternative',\n                            'imageStyle:full',\n                            'imageStyle:side'\n                        ]\n                    },\n                    table: {\n                        contentToolbar: [\n                            'tableColumn',\n                            'tableRow',\n                            'mergeTableCells'\n                        ]\n                    },\n                    licenseKey: '',\n\n                })\n                .then(editor => {\n                    window.editor = editor;\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        }\n    }\n\n    const getValue = () => {\n        return window.editor.getData();\n    }\n\n    const setValue = (value) => {\n        window.editor.setData(value)\n    }\n\n    useEffect(() => {\n        initEditor()\n    }, [])\n\n    myRef.current = {}\n    myRef.current.getValue = getValue;\n    myRef.current.setValue = setValue;\n    return (\n        <div className=\"editor\"></div>\n    )\n}\n\nINSEEEditor.defaultProps = {\n    myRef: { current: {} }\n}\n\nexport default INSEEEditor\n","import 'whatwg-fetch';\nlet fetch = window.fetch;\n\nexport default class UploadFileUtil {\n    \n\n    static async uploadImg(photo) {\n        let formData = new FormData();\n        formData.append(\"file\", photo);\n\n        const ctrl = new AbortController() \n        setTimeout(() => ctrl.abort(), 5000);\n\n        try {\n            return await fetch('http://admin.nhathau.insee.com.vn/upload/image', { method: \"POST\", body: formData })\n                .then(resp => resp.json());\n        } catch (e) {\n            console.log('Huston we have problem...:', e);\n        }\n    }\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class PostModel {\n\n    static create(post) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/create`, JSON.stringify(post), resolve, reject);\n        });\n    }\n\n    static list() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/list`, resolve, reject);\n        });\n    }\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/post/get?id=${id}`, resolve, reject);\n        });\n    }\n}","import APIUtil from '../utils/APIUtils'\n\nexport default class PromotionModel {\n\n    static create(post) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/create`, JSON.stringify(post), resolve, reject);\n        });\n    }\n\n    static list() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/list`, resolve, reject);\n        });\n    }\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/get?id=${id}`, resolve, reject);\n        });\n    }\n\n\n    static listPromotionForPost() {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/list-promotion-for-map-post`, resolve, reject);\n        });\n    }\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport Select from 'react-select'\nimport INSEEEditor from \"./component/INSEEEditor\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Post } from \"./interface\";\nimport { City } from '../src/utils/ProvinceUtil'\nimport UploadFileUtil from \"./utils/UploadFileUtil\";\nimport PostModel from \"./model/PostModel\";\nimport PromotionModel from \"./model/PromotionModel\";\n\nconst locationOptions = City.getOptions()\nfunction CreatePost() {\n  const inputImgRef = useRef<HTMLInputElement | null>(null);\n  const editorRef = useRef<any>(null);\n  const [previewImg, setPreviewImg] = useState(null as any);\n  const [file, setFile] = useState(null as any);\n  const [postForm, setPostForm] = useState<Post>({} as Post)\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const [lstPromotion, setLstPromotion] = useState([] as any)\n\n\n  const fetchPromotion = () => {\n    PromotionModel.listPromotionForPost()\n      .then(resp => {\n        setLstPromotion(resp.data)\n      })\n  }\n\n  const submit = async () => {\n    let content = editorRef.current.getValue()\n    if (!file || !postForm.title || !postForm.summary || !content) {\n      setErrorMsg('Vui lòng nhập đủ thông tin')\n      return;\n    }\n    let resp = await UploadFileUtil.uploadImg(file)\n    if (resp.error != 200) {\n      setErrorMsg('Upload file thất bại')\n      return;\n    }\n    PostModel.create({ ...postForm, cover: resp.data, content: content })\n      .then(resp => {\n        console.log(resp)\n        window.location.href = \"/post\"\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotion()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Post Form\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\"></label>\n                      <div className=\"col-sm-10\">\n                        <div className=\"create-post-select-img-container\">\n                          <input ref={inputImgRef} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setPreviewImg(URL.createObjectURL(event.target.files![0]))\n                            setFile(event.target.files![0])\n                          }} type=\"file\" style={{ display: 'none' }} />\n                          {previewImg && <img style={{ maxHeight: '200px' }} src={previewImg} />}\n                          <i onClick={() => {\n                            inputImgRef.current?.click()\n                          }} className=\"align-middle mr-2 far fa-fw fa-image\"></i>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Title</label>\n                      <div className=\"col-sm-10\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => { setPostForm({ ...postForm, title: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Promotion</label>\n                      <div className=\"col-sm-10\">\n                        <select onChange={(e: React.FormEvent<HTMLSelectElement>) => { setPostForm({ ...postForm, promotionId: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          {lstPromotion && lstPromotion.map((a: any) => {\n                            return (\n                              <option value={a.id}>{a.title}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Locations</label>\n                      <div className=\"col-sm-10\">\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setPostForm({ ...postForm, locations: list })\n                          }}\n                          options={locationOptions}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time Start</label>\n                      <div className=\"form-group col-md-4\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setPostForm({ ...postForm, timeStart: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time End</label>\n                      <div className=\"form-group col-md-4\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setPostForm({ ...postForm, timeEnd: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Summary</label>\n                      <div className=\"col-sm-10\">\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => { setPostForm({ ...postForm, summary: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Content</label>\n                      <div className=\"col-sm-10\">\n                        <INSEEEditor myRef={editorRef} />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <div className=\"col-sm-10 ml-sm-auto\">\n                        {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                        <div onClick={() => { submit() }} className=\"btn btn-primary\">Submit</div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default CreatePost;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport PostModel from \"./model/PostModel\";\nimport { useEffect, useState } from \"react\";\nimport { Page, Post } from \"./interface\";\nimport { Link } from \"react-router-dom\";\nimport { City } from \"./utils/ProvinceUtil\";\n\nfunction Posts() {\n  const [postPage, setPostPage] = useState<Page<Post>>()\n\n  const fetchPostPage = () => {\n    PostModel.list()\n      .then(resp => {\n        if (resp.error == 0) {\n          setPostPage(resp.data);\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPostPage()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Posts\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title m-card-title\">Danh sách các bài viết</h5>\n                  <div className=\"cart-btn-bar\">\n                    <Link to={\"/post/create\"} className=\"btn btn-primary mr-1\">Thêm bài viết mới</Link>\n                  </div>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th></th>\n                      <th>Title</th>\n                      <th>Locations</th>\n                      <th>Duration</th>\n                      <th>Promotion</th>\n                      <th>Status</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {postPage && postPage.list && postPage.list.map(post => {\n                      return (\n                        <tr>\n                          <td>\n                            <img src={post.cover} className=\"mr-2 post-cover-posts\" />\n                          </td>\n                          <td>{post.title}</td>\n                          <td>{post.locations ? post.locations.map((l: number) => City.getName(l)).join(\", \") : 'Tất cả'}</td>\n                          <td>{post.timeStart && new Date(post.timeStart).toLocaleDateString('vi')} - {post.timeEnd && new Date(post.timeEnd).toLocaleDateString('vi')}</td>\n                          <td>{post.promotionId && <Link to={`/promotion/detail/${post.promotionId}`}> <span style={{ cursor: 'pointer' }} className=\"badge badge-info\">#khuyến_mãi_{post.promotionId}</span></Link>}</td>\n                          <td><span className=\"badge badge-info\">Khởi tạo</span></td>\n                          <td className=\"table-action\">\n                            <Link to={`/post/detail/${post.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Posts;\n","const month_to_vi = {\n    1: 'tháng 1',\n    2: 'tháng 2',\n    3: 'tháng 3',\n    4: 'tháng 4',\n    5: 'tháng 5',\n    6: 'tháng 6',\n    7: 'tháng 7',\n    8: 'tháng 8',\n    9: 'tháng 9',\n    10: 'tháng 10',\n    11: 'tháng 11',\n    12: 'tháng 12'\n}\nexport default class DateTimeUtil {\n    static toString(timestamp) {\n        let date = new Date(timestamp);\n        let day = date.getDate();\n        let month = date.getMonth() + 1;\n        let year = date.getFullYear();\n        return day + ' ' + month_to_vi[month] + ', ' + year;\n    }\n\n    static toStringForSysten(timestamp) {\n        let date = new Date(timestamp);\n        return date.getFullYear() + \"-\" + date.getMonth() + 1 + \"-\" + date.getDate();\n    }\n\n}\n\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport INSEEEditor from \"./component/INSEEEditor\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Post } from \"./interface\";\nimport UploadFileUtil from \"./utils/UploadFileUtil\";\nimport PostModel from \"./model/PostModel\";\nimport Select from 'react-select'\nimport { useParams } from \"react-router-dom\";\nimport { City } from '../src/utils/ProvinceUtil'\nimport DateTimeUtil from \"./utils/DateTimeUtil\";\nimport PromotionModel from \"./model/PromotionModel\";\n\nconst locationOptions = City.getOptions()\nfunction UpdatePost() {\n  let { id } = useParams();\n  const inputImgRef = useRef<HTMLInputElement | null>(null);\n  const editorRef = useRef<any>(null);\n  const [previewImg, setPreviewImg] = useState(null as any);\n  const [file, setFile] = useState(null as any);\n  const [post, setPost] = useState<Post>({} as Post)\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const [lstPromotion, setLstPromotion] = useState([] as any)\n\n  const fetchPromotion = () => {\n    PromotionModel.listPromotionForPost()\n      .then(resp => {\n        setLstPromotion(resp.data)\n      })\n  }\n\n\n  const fetchPost = () => {\n    PostModel.get(id)\n      .then(resp => {\n        let post: Post = resp.data;\n        setPost(post)\n        setPreviewImg(post.cover)\n        editorRef.current.setValue(post.content)\n      })\n  }\n\n  const submit = async () => {\n    let content = editorRef.current.getValue()\n    if (!content) {\n      setErrorMsg('Vui lòng nhập content')\n      return;\n    }\n    if (!post.title) {\n      setErrorMsg('Vui lòng nhập content')\n      return;\n    }\n\n    if (!post.summary) {\n      setErrorMsg('Vui lòng nhập summary')\n      return;\n    }\n\n    let urlCover;\n    if (file) {\n      let resp = await UploadFileUtil.uploadImg(file)\n      if (resp.error != 200) {\n        setErrorMsg('Upload file thất bại')\n        return;\n      }\n      urlCover = resp.data;\n    }\n\n    if (!post.cover && !urlCover) {\n      setErrorMsg('Vui lòng chọn cover')\n      return;\n    }\n\n    let postForm = { ...post, content: content }\n    if (urlCover) {\n      postForm.cover = urlCover;\n    }\n\n    PostModel.create(postForm)\n      .then(resp => {\n        console.log(resp)\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotion()\n    fetchPost()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Post Detail\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\"></label>\n                      <div className=\"col-sm-10\">\n                        <div className=\"create-post-select-img-container\">\n                          <input ref={inputImgRef} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setPreviewImg(URL.createObjectURL(event.target.files![0]))\n                            setFile(event.target.files![0])\n                          }} type=\"file\" style={{ display: 'none' }} />\n                          {previewImg && <img style={{ maxHeight: '200px' }} src={previewImg} />}\n                          <i onClick={() => {\n                            inputImgRef.current?.click()\n                          }} className=\"align-middle mr-2 far fa-fw fa-image\"></i>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Title</label>\n                      <div className=\"col-sm-10\">\n                        <input value={post.title} onChange={(e: React.FormEvent<HTMLInputElement>) => { setPost({ ...post, title: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Promotion</label>\n                      <div className=\"col-sm-10\">\n                        <select value={post.promotionId} onChange={(e: React.FormEvent<HTMLSelectElement>) => { setPost({ ...post, promotionId: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          {lstPromotion && lstPromotion.map((a: any) => {\n                            return (\n                              <option value={a.id}>{a.title}</option>\n                            )\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Locations</label>\n                      <div className=\"col-sm-10\">\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          value={post.locations && post.locations.map((id: number) => {\n                            return {\n                              value: id,\n                              label: City.getName(id)\n                            }\n                          })}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setPost({ ...post, locations: list })\n                          }}\n                          options={locationOptions}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time Start</label>\n                      <div className=\"form-group col-md-4\">\n                        <input defaultValue={post.timeStart && DateTimeUtil.toStringForSysten(post.timeStart)} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setPost({ ...post, timeStart: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Time End</label>\n                      <div className=\"form-group col-md-4\">\n                        <input defaultValue={post.timeEnd && DateTimeUtil.toStringForSysten(post.timeEnd)} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setPost({ ...post, timeEnd: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Summary</label>\n                      <div className=\"col-sm-10\">\n                        <input value={post.summary} onChange={(e: React.FormEvent<HTMLInputElement>) => { setPost({ ...post, summary: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <label className=\"col-form-label col-sm-2 text-sm-right\">Content</label>\n                      <div className=\"col-sm-10\">\n                        <INSEEEditor myRef={editorRef} />\n                      </div>\n                    </div>\n                    <div className=\"form-group row\">\n                      <div className=\"col-sm-10 ml-sm-auto\">\n                        {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                        <div onClick={() => { submit() }} className=\"btn btn-primary\">Update</div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default UpdatePost;\n","export class CementEnum {\n    constructor(id, name, group) {\n        this.id = id;\n        this.name = name;\n        this.group = group;\n    }\n}\n\nexport function findById(id) {\n    switch (id) {\n        case 1: return POWERS;\n        case 2: return WALL_PRO;\n        case 3: return LAVILLA_EXTRA_CC40;\n        case 4: return EXTRA_DURABLE_HOUSING;\n        case 5: return POWER_FAST;\n        case 6: return QUICK_CAST;\n        case 7: return STABLE_SOIL;\n        case 8: return COMPACT_ROCK;\n        case 9: return EXTRA_DURABLE;\n        case 10: return MASS_POUR;\n        case 11: return EASY_FLOW;\n        case 12: return POWER_CAST;\n        case 13: return PITU_FILL;\n        case 14: return TILE_GROUT_ULTRA;\n        case 15: return TILEFIX_PLUS_25KG;\n        case 16: return TILEFIX_PLUS_5KG;\n        case 17: return FLEX_SHIELD_5KG;\n        case 18: return FLEX_SHIELD_18KG;\n        case 19: return TILEGROUT_NANO;\n        case 20: return TILEFIX_PRO;\n    }\n}\n\nexport function getList() {\n    return [POWERS, WALL_PRO, LAVILLA_EXTRA_CC40, EXTRA_DURABLE_HOUSING, \n        POWER_FAST, QUICK_CAST, STABLE_SOIL, COMPACT_ROCK, EXTRA_DURABLE, \n        MASS_POUR, EASY_FLOW, POWER_CAST, PITU_FILL,TILE_GROUT_ULTRA,\n        TILEFIX_PLUS_25KG, TILEFIX_PLUS_5KG, FLEX_SHIELD_5KG, FLEX_SHIELD_18KG, TILEGROUT_NANO, TILEFIX_PRO]\n}\n\nexport function getListForRetailer() {\n    return [POWERS, WALL_PRO, LAVILLA_EXTRA_CC40, EXTRA_DURABLE_HOUSING]\n}\n\nexport function getOption() {\n    const list = getList();\n    return list.map(item => {\n        return { value: item.id, label: item.name };\n    });\n}\n\nexport const POWERS = new CementEnum(1, \"INSEE Power-S\", 1);\nexport const WALL_PRO = new CementEnum(2, \"INSEE Wall Pro\", 1);\nexport const LAVILLA_EXTRA_CC40 = new CementEnum(3, \"Lavilla Xtra CC40\", 1);\nexport const EXTRA_DURABLE_HOUSING = new CementEnum(4, \"INSEE Extra Durable\", 1);\nexport const POWER_FAST = new CementEnum(5, \"INSEE Power Fast \", 1);\nexport const QUICK_CAST = new CementEnum(6, \"INSEE Quick Cast \", 2);\nexport const STABLE_SOIL = new CementEnum(7, \"INSEE Stable Soil \", 2);\nexport const COMPACT_ROCK = new CementEnum(8, \"INSEE Compact Rock \", 2);\nexport const EXTRA_DURABLE = new CementEnum(9, \"INSEE Extra Durable \", 2);\nexport const MASS_POUR = new CementEnum(10, \"INSEE Mass Pour\", 2);\nexport const EASY_FLOW = new CementEnum(11, \"INSEE Easy Flow\", 2);\nexport const POWER_CAST = new CementEnum(12, \"INSEE Power Cast\", 2);\nexport const PITU_FILL = new CementEnum(13, \"INSEE Pitu Fill \", 2);\nexport const TILE_GROUT_ULTRA = new CementEnum(14, \"INSEE TileGrout Ultra+\",2);\nexport const TILEFIX_PLUS_25KG = new CementEnum(15, \"INSEE TileFix Plus 25kg\", 2);\nexport const TILEFIX_PLUS_5KG = new CementEnum(16, \"INSEE TileFix Plus 5kg\", 2)\nexport const FLEX_SHIELD_5KG = new CementEnum(17, \"INSEE Flex Shield 5kg\", 2)\nexport const FLEX_SHIELD_18KG = new CementEnum(18, \"INSEE Flex Shield 18kg\", 2)\nexport const TILEGROUT_NANO = new CementEnum(19, \"INSEE TileGrout NANO\", 2)\nexport const TILEFIX_PRO = new CementEnum(20, \"INSEE TileFix PRO\", 2)\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport Select from 'react-select'\nimport * as CementEnum from '../src/component/enum/CementEnum'\nimport { City } from '../src/utils/ProvinceUtil'\nimport { useState } from \"react\";\nimport { Promotion } from \"./interface\";\nimport PromotionModel from \"./model/PromotionModel\";\n\nconst cementOptions = CementEnum.getOption()\nconst locationOptions = City.getOptions()\nfunction CreatePromotion() {\n\n  const [form, setForm] = useState<Promotion>({} as Promotion)\n  const [errorMsg, setErrorMsg] = useState<string>()\n\n  const submit = () => {\n    if (!form.title || !form.type\n      || !form.locations || form.locations.length <= 0\n      || !form.cements || form.cements.length <= 0\n      || !form.timeStart || !form.timeEnd) {\n      setErrorMsg('Vui lòng điền đủ thông tin')\n      return;\n    }\n    PromotionModel.create(form)\n    .then(resp => {\n      console.log(resp)\n      if (resp.error == 0) {\n        // window.location.href = \"/promotion\"\n      }\n    })\n  }\n\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Promotion Form\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title\">Thông tin chương trình khuyến mãi</h5>\n                </div>\n                <div className=\"card-body\">\n                  <form>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-8\">\n                        <label htmlFor=\"inputEmail4\">Title</label>\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, title: e.currentTarget.value }) }} className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Type</label>\n                        <select onChange={(e: React.FormEvent<HTMLSelectElement>) => { setForm({ ...form, type: Number(e.currentTarget.value) }) }} id=\"inputState\" className=\"form-control\">\n                          <option selected>Choose...</option>\n                          <option value={20}>Stock Promotion</option>\n                          <option value={21}>Lighting Quiz Promotion</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Time Start</label>\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setForm({ ...form, timeStart: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Time End</label>\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setForm({ ...form, timeEnd: Number(e.currentTarget.valueAsDate?.getTime()) })\n                        }} type=\"date\" className=\"form-control\" />\n                      </div>\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Cement</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, cements: list })\n                          }}\n                          options={cementOptions}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">Location</label>\n                        <Select\n                          isClearable={true}\n                          isMulti={true}\n                          onChange={(e) => {\n                            let list = e.map((x: any) => Number(x.value));\n                            setForm({ ...form, locations: list })\n                          }}\n                          options={locationOptions}\n                        />\n                      </div>\n                    </div>\n                    {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n                    <div onClick={submit} className=\"btn btn-primary\">Submit</div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default CreatePromotion;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport { useEffect, useState } from \"react\";\nimport { Page, Promotion } from \"./interface\";\nimport { Link } from \"react-router-dom\";\nimport { City } from \"./utils/ProvinceUtil\";\nimport * as CementUtil from \"./utils/CementUtil\";\n\n\nfunction Promotions() {\n  const [promotionPage, setPromotionPage] = useState<Page<Promotion>>()\n\n  const fetchPromotionPage = () => {\n    PromotionModel.list()\n      .then(resp => {\n        if (resp.error == 0) {\n          setPromotionPage(resp.data);\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotionPage()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"header\">\n            <h1 className=\"header-title\">\n              Promotions\n            </h1>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title m-card-title\">Danh sách các chiến dịch khuyến mãi</h5>\n                  <div className=\"cart-btn-bar\">\n                    <Link to={\"/promotion/create\"} className=\"btn btn-primary mr-1\">Thêm chiến dịch mới</Link>\n                  </div>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Id</th>\n                      <th>Title</th>\n                      <th>Type</th>\n                      <th>Locations</th>\n                      <th>Cements</th>\n                      <th>Status</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {promotionPage && promotionPage.list && promotionPage.list.map(promotion => {\n                      return (\n                        <tr>\n                          <td>{promotion.id}</td>\n                          <td>{promotion.title}</td>\n                          <td>{promotion.type == 20 ? 'Stock Promotion' : 'Lighting Quiz Game Promotion'}</td>\n                          <td>\n                            {promotion.locations.map((l: number) => City.getName(l)).join(\", \")}\n                          </td>\n                          <td>\n                            {promotion.cements.map((l : number) => CementUtil.findById(l)?.name).join(\", \")}\n                          </td>\n                          <td><span className=\"badge badge-info\">Khởi tạo</span></td>\n                          <td className=\"table-action\">\n                            <Link to={`/promotion/detail/${promotion.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                          </td>\n                        </tr>\n                      )\n                    })}\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default Promotions;\n","import APIUtil from '../utils/APIUtils'\n\nexport default class FormModel {\n\n\n    static findByPromotionId(promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/find-by-promotion?promotionId=${promotionId}`, resolve, reject);\n        });\n    }\n\n    static statsByPromotion(promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/stats-by-promotion?promotionId=${promotionId}`, resolve, reject);\n        });\n    }\n\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static findLQForm(promotionId, topicId, page, pageSize) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/lq-form/find?promotionId=${promotionId}&topicId=${topicId}&page=${page}&pageSize=${pageSize}`, resolve, reject);\n        });\n    }\n\n    static endTopic(promotionId, topicId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/end-topic?id=${promotionId}&topicId=${topicId}`, resolve, reject);\n        });\n    }\n    \n    static updateStatus(formId, status) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/form/update-status?id=${formId}&status=${status}`, resolve, reject);\n        });\n    }\n\n\n}","export const INIT = 1;\nexport const APPROVED = 2;\nexport const REJECTED = 3;\n\nexport function findName(value) {\n    switch (value) {\n        case INIT: return 'Chờ duyệt'\n        case APPROVED: return 'Đã duyệt'\n        case REJECTED: return 'Từ chối'\n    }\n}\n\nexport function findColor(value) {\n    switch (value) {\n        case INIT: return '#20c997'\n        case APPROVED: return '#28a745'\n        case REJECTED: return '#999'\n    }\n}","import \"../popup/styles.scss\"\nimport { Link, useParams } from \"react-router-dom\";\nimport FormModel from \"../model/FormModel\";\nimport { useEffect, useState } from \"react\";\nimport { Form, Page, StatsForm } from \"../interface\";\nimport * as StockFormStatus from '../constant/StockFormStatus';\n\nfunction DetailStockPromotion() {\n    let { id } = useParams();\n    const [formPage, setFormPage] = useState<Page<Form>>()\n\n    const fetchListForm = () => {\n        FormModel.findByPromotionId(id)\n            .then(resp => {\n                if (resp.error == 0) {\n                    setFormPage(resp.data)\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchListForm()\n    }, [])\n\n    return (\n        <div className=\"col-12 col-xl-12\">\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title\">Danh sách đơn</h5>\n                </div>\n                <table className=\"table table-striped table-hover\">\n                    <thead>\n                        <tr>\n                            <th>Cửa hàng</th>\n                            <th>Thời gian</th>\n                            <th>Trạng thái</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {formPage && formPage.list && formPage.list.map((item: Form) => {\n                            return (\n                                <tr>\n                                    <td>\n                                        <img src={item.user.avatar} width={48} height={48} className=\"rounded-circle mr-2\" alt=\"Avatar\" />\n                                        {item.user.name}\n                                    </td>\n                                    <td>June 21, 1961</td>\n                                    <td><span style={{ backgroundColor: StockFormStatus.findColor(item.status) }} className=\"badge\">{StockFormStatus.findName(item.status)}</span></td>\n                                    <td className=\"table-action\">\n                                        <Link to={`/form/detail/${item.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default DetailStockPromotion;\n","import APIUtil from '../utils/APIUtils'\n\nexport default class LQPromotionModel {\n\n    static create(topic, promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/create-topic?promotionId=${promotionId}`, JSON.stringify(topic), resolve, reject);\n        });\n    }\n\n    static createOrUpdateQuestion(question, topicId, promotionId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.postJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/create-or-update-question?promotionId=${promotionId}&topicId=${topicId}`, JSON.stringify(question), resolve, reject);\n        });\n    }\n\n    static get(id) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/get?id=${id}`, resolve, reject);\n        });\n    }\n\n    static getTopic(id, topicId) {\n        return new Promise((resolve, reject) => {\n            APIUtil.getJSONWithCredentials(process.env.REACT_APP_DOMAIN + `/api/promotion/lighting-quiz/get-topic?id=${id}&topicId=${topicId}`, resolve, reject);\n        });\n    }\n}","export const INIT = 1;\nexport const LOCKED = 2;\nexport const APPROVED = 3;\n\n\nexport function findName(value) {\n    switch(value) {\n        case INIT : return 'Khởi tạo'\n        case LOCKED : return 'Đang diễn ra'\n        case APPROVED : return 'Hoàn thành'\n    }\n}\n\nexport function findColor(value) {\n    switch(value) {\n        case INIT : return '#20c997'\n        case LOCKED : return '#dc3535'\n        case APPROVED : return '#999'\n    }\n}","import \"react-responsive-modal/styles.css\";\nimport Modal from \"react-responsive-modal\";\nimport '../../src/popup/styles.scss'\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { Topic } from \"../interface\";\nimport { Question, Answer } from '../interface/index'\nimport LQPromotionModel from '../model/LQPromotionModel'\nimport { Link, useParams } from \"react-router-dom\";\nimport * as TopicStatus from '../constant/TopicStatus'\n\nfunction DetailLQuizTopic({ data }: any) {\n  let { id, topicId } = useParams()\n  const [topic, setTopic] = useState<Topic>()\n  const [question, setQuestion] = useState<Question>()\n  const [isShowImgModel, setIsShowImgModel] = useState(false)\n\n  const fetchTopic = () => {\n    LQPromotionModel.getTopic(id, topicId)\n      .then(resp => {\n        if (resp.error == 0) {\n          setTopic(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchTopic()\n  }, [])\n\n  return (\n    <div className=\"col-12 col-xl-12\">\n      {isShowImgModel && <LQuizTopicModal open={isShowImgModel} data={question}\n        onCloseModal={() => {\n          setIsShowImgModel(false)\n          fetchTopic()\n        }} />}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h5 className=\"card-title m-card-title\">Dach sách hỏi của chủ đề</h5>\n          {topic && topic.status == TopicStatus.INIT &&\n            <div className=\"cart-btn-bar\">\n              <button onClick={() => { setIsShowImgModel(true); setQuestion({} as Question) }} className=\"btn btn-primary mr-1\">Thêm câu hỏi</button>\n            </div>\n          }\n          {topic && topic.status != TopicStatus.INIT &&\n            <div className=\"cart-btn-bar\">\n              <Link to={\"/form/list/\" + id + \"/\" + topicId} className=\"btn btn-primary mr-1\">Danh sách tham gia</Link>\n            </div>\n          }\n        </div>\n        <table className=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Options</th>\n              <th>Answer</th>\n              <th>Actions:</th>\n            </tr>\n          </thead>\n          <tbody>\n            {topic && topic.questions && topic.questions.map((question: Question) => {\n              let rights = question.options.filter((o: Answer) => o.right);\n              return (\n                <tr>\n                  <td>{question.content}</td>\n                  <td>{question.options.map((o: Answer) => o.content).join(\", \")}</td>\n                  <td>{rights && rights.length > 0 && rights[0].content}</td>\n                  <td className=\"table-action\">\n                    <i onClick={() => {\n                      setQuestion(question)\n                      setIsShowImgModel(true)\n                    }} style={{ fontSize: '30px', cursor: 'pointer' }} className=\"align-middle ion ion-ios-play mr-2\" />\n                  </td>\n                </tr>\n              )\n            })}\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailLQuizTopic;\n\nconst owlClass = \"popup\";\nexport function LQuizTopicModal({ open, onCloseModal, data }: any) {\n  let { id, topicId } = useParams()\n  const [question, setQuestion] = useState<Question>(data)\n  const [errorMsg, setErrorMsg] = useState<string>()\n\n\n  const submit = () => {\n    if (isValid()) {\n      LQPromotionModel.createOrUpdateQuestion(question, topicId, id)\n        .then(resp => {\n          onCloseModal()\n        })\n    }\n  }\n\n  const isValid = () => {\n    if (!question.content || question.content.length <= 0) {\n      setErrorMsg('Vui lòng nhập nội dung câu hỏi')\n      return false;\n    }\n    if (!question.options || question.options.length <= 0) {\n      setErrorMsg('Vui lòng thêm câu trả lời')\n      return false;\n    }\n\n    let wrongOptions = question.options.filter((o: Answer) => {\n      if (!o.content || o.content.length <= 0) {\n        return true;\n      }\n      return false;\n    })\n\n    if (wrongOptions.length > 0) {\n      setErrorMsg('Vui lòng nhập nội dung câu trả lời')\n      return false;\n    }\n\n    wrongOptions = question.options.filter((o: Answer) => {\n      if (o.right) {\n        return true;\n      }\n    })\n\n    if (wrongOptions.length <= 0) {\n      setErrorMsg('Vui lòng chọn đáp án đúng')\n      return false;\n    }\n    return true;\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        {console.log(question)}\n        <div className={`${owlClass}__wrapper`}>\n          <div className={`${owlClass}__wrapper__title`}>Cẩu hỏi: </div>\n          <p className={`${owlClass}__wrapper__desc`}>\n            <div style={{ minWidth: '700px', textAlign: 'left', marginBottom: '2px' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title mb-0\">Nội dung: </h5>\n              </div>\n              <div className=\"card-body\">\n                <textarea onChange={(e: React.FormEvent<HTMLTextAreaElement>) => {\n                  setQuestion({ ...question, content: e.currentTarget.value })\n                }} className=\"form-control\" value={question.content} rows={2} />\n              </div>\n            </div>\n            <div style={{ minWidth: '700px', textAlign: 'left' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title mb-0\">Đáp án</h5>\n              </div>\n              {question.options && question.options.map((option: Answer) => {\n                return (\n                  <div className=\"card-body\" style={{ paddingBottom: '10px' }}>\n                    <div style={{ marginBottom: '10px' }} className=\"row\">\n                      <div style={{ textAlign: 'right', paddingTop: '5px' }} className=\"col-md-1\">\n                        <input type=\"radio\" checked={option.right} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          let tmpQuestion = { ...question }\n                          tmpQuestion.options.forEach((a: Answer) => {\n                            if (a.id == option.id) {\n                              a.right = true;\n                            } else {\n                              a.right = false;\n                            }\n                          })\n                          setQuestion(tmpQuestion)\n                        }} />\n                      </div>\n                      <div className=\"col-md-7\">\n                        <input type=\"text\" onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          let tmpQuestion = { ...question }\n                          tmpQuestion.options.forEach((a: Answer) => {\n                            if (a.id == option.id) {\n                              a.content = e.currentTarget.value;\n                            }\n                          })\n                          setQuestion(tmpQuestion)\n                        }} value={option.content} className=\"form-control\" />\n                      </div>\n                      <div style={{ paddingTop: '5px', cursor: 'pointer' }} onClick={() => {\n                        let tmpQuestion = { ...question }\n                        tmpQuestion.options = tmpQuestion.options.filter((e: Answer) => e.id != option.id)\n                        setQuestion(tmpQuestion)\n                      }}>\n                        <i className=\"align-middle mr-2 fas fa-fw fa-window-close\"></i>\n                      </div>\n                    </div>\n                  </div>\n                )\n              })}\n              <div onClick={() => {\n                let options = question.options;\n                if (!options) {\n                  options = []\n                }\n                if (options.length >= 4) {\n                  return;\n                }\n                let id: string = new Date().getTime() + ''\n                options.push({\n                  id: id,\n                  content: '',\n                  right: false\n                })\n                setQuestion({ ...question, options: options })\n              }} className=\"add-more-lquiz\" style={{ textAlign: 'center' }}>Thêm</div>\n            </div>\n          </p>\n        </div>\n        {errorMsg && <p style={{ color: 'red', textAlign: 'center' }}>{errorMsg}</p>}\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={submit}\n          >\n            Lưu\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n\n","import \"react-responsive-modal/styles.css\";\nimport Modal from \"react-responsive-modal\";\nimport '../../src/popup/styles.scss'\nimport { useEffect, useReducer, useState } from \"react\";\nimport { LQPromotion, StockForm, Topic } from \"../interface\";\nimport {\n  useParams,\n  Link\n} from \"react-router-dom\";\nimport DetailLQuizTopic, { LQuizTopicModal } from \"./DetailLQuizTopic\";\nimport LQPromotionModel from '../../src/model/LQPromotionModel';\nimport * as TopicStatus from '../constant/TopicStatus';\n\nfunction DetailLQuizPromotion() {\n  let { id, topicId } = useParams()\n  if (topicId) {\n    return <DetailLQuizTopic />\n  }\n  return <ListTopicLQuiz />\n}\n\nexport default DetailLQuizPromotion;\n\n\nfunction ListTopicLQuiz() {\n  let { id } = useParams()\n  const [isShowTopicModal, setIsShowTopicModal] = useState(false)\n  const [promtoion, setPromotion] = useState<LQPromotion>()\n\n  const fetchLQPromotion = () => {\n    LQPromotionModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setPromotion(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchLQPromotion()\n  }, [])\n\n  return (\n    <div className=\"col-12 col-xl-12\">\n      <TopicPopup open={isShowTopicModal} onCloseModal={() => {\n        fetchLQPromotion()\n        setIsShowTopicModal(false)\n      }} />\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h5 className=\"card-title m-card-title\">Dach sách chủ đề</h5>\n          <div className=\"cart-btn-bar\">\n            <button onClick={() => { setIsShowTopicModal(true) }} className=\"btn btn-primary mr-1\">Thêm chủ đề mới</button>\n          </div>\n        </div>\n        <table className=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Time Start</th>\n              <th>Time End</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {promtoion && promtoion.topics && promtoion.topics.map((topic: Topic) => {\n              console.log(topic)\n              return (\n                <tr>\n                  <td>{topic.title}</td>\n                  <td>{new Date(topic.timeStart).toLocaleString('vi')}</td>\n                  <td>{new Date(topic.timeEnd).toLocaleString('vi')}</td>\n                  <td><span style={{backgroundColor: TopicStatus.findColor(topic.status)}} className=\"badge\">{TopicStatus.findName(topic.status)}</span></td>\n                  <td className=\"table-action\">\n                    <Link to={`/promotion/detail/${id}/${topic.id}`}><i style={{ fontSize: '30px' }} className=\"align-middle ion ion-ios-play mr-2\" /></Link>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nconst owlClass = \"popup\";\nfunction TopicPopup({ open, onCloseModal }: any) {\n  let { id } = useParams()\n  const [form, setForm] = useState<Topic>({} as Topic)\n\n  const submit = () => {\n    LQPromotionModel.create(form, id)\n      .then(resp => {\n        if (resp.error == 0) {\n          onCloseModal()\n        }\n      })\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          width: '800px'\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div style={{ margin: '0' }} className=\"row\">\n          <div style={{ padding: '0' }} className=\"col-12\">\n            <div style={{ margin: '0' }} className=\"card\">\n              <div className=\"card-header\">\n                <h5 className=\"card-title\">Chủ đề</h5>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"container-fluid\">\n                  <div style={{ margin: '0' }} className=\"row\">\n                    <div className=\"col-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label>Chủ đề: </label>\n                        <input value={form.title} onChange={(e: React.FormEvent<HTMLInputElement>) => { setForm({ ...form, title: e.currentTarget.value }) }} type=\"text\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Thời gian bắt đầu: </label>\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setForm({ ...form, timeStart: e.currentTarget.valueAsNumber})\n                        }} type=\"datetime-local\" className=\"form-control\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Thời gian kết thúc: </label>\n                        <input onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                          setForm({ ...form, timeEnd: e.currentTarget.valueAsNumber })\n                        }} type=\"datetime-local\" className=\"form-control\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div style={{ paddingRight: '20px' }} className=\"cart-btn-bar\">\n                <button onClick={() => { onCloseModal() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1 btn-cancel\">Hủy</button>\n                <button onClick={() => { submit() }} style={{ float: 'right', margin: '20px' }} className=\"btn btn-primary mr-1\">Submit</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { Link, useParams } from \"react-router-dom\";\nimport PromotionModel from \"./model/PromotionModel\";\nimport FormModel from \"./model/FormModel\";\nimport { useEffect, useState } from \"react\";\nimport { Form, Page, Promotion, StatsForm } from \"./interface\";\nimport DetailStockPromotion from \"./promotion/DetailStockPromotion\";\nimport DetailLQuizPromotion from \"./promotion/DetailLQuizPromotion\";\n\nfunction DetailPromotion() {\n  let { id } = useParams();\n  const [promotion, setPromotion] = useState<Promotion>()\n  const [statsForm, setStatsForm] = useState<StatsForm>()\n\n  const fetchPromotionById = () => {\n    PromotionModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setPromotion(resp.data)\n        }\n      })\n  }\n\n  const fetchStatsPromotion = () => {\n    FormModel.statsByPromotion(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setStatsForm(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchPromotionById()\n    fetchStatsPromotion()\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {statsForm &&\n              <div className=\"col-md-12 col-xl-12\">\n                <div className=\"w-100\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div className=\"col mt-0\">\n                              <h5 className=\"card-title\">Số đơn tham gia</h5>\n                            </div>\n                            <div className=\"col-auto\">\n                              <div className=\"avatar\">\n                                <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-truck align-middle\"><rect x={1} y={3} width={15} height={13} /><polygon points=\"16 8 20 8 23 11 23 16 16 16 16 8\" /><circle cx=\"5.5\" cy=\"18.5\" r=\"2.5\" /><circle cx=\"18.5\" cy=\"18.5\" r=\"2.5\" /></svg>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <h1 className=\"display-5 mt-1 mb-3\">{statsForm.total}</h1>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div className=\"col mt-0\">\n                              <h5 className=\"card-title\">Số đơn được duyệt</h5>\n                            </div>\n                            <div className=\"col-auto\">\n                              <div className=\"avatar\">\n                                <div className=\"avatar-title rounded-circle bg-primary-dark\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-dollar-sign align-middle\"><line x1={12} y1={1} x2={12} y2={23} /><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" /></svg>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <h1 className=\"display-5 mt-1 mb-3\">{statsForm.approved}</h1>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n          <div className=\"row\">\n            {promotion?.type == 20 && <DetailStockPromotion />}\n            {promotion?.type == 21 && <DetailLQuizPromotion />}\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default DetailPromotion;\n","import \"react-responsive-modal/styles.css\";\nimport Modal from \"react-responsive-modal\";\nimport '../../src/popup/styles.scss'\nimport { useEffect, useReducer, useState } from \"react\";\nimport { StockForm } from \"../interface\";\nimport { City, District } from \"../utils/ProvinceUtil\";\nimport { AreYouSurePopup } from \"../popup\";\nimport FormModel from \"../model/FormModel\";\nimport AlertUtils from \"../utils/AlertUtils\";\nimport * as StockFormStatus from '../constant/StockFormStatus';\n\nfunction DetailStockForm({ data }: any) {\n  const [isShowImgModel, setIsShowImgModel] = useState(false)\n  const [isShowApporvedPopup, setIsShowApporvedPopup] = useState(false)\n  const [isRejectPopup, setIsRejectPopup] = useState(false)\n  const [form, setForm] = useState<StockForm>();\n\n  const updateStatus = (id: any, status: number) => {\n    FormModel.updateStatus(id, status)\n      .then(resp => {\n        if (resp.error == 0) {\n          AlertUtils.showSuccess(\"Thành công!\")\n        } else {\n          AlertUtils.showError(resp.msg)\n        }\n        fetchForm()\n      })\n  }\n\n  const fetchForm = () => {\n    FormModel.get(form?.id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setForm(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    setForm(data as StockForm)\n  }, [])\n\n  return (\n    <main className=\"content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 col-xl-12\">\n            <div className=\"tab-content\">\n              <div className=\"tab-pane fade show active\" id=\"account\" role=\"tabpanel\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h5 className=\"card-title mb-0\">Thông tin cửa hàng</h5>\n                  </div>\n                  <div className=\"card-body\">\n                    {form &&\n                      <form>\n                        <div className=\"row\">\n                          <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Tên</label>\n                              <input type=\"text\" className=\"form-control\" value={form.user.name} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Số điện thoại</label>\n                              <input type=\"text\" className=\"form-control\" value={form.user.phone} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Địa chỉ</label>\n                              <input type=\"text\" className=\"form-control\" value={`${form.user.address} - ${District.getName(form.user.districtId)} - ${City.getName(form.user.cityId)} `} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Thời gian</label>\n                              <input type=\"text\" className=\"form-control\" value={new Date(form.jsonImg.time).toLocaleString('vi')} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"inputUsername\">Vị trí</label>\n                              <input type=\"text\" className=\"form-control\" value={JSON.stringify(form.jsonImg.location)} />\n                            </div>\n                          </div>\n                          <div className=\"col-md-8\">\n                            <div className=\"text-center\">\n                              <img onClick={() => { setIsShowImgModel(true) }} src={form.jsonImg.url} className=\"img-responsive mt-2\" style={{ maxHeight: '500px', maxWidth: '500px', cursor: 'pointer' }} />\n                            </div>\n                          </div>\n                        </div>\n\n                      </form>\n                    }\n                  </div>\n                  <div className=\"card-footer\">\n                    {form?.status == StockFormStatus.INIT &&\n                      <>\n                        <button onClick={() => setIsShowApporvedPopup(true)} className=\"btn btn-danger m-btn-danger\">Duyệt</button>\n                        <AreYouSurePopup open={isShowApporvedPopup} onCloseModal={() => { setIsShowApporvedPopup(false) }}\n                          onAgree={() => {\n                            updateStatus(form?.id, StockFormStatus.APPROVED)\n                            setIsShowApporvedPopup(false)\n                          }} />\n\n                        <button onClick={() => setIsRejectPopup(true)} style={{ marginLeft: '30px', padding: '5px 30px' }} className=\"btn btn-delete\">Không duyệt</button>\n                        <AreYouSurePopup open={isRejectPopup} onCloseModal={() => { setIsRejectPopup(false) }}\n                          onAgree={() => {\n                            updateStatus(form?.id, StockFormStatus.REJECTED)\n                            setIsRejectPopup(false)\n                          }} />\n                      </>\n                    }\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {isShowImgModel &&\n          <ImagePopup open={isShowImgModel} onCloseModal={() => { setIsShowImgModel(false) }} url={form?.jsonImg.url} />\n        }\n      </div>\n    </main>\n  );\n}\n\nexport default DetailStockForm;\n\nconst owlClass = \"popup\";\nexport function ImagePopup({ open, onCloseModal, url }: any) {\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      center\n      showCloseIcon={false}\n      styles={{\n        modal: {\n          background: \"rgba(242, 242, 242, 0.94)\",\n          backdropFilter: \"blur(54.3656px)\",\n          borderRadius: \"14px\",\n          padding: \"0\",\n          maxWidth: \"80%\"\n        },\n      }}\n    >\n      <div className={owlClass}>\n        <div className={`${owlClass}__wrapper`}>\n          <img src={url} alt=\"\" />\n        </div>\n        <div className={`${owlClass}__group-btn`}>\n          <div\n            className={`${owlClass}__group-btn__item right`}\n            onClick={onCloseModal}\n          >\n            Đóng\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { useParams } from \"react-router-dom\";\nimport FormModel from \"./model/FormModel\";\nimport { useEffect, useState } from \"react\";\nimport { Form, StockForm } from \"./interface\";\nimport DetailStockForm from \"./promotion/DetailStockForm\";\n\n\nfunction DetailForm() {\n  let { id } = useParams();\n  const [form, setForm] = useState<Form>()\n\n  const fetchForm = () => {\n    FormModel.get(id)\n      .then(resp => {\n        if (resp.error == 0) {\n          setForm(resp.data)\n        }\n      })\n  }\n\n  useEffect(() => {\n    fetchForm()\n  }, [])\n\n  return (\n    <Layout>\n      {form && form.type == 20 &&\n        <DetailStockForm data={form} />\n      }\n    </Layout>\n\n  );\n}\n\nexport default DetailForm;\n","import Layout from \"./component/Layout\";\nimport \"react-responsive-modal/styles.css\";\nimport \"../src/popup/styles.scss\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport FormModel from \"./model/FormModel\";\nimport { LightingQuizForm, Page, Topic } from \"./interface\";\nimport { AreYouSurePopup } from \"./popup\";\nimport LQPromotionModel from \"./model/LQPromotionModel\";\nimport * as TopicStatus from './constant/TopicStatus';\n\nfunction ListLightingQuizForm() {\n  let { id, topicId } = useParams();\n  const [page, setPage] = useState<Page<LightingQuizForm>>()\n  const [isShowPopup, setIsShowPopup] = useState(false)\n  const [topic, setTopic] = useState<Topic>()\n\n  const fetchTopic = () => {\n    LQPromotionModel.getTopic(id, topicId)\n      .then(resp => {\n        if (resp.error == 0) {\n          setTopic(resp.data)\n        }\n      })\n  }\n\n  const fetchLQForm = (promotionId: any, topicId: any) => {\n    FormModel.findLQForm(promotionId, topicId, 0, 100)\n      .then(resp => {\n        setPage(resp.data)\n      })\n  }\n\n  const endTopic = (promotionId: any, topicId: any) => {\n    FormModel.endTopic(promotionId, topicId)\n      .then(resp => {\n        if (resp.error == 0) {\n          fetchLQForm(promotionId, topicId)\n        }\n      });\n  }\n\n  useEffect(() => {\n    fetchLQForm(id, topicId)\n  }, [])\n\n  return (\n    <Layout>\n      <main className=\"content\">\n        <div className=\"container-fluid\">\n          <AreYouSurePopup open={isShowPopup} onAgree={() => {\n            setIsShowPopup(false)\n            endTopic(id, topicId)\n          }} onCloseModal={() => {\n            setIsShowPopup(false)\n          }} />\n          <div className=\"row\">\n            <div className=\"col-12 col-xl-12\">\n\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h5 className=\"card-title m-card-title\">Dach sách tham gia</h5>\n                  {topic && topic.status == TopicStatus.LOCKED &&\n                    <div className=\"cart-btn-bar\">\n                      <button onClick={() => { setIsShowPopup(true) }} className=\"btn btn-primary mr-1\">Duyệt BXH</button>\n                    </div>\n                  }\n                </div>\n                <table className=\"table table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Avatar</th>\n                      <th>Name</th>\n                      <th>Point</th>\n                      <th>Duration</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {page && page.list && page.list.map((form, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>{<img className=\"avatar\" src={form.user.avatar} />}</td>\n                          <td>{form.user.name}</td>\n                          <td>{form.point}</td>\n                          <td>{(form.jsonDetail.timeEnd - form.jsonDetail.timeStart) / 1000} giây</td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n\n  );\n}\n\nexport default ListLightingQuizForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport Alert from 'react-s-alert';\n\nimport '../src/resource/css/modern.css';\nimport '../src/resource/css/index.css'\nimport Retailer from './Retailer';\nimport Dashboard from './Dashboard';\nimport StockForm from './StockForm';\nimport DetailRetailer from './DetailRetailer';\nimport CreatePost from './CreatePost';\n\n\nimport reportWebVitals from './reportWebVitals';\nimport Posts from './Posts';\nimport UpdatePost from './UpdatePost';\nimport CreatePromotion from './CreatePromotion';\nimport Promotions from './Promotions';\nimport DetailPromotion from './DetailPromotion';\nimport DetailForm from '../src/DetailForm';\nimport ListLightingQuizForm from './ListLightingQuizForm';\n\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n        <Route path=\"/retailer\" element={<Retailer />} />\n        <Route path=\"/stock-form\" element={<StockForm />} />\n        <Route path=\"/retailer/:id\" element={<DetailRetailer />} />\n        <Route path=\"/post/create\" element={<CreatePost />} />\n        <Route path=\"/post/detail/:id\" element={<UpdatePost />} />\n        <Route path=\"/post\" element={<Posts />} />\n        <Route path=\"/promotion/create\" element={<CreatePromotion />}/>\n        <Route path=\"/promotion\" element={<Promotions />} />\n        <Route path=\"/form/list/:id/:topicId\" element={<ListLightingQuizForm />} />\n        <Route path=\"/promotion/detail/:id\" element={<DetailPromotion />} />\n        <Route path=\"/promotion/detail/:id/:topicId\" element={<DetailPromotion />} />\n        <Route path=\"/form/detail/:id\" element={<DetailForm />} />\n        <Route path=\"/form/detail/:id/*\" element={<DetailForm />} />\n\n      </Routes>\n    </BrowserRouter>\n    <Alert stack={{ limit: 3 }} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}